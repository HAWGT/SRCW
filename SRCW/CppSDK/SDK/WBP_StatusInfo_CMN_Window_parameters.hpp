#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusInfo_CMN_Window

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.ClosePointRewardDetail
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail final
{
public:
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_ClosePointRewardDetail::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.Display Point Reward Detail
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail final
{
public:
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_Display_Point_Reward_Detail::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.DisplayRuleDetail
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail final
{
public:
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StasusInfo_Sub_RaceRuleDetail_C*   K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail, CallFunc_GetCurrentPage_ReturnValue) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail, K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail::K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_DisplayRuleDetail::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.ExecuteUbergraph_WBP_StatusInfo_CMN_Window
// 0x0730 (0x0730 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_PlayerDetail_C*         K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  Temp_byte_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_1; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_27;             // 0x005C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_26;             // 0x0060(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_25;             // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_24;             // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_23;             // 0x006C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_22;             // 0x0070(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_21;             // 0x0074(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_20;             // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_19;             // 0x007C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_18;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_17;             // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_16;             // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_15;             // 0x008C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_14;             // 0x0090(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_3;                              // 0x0098(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value_2;                              // 0x00A8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_13;             // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_12;             // 0x00BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_11;             // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_10;             // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_9;              // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_8;              // 0x00CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_7;              // 0x00D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Value_1;                              // 0x00D8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_Value;                                // 0x00E8(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_6;              // 0x00F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_5;              // 0x00FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_4;              // 0x0100(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_3;              // 0x0104(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_2;              // 0x0108(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex_1;              // 0x010C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PlayerControllerIndex;                // 0x0110(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bOnce;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Ranking;                              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Point_1;                              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_TextureBG_1;                          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Event_StartTime;                            // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              K2Node_Event_EndTime;                              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_2; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_3; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EventEndInfo_Sub_Details_C*        K2Node_DynamicCast_AsWBP_Event_End_Info_Sub_Details; // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Point;                                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFestaPointRewardUIData>        K2Node_Event_InPointRewardData;                    // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	class UTexture2D*                             K2Node_Event_TextureBG;                            // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_4; // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroupRaceRule                                K2Node_Event_DefaultRule;                          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaRuleInfomation>           K2Node_Event_RuleDataArray;                        // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	class UWBP_StatusInfo_Sub_RaceRule_C*         K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule; // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_StatusInfo_Sub_RaceRuleTable_C*> K2Node_MakeArray_Array;                       // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_5; // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0220(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaStreakRewardUIData>       K2Node_Event_InStreakRewardData;                   // 0x0238(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FFestaRankingRewardUIData>      K2Node_Event_InRankingRewardData;                  // 0x0248(0x0010)(ConstParm, ReferenceParm)
	class UWBP_StatusInfo_Sub_RaceRule_C*         K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_1; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Honor_C*            K2Node_DynamicCast_AsWBP_Status_Info_Sub_Honor;    // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_Array_Get_Item_1;                         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0284(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0294(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_1;             // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x02B0(0x0010)()
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_2;             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_LocalizeDateTimePlaceholder_ReturnValue;  // 0x02C8(0x0010)()
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_3;             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_6; // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_4;             // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_7; // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x02FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x030C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x031C(0x0004)()
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_5;             // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0324(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Ranking_C*          K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking;  // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Ranking_Friend_C*   K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend; // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0364(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0374(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  K2Node_Event_NextPage;                             // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_TabIndex;                             // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RuleIndex;                            // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 TabIndex)>               K2Node_CreateDelegate_OutputDelegate_10;           // 0x0390(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_1;                  // 0x03A4(0x0004)()
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_6;             // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x3];                                      // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_2;                  // 0x03AC(0x0004)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisplayRanking_ReturnValue;             // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x03B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeftKeyPressLoop_ReturnValue;           // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x03B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x03B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x03BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x03CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x03E0(0x0010)()
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_8; // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0404(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_9; // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x2];                                      // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ButtonIndex, int32 ViewTopDataIndex, int32 SelectDataIndex)> K2Node_CreateDelegate_OutputDelegate_14; // 0x0424(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ButtonIndex_2;                  // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InputIndex;                     // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SelectIndex;                    // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RuleIndex_3;                    // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RuleIndex_2;                    // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnablePlatformSwitch_ReturnValue;       // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_7;             // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x044F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0450(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x2];                                      // 0x0462(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ButtonIndex)>            K2Node_CreateDelegate_OutputDelegate_16;           // 0x0464(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_8;             // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 RuleIndex)>              K2Node_CreateDelegate_OutputDelegate_17;           // 0x0478(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_3;                  // 0x048C(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_4;                  // 0x0490(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_5;                  // 0x0494(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_6;                  // 0x0498(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_7;                  // 0x049C(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_8;                  // 0x04A0(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_9;                  // 0x04A4(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_10;                 // 0x04A8(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_11;                 // 0x04AC(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_12;                 // 0x04B0(0x0004)()
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_9;             // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 RuleIndex)>              K2Node_CreateDelegate_OutputDelegate_18;           // 0x04B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x2];                                      // 0x04D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFestaRankingRewardUIData              CallFunc_Array_Get_Item_2;                         // 0x04D4(0x000C)(NoDestructor)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_10;            // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Ranking_Friend_C*   K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend_1; // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMenuInputRecieveInterface> CallFunc_OnFaceButtonLeftPressed_self_CastInput; // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRightKeyPressLoop_ReturnValue;          // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50A[0x6];                                      // 0x050A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetOpenUserNoteTargetData_outPlatformUserID; // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetOpenUserNoteTargetData_ServerPFCode;   // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWBP_StatusInfo_PlayerDetail_C*         K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_1; // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOpenGamerCard_ShouldOpen;           // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldOpenGamerCard_ShouldOpen_1;         // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B[0x5];                                      // 0x053B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_1; // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetOpenUserNoteTargetData_ServerPFCode_1; // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDispPFButton_ReturnValue;               // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_PlayerDetail_C*         K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_2; // 0x0568(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_11;            // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0572(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_573[0x5];                                      // 0x0573(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Ranking_C*          K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_1; // 0x0578(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMenuInputRecieveInterface> CallFunc_OnFaceButtonLeftPressed_self_CastInput_1; // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_StatusInfo_PlayerDetail_C*         K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_3; // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x05A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_12;            // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StasusInfo_Sub_RaceRuleDetail_C*   K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail; // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue_13;            // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C6[0x2];                                      // 0x05C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CD[0x3];                                      // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x05D8(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x05E8(0x0010)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_13;                 // 0x05F8(0x0004)()
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue_14;                 // 0x05FC(0x0004)()
	bool                                          CallFunc_IsDownKeyPressLoop_ReturnValue;           // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x3];                                      // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x0604(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x0614(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUpKeyPressLoop_ReturnValue;             // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0628(0x0010)()
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0648(0x0010)()
	TScriptInterface<class IMenuInputRecieveInterface> K2Node_Select_Default;                        // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RuleIndex_1;                    // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D[0x3];                                      // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RuleIndex;                      // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_RaceRule_C*         K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_2; // 0x0678(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ButtonIndex_1;                  // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68A[0x2];                                      // 0x068A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ButtonIndex;                    // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ViewTopDataIndex;               // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SelectDataIndex;                // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_10; // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2[0x6];                                      // 0x06B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x06B8(0x0010)()
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  Temp_byte_Variable_1;                              // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StasusInfo_Sub_RaceRuleDetail_C*   K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail_1; // 0x06D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x06E0(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_2; // 0x06F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetOpenUserNoteTargetData_ServerPFCode_2; // 0x0708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDispPFButton_ReturnValue_1;             // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x3];                                      // 0x0721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window) == 0x000730, "Wrong size on WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, EntryPoint) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable) == 0x000024, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000028, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000034, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_byte_Variable) == 0x000035, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable) == 0x000036, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_1) == 0x000038, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_1) == 0x000044, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_2) == 0x000048, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable) == 0x00004C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_27) == 0x00005C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_27' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_26) == 0x000060, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_26' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_25) == 0x000064, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_25' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_24) == 0x000068, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_24' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_23) == 0x00006C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_23' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_22) == 0x000070, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_22' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_21) == 0x000074, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_21' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_20) == 0x000078, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_20' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_19) == 0x00007C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_19' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_18) == 0x000080, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_18' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_17) == 0x000084, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_17' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_16) == 0x000088, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_16' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_15) == 0x00008C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_15' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_14) == 0x000090, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_14' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Value_3) == 0x000098, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Value_2) == 0x0000A8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_13) == 0x0000B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_13' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_12) == 0x0000BC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_12' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_11) == 0x0000C0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_10) == 0x0000C4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_9) == 0x0000C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_8) == 0x0000CC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_7) == 0x0000D0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Value_1) == 0x0000D8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Value) == 0x0000E8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_6) == 0x0000F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_5) == 0x0000FC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_4) == 0x000100, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_3) == 0x000104, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_2) == 0x000108, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex_1) == 0x00010C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_PlayerControllerIndex) == 0x000110, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_PlayerControllerIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_bOnce) == 0x000114, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_bOnce' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_PlayAnimation_ReturnValue) == 0x000118, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_PlayAnimation_ReturnValue_1) == 0x000120, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_PlayAnimation_ReturnValue_2) == 0x000138, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_1) == 0x000140, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Ranking) == 0x000150, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Ranking' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Point_1) == 0x000154, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Point_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_TextureBG_1) == 0x000158, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_TextureBG_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_StartTime) == 0x000160, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_StartTime' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_EndTime) == 0x000168, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_EndTime' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_2) == 0x000170, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_3) == 0x000180, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_4) == 0x000188, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_1) == 0x000189, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Event_End_Info_Sub_Details) == 0x000190, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Event_End_Info_Sub_Details' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_5) == 0x000198, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_1) == 0x000199, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_Point) == 0x00019C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_Point' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_InPointRewardData) == 0x0001A0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_InPointRewardData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_TextureBG) == 0x0001B0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_TextureBG' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_3) == 0x0001B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_4) == 0x0001C0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_6) == 0x0001C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_DefaultRule) == 0x0001C9, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_DefaultRule' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_RuleDataArray) == 0x0001D0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_RuleDataArray' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule) == 0x0001E0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_7) == 0x0001E8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Not_PreBool_ReturnValue) == 0x0001E9, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001EA, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_MakeArray_Array) == 0x0001F0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Get_Item) == 0x000200, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Less_IntInt_ReturnValue) == 0x00020C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_5) == 0x000210, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_8) == 0x000218, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable) == 0x000220, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Length_ReturnValue_1) == 0x000230, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Less_IntInt_ReturnValue_1) == 0x000234, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_InStreakRewardData) == 0x000238, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_InStreakRewardData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_InRankingRewardData) == 0x000248, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_InRankingRewardData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_1) == 0x000258, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_9) == 0x000260, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Length_ReturnValue_2) == 0x000264, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Length_ReturnValue_3) == 0x000268, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Honor) == 0x000270, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Honor' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_10) == 0x000278, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Array_Index_Variable_1) == 0x00027C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Get_Item_1) == 0x000280, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_2) == 0x000281, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue) == 0x000282, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess) == 0x000283, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_2) == 0x000284, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_3) == 0x000294, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_3) == 0x0002A4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_1) == 0x0002A5, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002A6, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_2) == 0x0002A7, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_4) == 0x0002A8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_MakeLiteralText_ReturnValue) == 0x0002B0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_2) == 0x0002C0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_LocalizeDateTimePlaceholder_ReturnValue) == 0x0002C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_LocalizeDateTimePlaceholder_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_3) == 0x0002D8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_6) == 0x0002E0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_11) == 0x0002E8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_4) == 0x0002E9, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_7) == 0x0002F0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_12) == 0x0002F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002FC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_5) == 0x00030C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue) == 0x00031C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_5) == 0x000320, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_6) == 0x000324, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking) == 0x000338, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_13) == 0x000340, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend) == 0x000348, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_14) == 0x000350, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_7) == 0x000354, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_8) == 0x000364, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_9) == 0x000374, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_NextPage) == 0x000384, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_NextPage' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_TabIndex) == 0x000388, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_TabIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Event_RuleIndex) == 0x00038C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Event_RuleIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_10) == 0x000390, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_3) == 0x0003A0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_1) == 0x0003A4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_6) == 0x0003A8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_2) == 0x0003AC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003B0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsDisplayRanking_ReturnValue) == 0x0003B1, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsDisplayRanking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_4) == 0x0003B2, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_4) == 0x0003B3, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsLeftKeyPressLoop_ReturnValue) == 0x0003B4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsLeftKeyPressLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_5) == 0x0003B5, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsVisible_ReturnValue) == 0x0003B6, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanOR_ReturnValue) == 0x0003B7, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_5) == 0x0003B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_11) == 0x0003BC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_12) == 0x0003CC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_1) == 0x0003E0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_8) == 0x0003F0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_15) == 0x0003F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003FC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000400, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Less_IntInt_ReturnValue_2) == 0x000401, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_13) == 0x000404, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_9) == 0x000418, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_16) == 0x000420, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000421, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_14) == 0x000424, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_ButtonIndex_2) == 0x000434, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_ButtonIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_InputIndex) == 0x000438, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_InputIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_SelectIndex) == 0x00043C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_SelectIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000440, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_RuleIndex_3) == 0x000444, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_RuleIndex_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_RuleIndex_2) == 0x000448, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_RuleIndex_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00044C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsEnablePlatformSwitch_ReturnValue) == 0x00044D, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsEnablePlatformSwitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_7) == 0x00044E, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00044F, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_15) == 0x000450, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Not_PreBool_ReturnValue_1) == 0x000460, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanAND_ReturnValue) == 0x000461, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_16) == 0x000464, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_8) == 0x000474, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_17) == 0x000478, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000488, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_3) == 0x00048C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_4) == 0x000490, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_5) == 0x000494, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_6) == 0x000498, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_7) == 0x00049C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_8) == 0x0004A0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_9) == 0x0004A4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_10) == 0x0004A8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_11) == 0x0004AC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_12) == 0x0004B0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_9) == 0x0004B4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_18) == 0x0004B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0004C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Array_Index_Variable_2) == 0x0004CC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanAND_ReturnValue_1) == 0x0004D0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004D1, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Array_Get_Item_2) == 0x0004D4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_10) == 0x0004E0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend_1) == 0x0004E8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_17) == 0x0004F0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_OnFaceButtonLeftPressed_self_CastInput) == 0x0004F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_OnFaceButtonLeftPressed_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsRightKeyPressLoop_ReturnValue) == 0x000508, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsRightKeyPressLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanOR_ReturnValue_1) == 0x000509, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_outPlatformUserID) == 0x000510, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_outPlatformUserID' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_ServerPFCode) == 0x000520, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_ServerPFCode' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_1) == 0x000530, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_18) == 0x000538, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_ShouldOpenGamerCard_ShouldOpen) == 0x000539, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_ShouldOpenGamerCard_ShouldOpen' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_ShouldOpenGamerCard_ShouldOpen_1) == 0x00053A, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_ShouldOpenGamerCard_ShouldOpen_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_1) == 0x000540, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_ServerPFCode_1) == 0x000550, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_ServerPFCode_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsDispPFButton_ReturnValue) == 0x000560, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsDispPFButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_2) == 0x000568, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_19) == 0x000570, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_11) == 0x000571, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess_2) == 0x000572, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_1) == 0x000578, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_20) == 0x000580, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_OnFaceButtonLeftPressed_self_CastInput_1) == 0x000588, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_OnFaceButtonLeftPressed_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_3) == 0x000598, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Player_Detail_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_21) == 0x0005A0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_19) == 0x0005A4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_12) == 0x0005B4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail) == 0x0005B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_22) == 0x0005C0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess_3) == 0x0005C1, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsVisible_ReturnValue_1) == 0x0005C2, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetCurrentPage_ReturnValue_13) == 0x0005C3, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetCurrentPage_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess_4) == 0x0005C4, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_SwitchEnum_CmpSuccess_5) == 0x0005C5, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Loop_Counter_Variable_2) == 0x0005C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005CC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue_3) == 0x0005D0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_2) == 0x0005D8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_3) == 0x0005E8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_13) == 0x0005F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_SoundPlay_ReturnValue_14) == 0x0005FC, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_SoundPlay_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsDownKeyPressLoop_ReturnValue) == 0x000600, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsDownKeyPressLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_20) == 0x000604, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CreateDelegate_OutputDelegate_21) == 0x000614, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsUpKeyPressLoop_ReturnValue) == 0x000624, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsUpKeyPressLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_4) == 0x000628, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Has_Been_Initd_Variable_6) == 0x000638, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue_4) == 0x00063C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Variable) == 0x000640, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_5) == 0x000648, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Select_Default) == 0x000658, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_RuleIndex_1) == 0x000668, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_RuleIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Variable_1) == 0x00066C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_RuleIndex) == 0x000670, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_RuleIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_2) == 0x000678, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Race_Rule_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_23) == 0x000680, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_ButtonIndex_1) == 0x000684, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_ButtonIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Variable_2) == 0x000688, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_Variable_3) == 0x000689, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_5) == 0x00068C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Select_Default_1) == 0x000690, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_ButtonIndex) == 0x000694, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_ViewTopDataIndex) == 0x000698, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_ViewTopDataIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_CustomEvent_SelectDataIndex) == 0x00069C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_CustomEvent_SelectDataIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_Add_IntInt_ReturnValue_5) == 0x0006A0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_10) == 0x0006A8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_24) == 0x0006B0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_bool_IsClosed_Variable_6) == 0x0006B1, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_text_Variable_6) == 0x0006B8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsVisible_ReturnValue_2) == 0x0006C8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_byte_Variable_1) == 0x0006C9, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail_1) == 0x0006D0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_AsWBP_Stasus_Info_Sub_Race_Rule_Detail_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_DynamicCast_bSuccess_25) == 0x0006D8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Select_Default_2) == 0x0006E0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanAND_ReturnValue_2) == 0x0006F0, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_2) == 0x0006F8, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_outPlatformUserID_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_GetOpenUserNoteTargetData_ServerPFCode_2) == 0x000708, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_GetOpenUserNoteTargetData_ServerPFCode_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_IsDispPFButton_ReturnValue_1) == 0x000718, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_IsDispPFButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_6) == 0x00071C, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, CallFunc_BooleanAND_ReturnValue_3) == 0x000720, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, Temp_int_Variable_7) == 0x000724, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window, K2Node_Select_Default_3) == 0x000728, "Member 'WBP_StatusInfo_CMN_Window_C_ExecuteUbergraph_WBP_StatusInfo_CMN_Window::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.GetDateString
// 0x0038 (0x0038 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_GetDateString final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   DateText;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_FormatDateTime_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_GetDateString) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_GetDateString");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_GetDateString) == 0x000038, "Wrong size on WBP_StatusInfo_CMN_Window_C_GetDateString");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_GetDateString, DateTime) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_GetDateString::DateTime' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_GetDateString, DateText) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_GetDateString::DateText' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_GetDateString, CallFunc_FormatDateTime_ReturnValue) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_GetDateString::CallFunc_FormatDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_GetDateString, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WBP_StatusInfo_CMN_Window_C_GetDateString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.IsDisplayRanking
// 0x0009 (0x0009 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_IsDisplayRanking final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking) == 0x000001, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_IsDisplayRanking");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking) == 0x000009, "Wrong size on WBP_StatusInfo_CMN_Window_C_IsDisplayRanking");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, ReturnValue) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_byte_Variable) == 0x000001, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_bool_Variable) == 0x000002, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_bool_Variable_2) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_bool_Variable_3) == 0x000005, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, Temp_bool_Variable_4) == 0x000006, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, CallFunc_GetCurrentPage_ReturnValue) == 0x000007, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_IsDisplayRanking, K2Node_Select_Default) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_IsDisplayRanking::K2Node_Select_Default' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnAcceptKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnAcceptKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnAcceptKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnAcceptKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnBackKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnBackKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnBackKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnBackKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnClicked_PointReward
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward, ButtonIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnClicked_PointReward::ButtonIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnClicked_Rule
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnClicked_Rule final
{
public:
	int32                                         RuleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnClicked_Rule) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnClicked_Rule");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnClicked_Rule) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnClicked_Rule");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnClicked_Rule, RuleIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnClicked_Rule::RuleIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnDownKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnDownKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnDownKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnDownKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnFaceButtonLeftPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnFaceButtonLeftReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnFaceButtonLeftReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnFaceButtonTopPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnFaceButtonTopReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnFaceButtonTopReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnHovered_PointReward
// 0x000C (0x000C - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ViewTopDataIndex;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectDataIndex;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward) == 0x00000C, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward, ButtonIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward::ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward, ViewTopDataIndex) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward::ViewTopDataIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward, SelectDataIndex) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_OnHovered_PointReward::SelectDataIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnHovered_Rule
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnHovered_Rule final
{
public:
	int32                                         RuleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnHovered_Rule) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnHovered_Rule");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnHovered_Rule) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnHovered_Rule");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnHovered_Rule, RuleIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnHovered_Rule::RuleIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis) == 0x000010, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis, Value) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftStickAxis::Value' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnLeftStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnLeftStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnMouseClicked_Rule
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule final
{
public:
	int32                                         RuleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule, RuleIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnMouseClicked_Rule::RuleIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnMouseHovered_PointReward
// 0x000C (0x000C - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InputIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward) == 0x00000C, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward, ButtonIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward::ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward, InputIndex) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward::InputIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward, SelectIndex) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_OnMouseHovered_PointReward::SelectIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnMouseHovered_Rule
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule final
{
public:
	int32                                         RuleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule, RuleIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnMouseHovered_Rule::RuleIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnPressed_Tab
// 0x0098 (0x0098 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnPressed_Tab final
{
public:
	int32                                         TabIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	struct FSoundHandle                           CallFunc_SoundPlay_ReturnValue;                    // 0x0058(0x0004)()
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnPressed_Tab");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab) == 0x000098, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnPressed_Tab");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, TabIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::TabIndex' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, CallFunc_SoundPlay_ReturnValue) == 0x000058, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::CallFunc_SoundPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, CallFunc_Format_ReturnValue) == 0x000070, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnPressed_Tab, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'WBP_StatusInfo_CMN_Window_C_OnPressed_Tab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightShoulderPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightShoulderPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightShoulderReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightShoulderReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightStickAxis
// 0x0010 (0x0010 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightStickAxis final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxis) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightStickAxis");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxis) == 0x000010, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightStickAxis");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxis, Value) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightStickAxis::Value' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightStickAxisWithPlayerId
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerControllerIndex;                             // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId, Value) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId::Value' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId, PlayerControllerIndex) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightStickAxisWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightStickButtonPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightStickButtonPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnRightStickButtonReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnRightStickButtonReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnSpecialPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnSpecialPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnSpecialReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnSpecialReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnUpKeyPressedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnUpKeyPressedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.OnUpKeyReleasedWithPlayerId
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId final
{
public:
	int32                                         PlayerControllerIndex;                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId, PlayerControllerIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_OnUpKeyReleasedWithPlayerId::PlayerControllerIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SelectRuleDirectly
// 0x0004 (0x0004 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly final
{
public:
	int32                                         RuleIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly) == 0x000004, "Wrong size on WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly, RuleIndex) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SelectRuleDirectly::RuleIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetFooterSetting
// 0x0068 (0x0068 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetFooterSetting final
{
public:
	EEventInfoWidgetPageCategory                  NextPage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0040(0x0010)()
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0050(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetFooterSetting");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting) == 0x000068, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetFooterSetting");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, NextPage) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::NextPage' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_bool_Variable) == 0x000001, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable) == 0x000002, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_2) == 0x000005, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_3) == 0x000006, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_bool_Variable_2) == 0x000007, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_4) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_5) == 0x000009, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_6) == 0x00000A, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_7) == 0x00000B, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_8) == 0x00000C, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_9) == 0x00000D, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_bool_Variable_3) == 0x00000E, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_10) == 0x00000F, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, Temp_byte_Variable_11) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, K2Node_Select_Default) == 0x000012, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, K2Node_Select_Default_1) == 0x000014, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, K2Node_Select_Default_2) == 0x000015, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, K2Node_Select_Default_3) == 0x000028, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000040, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, CallFunc_SelectText_ReturnValue) == 0x000050, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetFooterSetting, K2Node_Select_Default_4) == 0x000060, "Member 'WBP_StatusInfo_CMN_Window_C_SetFooterSetting::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetPage
// 0x0008 (0x0008 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetPage final
{
public:
	EEventInfoWidgetPageCategory                  NextPage;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TabIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetPage) == 0x000004, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetPage");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetPage) == 0x000008, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetPage");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPage, NextPage) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetPage::NextPage' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPage, TabIndex) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_SetPage::TabIndex' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetPlatformText
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetPlatformText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAppSupportedPlatform                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_Ranking_Friend_C*   K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0010)()
	EAppSupportedPlatform                         CallFunc_GetPlatform_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0040(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0050(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0060(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x0070(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x0080(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x0090(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0010)(ConstParm)
	class UWBP_StatusInfo_Sub_Ranking_C*          K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking;  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00C0(0x0010)(ConstParm)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetPlatformText) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetPlatformText");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetPlatformText) == 0x0000D0, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetPlatformText");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, Temp_bool_Variable) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, Temp_byte_Variable) == 0x000001, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_GetCurrentPage_ReturnValue) == 0x000002, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking_Friend' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_GetPlatform_ReturnValue) == 0x000028, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_GetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000040, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000050, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000060, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_5) == 0x000070, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_6) == 0x000080, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, CallFunc_MakeLiteralText_ReturnValue_7) == 0x000090, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking) == 0x0000B0, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Ranking' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetPlatformText, K2Node_Select_Default_1) == 0x0000C0, "Member 'WBP_StatusInfo_CMN_Window_C_SetPlatformText::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupFinalResult
// 0x0010 (0x0010 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupFinalResult final
{
public:
	int32                                         Ranking;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Point;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             TextureBG;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupFinalResult) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupFinalResult");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupFinalResult) == 0x000010, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupFinalResult");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupFinalResult, Ranking) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupFinalResult::Ranking' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupFinalResult, Point) == 0x000004, "Member 'WBP_StatusInfo_CMN_Window_C_SetupFinalResult::Point' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupFinalResult, TextureBG) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetupFinalResult::TextureBG' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupOtherResult
// 0x0020 (0x0020 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupOtherResult final
{
public:
	TArray<struct FFestaStreakRewardUIData>       InStreakRewardData;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FFestaRankingRewardUIData>      InRankingRewardData;                               // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupOtherResult) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupOtherResult");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupOtherResult) == 0x000020, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupOtherResult");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupOtherResult, InStreakRewardData) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupOtherResult::InStreakRewardData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupOtherResult, InRankingRewardData) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_SetupOtherResult::InRankingRewardData' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupPointResult
// 0x0020 (0x0020 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupPointResult final
{
public:
	int32                                         Point;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaPointRewardUIData>        InPointRewardData;                                 // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             TextureBG;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupPointResult) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupPointResult");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupPointResult) == 0x000020, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupPointResult");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupPointResult, Point) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupPointResult::Point' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupPointResult, InPointRewardData) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetupPointResult::InPointRewardData' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupPointResult, TextureBG) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_SetupPointResult::TextureBG' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupRuleInfomation
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation final
{
public:
	EGroupRaceRule                                DefaultRule;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFestaRuleInfomation>           RuleDataArray;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation, DefaultRule) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation::DefaultRule' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation, RuleDataArray) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleInfomation::RuleDataArray' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupRuleTableWidget
// 0x0028 (0x0028 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget final
{
public:
	TArray<struct FFestaRuleInfomation>           RuleArray;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_StatusInfo_Sub_RaceRuleTable_C*    RaceRuleTableWidget;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget) == 0x000028, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget, RuleArray) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget::RuleArray' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget, Index_0) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget, RaceRuleTableWidget) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget::RaceRuleTableWidget' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WBP_StatusInfo_CMN_Window_C_SetupRuleTableWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupShedule
// 0x0010 (0x0010 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupShedule final
{
public:
	struct FDateTime                              StartTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              endTime;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupShedule) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupShedule");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupShedule) == 0x000010, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupShedule");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupShedule, StartTime) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupShedule::StartTime' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupShedule, endTime) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_SetupShedule::endTime' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SetupTitle
// 0x0058 (0x0058 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SetupTitle final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0010)(ConstParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0018(0x0010)(ConstParm)
	class FText                                   CallFunc_GetTerminologyTextByText_ReturnValue;     // 0x0028(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0040(0x0010)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SetupTitle) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SetupTitle");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SetupTitle) == 0x000058, "Wrong size on WBP_StatusInfo_CMN_Window_C_SetupTitle");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, Temp_text_Variable) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, Temp_bool_Variable) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, Temp_byte_Variable) == 0x000011, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, Temp_byte_Variable_2) == 0x000013, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, CallFunc_GetCurrentPage_ReturnValue) == 0x000014, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, K2Node_Select_Default) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, CallFunc_GetTerminologyTextByText_ReturnValue) == 0x000028, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::CallFunc_GetTerminologyTextByText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, CallFunc_MakeLiteralText_ReturnValue) == 0x000040, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, K2Node_Select_Default_1) == 0x000050, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SetupTitle, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'WBP_StatusInfo_CMN_Window_C_SetupTitle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.ShouldOpenGamerCard
// 0x0018 (0x0018 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard final
{
public:
	class FString                                 ServerPFCode;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ShouldOpen;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDispPFButton_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventInfoWidgetPageCategory                  CallFunc_GetCurrentPage_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard) == 0x000018, "Wrong size on WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard, ServerPFCode) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard::ServerPFCode' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard, ShouldOpen) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard::ShouldOpen' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard, CallFunc_IsDispPFButton_ReturnValue) == 0x000011, "Member 'WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard::CallFunc_IsDispPFButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard, CallFunc_GetCurrentPage_ReturnValue) == 0x000012, "Member 'WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard::CallFunc_GetCurrentPage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard, K2Node_SwitchEnum_CmpSuccess) == 0x000013, "Member 'WBP_StatusInfo_CMN_Window_C_ShouldOpenGamerCard::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.SilentFocusReady
// 0x0001 (0x0001 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_SilentFocusReady final
{
public:
	bool                                          bOnce;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_SilentFocusReady) == 0x000001, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_SilentFocusReady");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_SilentFocusReady) == 0x000001, "Wrong size on WBP_StatusInfo_CMN_Window_C_SilentFocusReady");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_SilentFocusReady, bOnce) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_SilentFocusReady::bOnce' has a wrong offset!");

// Function WBP_StatusInfo_CMN_Window.WBP_StatusInfo_CMN_Window_C.UpdatePointRewardDetail
// 0x0020 (0x0020 - 0x0000)
struct WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail final
{
public:
	class UWBP_StatusInfo_Sub_Point_Reward_C*     L_WBP_PointReward;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_StatusInfo_Sub_Point_Reward_C*     K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardType                                   CallFunc_GetSelectRewardData_RewardType;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectRewardData_RewardId;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectRewardData_DonpaticketNum;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail) == 0x000008, "Wrong alignment on WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail");
static_assert(sizeof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail) == 0x000020, "Wrong size on WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, L_WBP_PointReward) == 0x000000, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::L_WBP_PointReward' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward) == 0x000008, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::K2Node_DynamicCast_AsWBP_Status_Info_Sub_Point_Reward' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, CallFunc_GetSelectRewardData_RewardType) == 0x000011, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::CallFunc_GetSelectRewardData_RewardType' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, CallFunc_GetSelectRewardData_RewardId) == 0x000014, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::CallFunc_GetSelectRewardData_RewardId' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, CallFunc_GetSelectRewardData_DonpaticketNum) == 0x000018, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::CallFunc_GetSelectRewardData_DonpaticketNum' has a wrong offset!");
static_assert(offsetof(WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'WBP_StatusInfo_CMN_Window_C_UpdatePointRewardDetail::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

