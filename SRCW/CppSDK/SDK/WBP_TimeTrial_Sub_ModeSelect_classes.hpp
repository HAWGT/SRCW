#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimeTrial_Sub_ModeSelect

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TimeTrial_Sub_ModeSelect.WBP_TimeTrial_Sub_ModeSelect_C
// 0x0058 (0x0498 - 0x0440)
class UWBP_TimeTrial_Sub_ModeSelect_C final : public UTimeTrialGhostSelect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TimeTrial_ModeSelect_Out;                          // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_ModeSelect_Loop;                         // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeTrial_ModeSelect_In;                           // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               FooterShortCut;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteraction;                                  // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FooterShortCut_C*                  PAT_WBP_FooterShortCut;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_BtnPlay_Offline_C*   WBP_TestTimeTrial_Sub_BtnPlay_Offline;             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_BtnPlay_Online_C*    WBP_TestTimeTrial_Sub_BtnPlay_Online;              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TimeTrial_Sub_Header_StageName_C*  WBP_TimeTrial_Sub_Header_StageName;                // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButtonsPanel*                   ButtonsPanel;                                      // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TimeTrial_Sub_ModeSelect(int32 EntryPoint);
	void Finished_0944856047D491D258557E86C61F2F11();
	void Finished_11C56772402C17511FF6649835B0DA19();
	void PlayInAnimation();
	void PlayOutAnimation();
	void SetFooterVisible(bool bIsEnable);
	void SubModeSetup(const EStageId InStageId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TimeTrial_Sub_ModeSelect_C">();
	}
	static class UWBP_TimeTrial_Sub_ModeSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TimeTrial_Sub_ModeSelect_C>();
	}
};
static_assert(alignof(UWBP_TimeTrial_Sub_ModeSelect_C) == 0x000008, "Wrong alignment on UWBP_TimeTrial_Sub_ModeSelect_C");
static_assert(sizeof(UWBP_TimeTrial_Sub_ModeSelect_C) == 0x000498, "Wrong size on UWBP_TimeTrial_Sub_ModeSelect_C");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, UberGraphFrame) == 0x000440, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, TimeTrial_ModeSelect_Out) == 0x000448, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::TimeTrial_ModeSelect_Out' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, TimeTrial_ModeSelect_Loop) == 0x000450, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::TimeTrial_ModeSelect_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, TimeTrial_ModeSelect_In) == 0x000458, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::TimeTrial_ModeSelect_In' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, FooterShortCut) == 0x000460, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::FooterShortCut' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, MouseInteraction) == 0x000468, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, PAT_WBP_FooterShortCut) == 0x000470, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::PAT_WBP_FooterShortCut' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, WBP_TestTimeTrial_Sub_BtnPlay_Offline) == 0x000478, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::WBP_TestTimeTrial_Sub_BtnPlay_Offline' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, WBP_TestTimeTrial_Sub_BtnPlay_Online) == 0x000480, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::WBP_TestTimeTrial_Sub_BtnPlay_Online' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, WBP_TimeTrial_Sub_Header_StageName) == 0x000488, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::WBP_TimeTrial_Sub_Header_StageName' has a wrong offset!");
static_assert(offsetof(UWBP_TimeTrial_Sub_ModeSelect_C, ButtonsPanel) == 0x000490, "Member 'UWBP_TimeTrial_Sub_ModeSelect_C::ButtonsPanel' has a wrong offset!");

}

