#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TitleMenu

#include "Basic.hpp"

#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TitleMenu.WBP_TitleMenu_C
// 0x0180 (0x0580 - 0x0400)
class UWBP_TitleMenu_C final : public UTitleScene
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Title_Loop;                                        // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Title_In;                                          // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Message;                                           // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow_Shadow;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BG_Black;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CRMUserIdString;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DSP_VersionText;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TopMenu_Sub_ShopInfo_C*            DSP_WBP_TopMenu_Sub_ShopInfo;                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EOSRelayControlText;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KeyVisual;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MatchingText;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Message_Text;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PopText_base;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PopText_base_Shadow;                               // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               QR;                                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QR_Main;                                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QR_Ont;                                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QR_Trial;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ServerNameString;                                  // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TitleLOGO;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Account;                                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Manual;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_SEGA;                                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_Version;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_VersionText;                                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VersionText;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HeaderMenu_Sub_NewsBtn_C*          WBP_HeaderMenu_Sub_NewsBtn;                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HeaderMenu_Sub_NewsBtn_C*          WBP_HeaderMenu_Sub_PC_EndBtn;                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TitleMenu_Sub_2nd_C*               WBP_TitleMenu_Sub_2nd;                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TitleMenu_Sub_Btn_C*               WBP_TitleMenu_Sub_Btn;                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_QR;                                 // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Window;                                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              NextSequenceEventDispatcher;                       // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FText>                           TracelRingSettingErrorMessages;                    // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LocalBothOpen;                                     // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalBothClose;                                    // 0x0539(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableSubBtnAnimation;                            // 0x053A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B[0x5];                                      // 0x053B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TitleMenu_Sub_Btn_C*               ActivePressButtonWidget;                           // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 In_String;                                         // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Soft_Texture;                                      // 0x0558(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)

public:
	void AppearPressIcon();
	void Construct();
	void ExecuteUbergraph_WBP_TitleMenu(int32 EntryPoint);
	void InitVisualSelect();
	void MessageAppear(const class FText& Message_0);
	void OnAcceptKeyPressed();
	void OnAcceptKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnAcceptKeyReleased();
	void OnAcceptKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyPressed();
	void OnBackKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnBackKeyReleased();
	void OnBackKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyPressed();
	void OnDownKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnDownKeyReleased();
	void OnDownKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftPressed();
	void OnFaceButtonLeftPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonLeftReleased();
	void OnFaceButtonLeftReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopPressed();
	void OnFaceButtonTopPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnFaceButtonTopReleased();
	void OnFaceButtonTopReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnInitialized();
	void OnLeftKeyPressed();
	void OnLeftKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftKeyReleased();
	void OnLeftKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderPressed();
	void OnLeftShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftShoulderReleased();
	void OnLeftShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickAxis(const struct FVector2D& Value);
	void OnLeftStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnLeftStickButtonPressed();
	void OnLeftStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnLeftStickButtonReleased();
	void OnLeftStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyPressed();
	void OnRightKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightKeyReleased();
	void OnRightKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderPressed();
	void OnRightShoulderPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightShoulderReleased();
	void OnRightShoulderReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickAxis(const struct FVector2D& Value);
	void OnRightStickAxisWithPlayerId(const struct FVector2D& Value, const int32& PlayerControllerIndex);
	void OnRightStickButtonPressed();
	void OnRightStickButtonPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnRightStickButtonReleased();
	void OnRightStickButtonReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialPressed();
	void OnSpecialPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnSpecialReleased();
	void OnSpecialReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyPressed();
	void OnUpKeyPressedWithPlayerId(const int32& PlayerControllerIndex);
	void OnUpKeyReleased();
	void OnUpKeyReleasedWithPlayerId(const int32& PlayerControllerIndex);
	void PreConstruct(bool IsDesignTime);
	void PressedLicenseButton();
	void PressedTitleAcceptButton();
	void Rebind();
	void SetNeedPressButtonInAnim(bool InNeed);
	void SetTitleLogoTexture(class UTexture2D* Texture);
	void SetTitleLogoVisibility(ESlateVisibility InVisibility);
	void SilentFocusReady(bool bOnce);
	void Toggle_Selectable_Hit_Test(ESlateVisibility InVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TitleMenu_C">();
	}
	static class UWBP_TitleMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TitleMenu_C>();
	}
};
static_assert(alignof(UWBP_TitleMenu_C) == 0x000008, "Wrong alignment on UWBP_TitleMenu_C");
static_assert(sizeof(UWBP_TitleMenu_C) == 0x000580, "Wrong size on UWBP_TitleMenu_C");
static_assert(offsetof(UWBP_TitleMenu_C, UberGraphFrame) == 0x000400, "Member 'UWBP_TitleMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Title_Loop) == 0x000408, "Member 'UWBP_TitleMenu_C::Title_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Title_In) == 0x000410, "Member 'UWBP_TitleMenu_C::Title_In' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Message) == 0x000418, "Member 'UWBP_TitleMenu_C::Message' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Arrow) == 0x000420, "Member 'UWBP_TitleMenu_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Arrow_Shadow) == 0x000428, "Member 'UWBP_TitleMenu_C::Arrow_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, BG_Black) == 0x000430, "Member 'UWBP_TitleMenu_C::BG_Black' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, CRMUserIdString) == 0x000438, "Member 'UWBP_TitleMenu_C::CRMUserIdString' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, DSP_VersionText) == 0x000440, "Member 'UWBP_TitleMenu_C::DSP_VersionText' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, DSP_WBP_TopMenu_Sub_ShopInfo) == 0x000448, "Member 'UWBP_TitleMenu_C::DSP_WBP_TopMenu_Sub_ShopInfo' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, EOSRelayControlText) == 0x000450, "Member 'UWBP_TitleMenu_C::EOSRelayControlText' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, KeyVisual) == 0x000458, "Member 'UWBP_TitleMenu_C::KeyVisual' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, MatchingText) == 0x000460, "Member 'UWBP_TitleMenu_C::MatchingText' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Message_Text) == 0x000468, "Member 'UWBP_TitleMenu_C::Message_Text' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, PopText_base) == 0x000470, "Member 'UWBP_TitleMenu_C::PopText_base' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, PopText_base_Shadow) == 0x000478, "Member 'UWBP_TitleMenu_C::PopText_base_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, QR) == 0x000480, "Member 'UWBP_TitleMenu_C::QR' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, QR_Main) == 0x000488, "Member 'UWBP_TitleMenu_C::QR_Main' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, QR_Ont) == 0x000490, "Member 'UWBP_TitleMenu_C::QR_Ont' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, QR_Trial) == 0x000498, "Member 'UWBP_TitleMenu_C::QR_Trial' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, SafeZone_0) == 0x0004A0, "Member 'UWBP_TitleMenu_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, ServerNameString) == 0x0004A8, "Member 'UWBP_TitleMenu_C::ServerNameString' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TitleLOGO) == 0x0004B0, "Member 'UWBP_TitleMenu_C::TitleLOGO' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TXT_Account) == 0x0004B8, "Member 'UWBP_TitleMenu_C::TXT_Account' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TXT_Manual) == 0x0004C0, "Member 'UWBP_TitleMenu_C::TXT_Manual' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TXT_SEGA) == 0x0004C8, "Member 'UWBP_TitleMenu_C::TXT_SEGA' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TXT_Version) == 0x0004D0, "Member 'UWBP_TitleMenu_C::TXT_Version' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TXT_VersionText) == 0x0004D8, "Member 'UWBP_TitleMenu_C::TXT_VersionText' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, VersionText) == 0x0004E0, "Member 'UWBP_TitleMenu_C::VersionText' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, WBP_HeaderMenu_Sub_NewsBtn) == 0x0004E8, "Member 'UWBP_TitleMenu_C::WBP_HeaderMenu_Sub_NewsBtn' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, WBP_HeaderMenu_Sub_PC_EndBtn) == 0x0004F0, "Member 'UWBP_TitleMenu_C::WBP_HeaderMenu_Sub_PC_EndBtn' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, WBP_TitleMenu_Sub_2nd) == 0x0004F8, "Member 'UWBP_TitleMenu_C::WBP_TitleMenu_Sub_2nd' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, WBP_TitleMenu_Sub_Btn) == 0x000500, "Member 'UWBP_TitleMenu_C::WBP_TitleMenu_Sub_Btn' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, WidgetSwitcher_QR) == 0x000508, "Member 'UWBP_TitleMenu_C::WidgetSwitcher_QR' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Window) == 0x000510, "Member 'UWBP_TitleMenu_C::Window' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, NextSequenceEventDispatcher) == 0x000518, "Member 'UWBP_TitleMenu_C::NextSequenceEventDispatcher' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, TracelRingSettingErrorMessages) == 0x000528, "Member 'UWBP_TitleMenu_C::TracelRingSettingErrorMessages' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, LocalBothOpen) == 0x000538, "Member 'UWBP_TitleMenu_C::LocalBothOpen' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, LocalBothClose) == 0x000539, "Member 'UWBP_TitleMenu_C::LocalBothClose' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, DisableSubBtnAnimation) == 0x00053A, "Member 'UWBP_TitleMenu_C::DisableSubBtnAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, ActivePressButtonWidget) == 0x000540, "Member 'UWBP_TitleMenu_C::ActivePressButtonWidget' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, In_String) == 0x000548, "Member 'UWBP_TitleMenu_C::In_String' has a wrong offset!");
static_assert(offsetof(UWBP_TitleMenu_C, Soft_Texture) == 0x000558, "Member 'UWBP_TitleMenu_C::Soft_Texture' has a wrong offset!");

}

