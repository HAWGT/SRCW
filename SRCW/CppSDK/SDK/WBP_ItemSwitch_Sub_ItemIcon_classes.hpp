#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemSwitch_Sub_ItemIcon

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemSwitch_Sub_ItemIcon.WBP_ItemSwitch_Sub_ItemIcon_C
// 0x0098 (0x05C8 - 0x0530)
class UWBP_ItemSwitch_Sub_ItemIcon_C final : public UPartyRaceItemIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 DSP_Cursor_ItemsSwitch;                            // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_All;                           // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_Blue;                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_BlueYellow;                    // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_Both;                          // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_NonActive;                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_Red;                           // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_RedYellow;                     // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemSwitchIcon_Base_Yellow;                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteraction;                                  // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_ItemSwitchIcon_01;                             // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RingNum_100;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ROMText;                                           // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        NewVar_0;                                          // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EItemId>                               NewVar;                                            // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsGuest;                                           // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHint;                                            // 0x05C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckIsGuest(bool IsGuest_0);
	void Construct();
	void ExecuteUbergraph_WBP_ItemSwitch_Sub_ItemIcon(int32 EntryPoint);
	void GetDisplayItemId(EItemId* CurrentItemId);
	void OnAcceptKeyPressed();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnBackKeyPressed();
	void OnDecideMode();
	void OnDecision_Init(class UUnionUIButtonBase* Button);
	void OnFocus_Imp(class UUnionUIButtonBase* Button);
	void OnFocusAnimFinished();
	void OnFocusAnimStart();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnReady();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnUnFocusAnimFinished();
	void OnUnFocusAnimStart();
	void OnUpdatedBP();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemSwitch_Sub_ItemIcon_C">();
	}
	static class UWBP_ItemSwitch_Sub_ItemIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemSwitch_Sub_ItemIcon_C>();
	}
};
static_assert(alignof(UWBP_ItemSwitch_Sub_ItemIcon_C) == 0x000008, "Wrong alignment on UWBP_ItemSwitch_Sub_ItemIcon_C");
static_assert(sizeof(UWBP_ItemSwitch_Sub_ItemIcon_C) == 0x0005C8, "Wrong size on UWBP_ItemSwitch_Sub_ItemIcon_C");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, UberGraphFrame) == 0x000530, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, DSP_Cursor_ItemsSwitch) == 0x000538, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::DSP_Cursor_ItemsSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_All) == 0x000540, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_All' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_Blue) == 0x000548, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_Blue' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_BlueYellow) == 0x000550, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_BlueYellow' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_Both) == 0x000558, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_Both' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_NonActive) == 0x000560, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_NonActive' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_Red) == 0x000568, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_Red' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_RedYellow) == 0x000570, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_RedYellow' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ItemSwitchIcon_Base_Yellow) == 0x000578, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ItemSwitchIcon_Base_Yellow' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, MouseInteraction) == 0x000580, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, PAT_ItemSwitchIcon_01) == 0x000588, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::PAT_ItemSwitchIcon_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, RingNum_100) == 0x000590, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::RingNum_100' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, ROMText) == 0x000598, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::ROMText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, WidgetSwitcher_0) == 0x0005A0, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, NewVar_0) == 0x0005A8, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, NewVar) == 0x0005B0, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::NewVar' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, IsGuest) == 0x0005C0, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::IsGuest' has a wrong offset!");
static_assert(offsetof(UWBP_ItemSwitch_Sub_ItemIcon_C, IsHint) == 0x0005C1, "Member 'UWBP_ItemSwitch_Sub_ItemIcon_C::IsHint' has a wrong offset!");

}

