#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Friend_Sub_FairPlayGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_Friend_Sub_FairPlayGauge.WBP_Friend_Sub_FairPlayGauge_C.ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge
// 0x0118 (0x0118 - 0x0000)
struct WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InPoint;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Point_Color_Index_OutColorIndex;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)()
	int32                                         K2Node_CustomEvent_InColorIndex;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00FC(0x0014)()
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge) == 0x000008, "Wrong alignment on WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge");
static_assert(sizeof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge) == 0x000118, "Wrong size on WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, EntryPoint) == 0x000000, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, Temp_int_Variable) == 0x000004, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_CustomEvent_InPoint) == 0x000008, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_CustomEvent_InPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_Get_Point_Color_Index_OutColorIndex) == 0x000018, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_Get_Point_Color_Index_OutColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000D0, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_CustomEvent_InColorIndex) == 0x0000E8, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_CustomEvent_InColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_Select_Default) == 0x0000EC, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, K2Node_MakeStruct_SlateColor) == 0x0000FC, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000110, "Member 'WBP_Friend_Sub_FairPlayGauge_C_ExecuteUbergraph_WBP_Friend_Sub_FairPlayGauge::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_Friend_Sub_FairPlayGauge.WBP_Friend_Sub_FairPlayGauge_C.Get Point Color Index
// 0x0030 (0x0030 - 0x0000)
struct WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index final
{
public:
	int32                                         InFairPlayPoint;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutColorIndex;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index) == 0x000004, "Wrong alignment on WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index");
static_assert(sizeof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index) == 0x000030, "Wrong size on WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, InFairPlayPoint) == 0x000000, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::InFairPlayPoint' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, OutColorIndex) == 0x000004, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::OutColorIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, LocalIndex) == 0x000008, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::LocalIndex' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_Less_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Get_Point_Color_Index::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Friend_Sub_FairPlayGauge.WBP_Friend_Sub_FairPlayGauge_C.SetGaugeColor
// 0x0004 (0x0004 - 0x0000)
struct WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor final
{
public:
	int32                                         InColorIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor) == 0x000004, "Wrong alignment on WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor");
static_assert(sizeof(WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor) == 0x000004, "Wrong size on WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor, InColorIndex) == 0x000000, "Member 'WBP_Friend_Sub_FairPlayGauge_C_SetGaugeColor::InColorIndex' has a wrong offset!");

// Function WBP_Friend_Sub_FairPlayGauge.WBP_Friend_Sub_FairPlayGauge_C.Setup
// 0x0004 (0x0004 - 0x0000)
struct WBP_Friend_Sub_FairPlayGauge_C_Setup final
{
public:
	int32                                         InPoint;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Friend_Sub_FairPlayGauge_C_Setup) == 0x000004, "Wrong alignment on WBP_Friend_Sub_FairPlayGauge_C_Setup");
static_assert(sizeof(WBP_Friend_Sub_FairPlayGauge_C_Setup) == 0x000004, "Wrong size on WBP_Friend_Sub_FairPlayGauge_C_Setup");
static_assert(offsetof(WBP_Friend_Sub_FairPlayGauge_C_Setup, InPoint) == 0x000000, "Member 'WBP_Friend_Sub_FairPlayGauge_C_Setup::InPoint' has a wrong offset!");

}

