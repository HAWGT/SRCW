#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UnionRun_structs.hpp"


namespace SDK::Params
{

// Function WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate.WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C.Set UpGadgetPlate
// 0x0320 (0x0320 - 0x0000)
struct WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate final
{
public:
	ERivalTeamId                                  RivalTeamId;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UTexture2D>>      OutGadgetIconSoftTextures;                         // 0x0008(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class UTexture2D>>      GadgetIconSoftTextures;                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<EGadgetId>                             RivalGadgetArray;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	struct FGadgetData                            GadgetData;                                        // 0x0038(0x00C0)(Edit, BlueprintVisible)
	int32                                         NextGadgetIndex;                                   // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComPresetGadget                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_1;          // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRivalTeamData                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0130(0x00C0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGadgetId>                             K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGadgetId                                     CallFunc_Array_Get_Item;                           // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue_2;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGadgetData                            CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0228(0x00C0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate) == 0x000008, "Wrong alignment on WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate");
static_assert(sizeof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate) == 0x000320, "Wrong size on WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, RivalTeamId) == 0x000000, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::RivalTeamId' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, OutGadgetIconSoftTextures) == 0x000008, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::OutGadgetIconSoftTextures' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, GadgetIconSoftTextures) == 0x000018, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::GadgetIconSoftTextures' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, RivalGadgetArray) == 0x000028, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::RivalGadgetArray' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, GadgetData) == 0x000038, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::GadgetData' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, NextGadgetIndex) == 0x0000F8, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::NextGadgetIndex' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetEnumeratorName_ReturnValue) == 0x0000FC, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetEnumeratorName_ReturnValue_1) == 0x000124, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetEnumeratorName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000130, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001F0, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, K2Node_MakeArray_Array) == 0x0001F8, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, Temp_int_Loop_Counter_Variable) == 0x00020C, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, Temp_int_Array_Index_Variable) == 0x000210, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Array_Get_Item) == 0x000215, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetEnumeratorName_ReturnValue_2) == 0x000218, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetEnumeratorName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Less_IntInt_ReturnValue_1) == 0x000220, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000228, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0002E8, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Add_IntInt_ReturnValue) == 0x0002EC, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Array_AddUnique_ReturnValue) == 0x0002F0, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0002F4, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002F8, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002FC, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002FD, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Add_IntInt_ReturnValue_2) == 0x000300, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000304, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Clamp_ReturnValue) == 0x000308, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Map_Find_Value) == 0x000310, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate, CallFunc_Map_Find_ReturnValue) == 0x000318, "Member 'WBP_PartyRace_RivalTeamSelect_Sub_GadgetPlate_C_Set_UpGadgetPlate::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

