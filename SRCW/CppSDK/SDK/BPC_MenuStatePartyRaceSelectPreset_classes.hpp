#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MenuStatePartyRaceSelectPreset

#include "Basic.hpp"

#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionSystem_structs.hpp"
#include "UnionUI_structs.hpp"
#include "UMG_structs.hpp"
#include "UnionLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_MenuStatePartyRaceSelectPreset.BPC_MenuStatePartyRaceSelectPreset_C
// 0x0230 (0x03C8 - 0x0198)
class UBPC_MenuStatePartyRaceSelectPreset_C final : public UPartyRaceMenuSelectPresetState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0198(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void()>              OnCancelPresetSelect;                              // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_ItemSwitch_C*                      ItemSwitch;                                        // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastChara;                                         // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTalking;                                          // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuInputRecieveObject*                SubInputReceiver;                                  // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightShoulderPressed;                             // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftShoulderPressed;                              // 0x01D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentDebugLevel;                                 // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Target;                                            // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPartyRacePreset                              LastSelectedPreset;                                // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemId>                               Enable_Item;                                       // 0x01E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EItemId, bool>                           NewVar;                                            // 0x01F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EPartyRacePreset, struct FPartyRacePresetSetting> PresetSettings;                           // 0x0248(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPartyRacePresetSetting                LastSelectPresetSettings;                          // 0x0298(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_CMN_FinalCheck_2_C*                ReadyWidget;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bFading;                                           // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PartyRace_Sub_RivalCutin_C*        RivalCutinWidget;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RivalChanged;                                      // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnSelectedGadgetCustom;                            // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_PartyRace_Sub_RivalRewardWindow_C* RivalRewardWindow;                                 // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RivalCutinLoadStepCount;                           // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuInputRecieveObject*                RivalCutinInputReceiver;                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnPlayOutFinished;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsInteractRivalONOFF;                             // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoPlayFireAnim;                                    // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeLevel;                                       // 0x03AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB[0x5];                                      // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUnionUIPopupWindowBase*                PopupWindow;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Popup_Window_Hint_C*               TipsWindow;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHintId                                       InHintId;                                          // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCutinStartEvent();
	void RivalTeamSettingByRule();
	void GetDiaglogueEventManager(class ABP_DialogueEventManager_C** EventManager);
	void SetVisibleFooterSubButton(ESlateVisibility InputPin);
	void SetMessage(const class FText& Text);
	void DialogueEventEnd();
	void OnLoaded_3BD75519491A4C8C784C55A871EB6AD7(TSubclassOf<class UObject> Loaded);
	void OnLoaded_BB94DABC468B84B69BDA01963A247995(TSubclassOf<class UObject> Loaded);
	void InitSubCommand();
	void OnRightShoulderReleasedEvent_Event(class UObject* Object);
	void OnRightShoulderPressedEvent_Event(class UObject* Object);
	void OnLeftShoulderPressedEvent_Event(class UObject* Object);
	void OnLeftShoulderReleasedEvent_Event(class UObject* Object);
	void ShoulderButtonCheck();
	void OnRightShoulderPressedEvent_Event_0(class UObject* Object);
	void FinalizeSubCommand();
	void OnLeftShoulderPressedEvent_Event_0(class UObject* Object);
	void OnFaceButtonLeftPressedEvent_Event_0(class UObject* Object);
	void RivalONOFF(class UObject* Object);
	void RivalONOFFCheck(class UObject* Object);
	void DecisionRivalONOFF(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void RivalONOFFCheckForMouse();
	void OnInitState();
	void OnExitState();
	void OnButtonDecision(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnUISceneCancelEvent_Event(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void OnUISceneFocusEvent_Event(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex);
	void SequenceStart();
	void OnFinalConfirmOutAnimFinished();
	void OnStartCustomButtonPressed_Event(EPartyRacePreset Preset);
	void OnFinishedOptionOut_Event();
	void LotCOM();
	void Setup3D();
	void PlayOut(bool NeedFade);
	void OnRivalCutinFinished();
	void OnPartyRaceSelectInFinished();
	void OnRivalCutinFinished_Focus();
	void ToRivalTeamList();
	void OnToRivalSelectOutAnimationFinished();
	void UnregisterMenuEvents();
	void ToGadgetCustom();
	void OnToGadgetCustomOutAnimationFinished();
	void ToClassSelect();
	void OnRivalCutinAssetClassLoadFinished();
	void StartRivalCutInInputWait();
	void OnRivalCutinAcceptKeyPressed(class UObject* Object);
	void CloseRivalCutinRewardWindow();
	void OnFinishedFade_Event(EUnionUIFadeDirection FadeDirection);
	void OnCourseSelectDecided();
	void OnCallClassSelect();
	void OnCourseSelectCanceled();
	void ExitCustomPreset();
	void EnterCustomPreset();
	void NoRivalPresetEvent();
	void DecideCourseWithNoComLot();
	void OnMouseFullScreenClick();
	void StartReadyConfirmWB();
	void OnFinalCheckCencel(class UUnionUIButtonBase* Button);
	void OnFinalCheckDecide(class UUnionUIButtonBase* Button);
	void ExecuteUbergraph_BPC_MenuStatePartyRaceSelectPreset(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_MenuStatePartyRaceSelectPreset_C">();
	}
	static class UBPC_MenuStatePartyRaceSelectPreset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_MenuStatePartyRaceSelectPreset_C>();
	}
};
static_assert(alignof(UBPC_MenuStatePartyRaceSelectPreset_C) == 0x000008, "Wrong alignment on UBPC_MenuStatePartyRaceSelectPreset_C");
static_assert(sizeof(UBPC_MenuStatePartyRaceSelectPreset_C) == 0x0003C8, "Wrong size on UBPC_MenuStatePartyRaceSelectPreset_C");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, UberGraphFrame) == 0x000198, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, OnCancelPresetSelect) == 0x0001A0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::OnCancelPresetSelect' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, ItemSwitch) == 0x0001B0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::ItemSwitch' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, LastChara) == 0x0001B8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::LastChara' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, bTalking) == 0x0001C0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::bTalking' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, SubInputReceiver) == 0x0001C8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::SubInputReceiver' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, bRightShoulderPressed) == 0x0001D0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::bRightShoulderPressed' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, bLeftShoulderPressed) == 0x0001D1, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::bLeftShoulderPressed' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, CurrentDebugLevel) == 0x0001D4, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::CurrentDebugLevel' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, Target) == 0x0001D8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::Target' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, LastSelectedPreset) == 0x0001E0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::LastSelectedPreset' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, Enable_Item) == 0x0001E8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::Enable_Item' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, NewVar) == 0x0001F8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::NewVar' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, PresetSettings) == 0x000248, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::PresetSettings' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, LastSelectPresetSettings) == 0x000298, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::LastSelectPresetSettings' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, ReadyWidget) == 0x000350, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::ReadyWidget' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, bFading) == 0x000358, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::bFading' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, RivalCutinWidget) == 0x000360, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::RivalCutinWidget' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, RivalChanged) == 0x000368, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::RivalChanged' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, OnSelectedGadgetCustom) == 0x000370, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::OnSelectedGadgetCustom' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, RivalRewardWindow) == 0x000380, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::RivalRewardWindow' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, RivalCutinLoadStepCount) == 0x000388, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::RivalCutinLoadStepCount' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, RivalCutinInputReceiver) == 0x000390, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::RivalCutinInputReceiver' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, OnPlayOutFinished) == 0x000398, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::OnPlayOutFinished' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, bIsInteractRivalONOFF) == 0x0003A8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::bIsInteractRivalONOFF' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, NoPlayFireAnim) == 0x0003A9, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::NoPlayFireAnim' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, ChangeLevel) == 0x0003AA, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::ChangeLevel' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, PopupWindow) == 0x0003B0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::PopupWindow' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, TipsWindow) == 0x0003B8, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::TipsWindow' has a wrong offset!");
static_assert(offsetof(UBPC_MenuStatePartyRaceSelectPreset_C, InHintId) == 0x0003C0, "Member 'UBPC_MenuStatePartyRaceSelectPreset_C::InHintId' has a wrong offset!");

}

