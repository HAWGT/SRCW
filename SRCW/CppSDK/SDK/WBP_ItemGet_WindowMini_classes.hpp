#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemGet_WindowMini

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemGet_WindowMini.WBP_ItemGet_WindowMini_C
// 0x0198 (0x0540 - 0x03A8)
class UWBP_ItemGet_WindowMini_C final : public URewardGetWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RankUp_Out;                                        // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RankUp_In_Loop;                                    // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GetWindow_Out;                                     // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GetWindow_In_Loop;                                 // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ArcUV_01;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArcUV_02;                                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArcUV_03;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff;                                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_1;                                             // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_2;                                             // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_3;                                             // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_4;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_10;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_11;                                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_00;                                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_01;                                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_02;                                            // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_03;                                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_04;                                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_05;                                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_06;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_07;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_08;                                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_09;                                            // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Add_01;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Eff_Core_Add_02;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemBase;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Left;                                              // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_MachineTypeIcon;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right;                                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shadow;                                            // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_01;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_02;                                     // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_03;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Small_Line_04;                                     // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ResultRate_Sub_RankIcon_C*         WBP_ResultRate_Sub_RankIcon;                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Item;                               // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         RewardItemNum;                                     // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RewardIndex;                                       // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRewardGetWindowParam>          RewardParamArray;                                  // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RewardTitleText;                                   // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RankTitleText;                                     // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ERateRank                                     RateRank;                                          // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentDisplayType;                                // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_CMN_GadgetCountFullWindow_C*       ItemCountLayoutWidget;                             // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowZOrder;                                      // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CloseWindow();
	void Construct();
	void CreateItemCountWidget();
	void Destruct();
	void ExecuteUbergraph_WBP_ItemGet_WindowMini(int32 EntryPoint);
	void GetAnimationIn(class UWidgetAnimation** OutAnimationIn);
	void GetAnimationOut(class UWidgetAnimation** OutAnimationOut);
	void GetItemCountWidgetIconTexture(ERewardType InRewardType, int32 InRewardId, class UTexture2D** OutIconTexture);
	void GetItemIconImageWidget(ERewardType InRewardType, class UImage** OutImageWidget);
	class UImage* GetMachineTypeIconImage();
	void HideRewardItemInfo();
	void OnAcceptKeyPressed();
	void OnAnimationOutFinished_Event();
	void OnOutAnimFinished();
	void OnRankOutAnimFinished();
	void OnWindowOpen();
	void OpenWindow();
	void OutItemCountWidget();
	void PlayDisplayStartSe();
	void PrintInvalidRewardWarning(ERewardType InRewardType, int32 InRewardId);
	void RemoveAnimationDelegate();
	void SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini();
	void SequenceEvent__ENTRYPOINTWBP_ItemGet_WindowMini_0();
	void SetAnimationDelegate();
	void SetBaseDisplay(bool bRewardDisplay);
	void SetDisplayParam(const TArray<struct FRewardGetWindowParam>& InDisplayParamArray, int32 InWindowZOrder);
	void SetDisplayParams(ERateRank InRateRank, const TArray<struct FRewardGetWindowParam>& InRewardParam, int32 InWindowZOrder);
	void SetItemCountWidget(int32 InItemNum, int32 InItemGetNum, ERewardType InRewardType, class UTexture2D* InIconTexture);
	void SetItemCountWidgetVisible(bool bInVisible);
	void SetItemIconActiveIndex(ERewardType InRewardType);
	void SetItemIconImageWidgetVisible(ERewardType InRewardType, bool bInVisible);
	void SetItemName(const class FText& InText);
	void SetMachineTypeIconByRewardParam(ERewardType InRewardType, int32 InRewardId);
	void SetMachineTypeIconVisibility(ESlateVisibility InVisibility);
	void SetModeTitleText(const class FText& InRankTitleText, const class FText& InRewardTitleText);
	void SetRewardTypeText(const class FText& InText);
	void StartNextDisplay();
	void UpdateDisplay();
	void UpdateRankDisplay();
	void UpdateRewardDisplay();
	void UpdateRewardItemInfoDisplay(ERewardType InRewardType, int32 InRewardId, int32 InRewardNum);
	void UpdateTitleText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemGet_WindowMini_C">();
	}
	static class UWBP_ItemGet_WindowMini_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemGet_WindowMini_C>();
	}
};
static_assert(alignof(UWBP_ItemGet_WindowMini_C) == 0x000008, "Wrong alignment on UWBP_ItemGet_WindowMini_C");
static_assert(sizeof(UWBP_ItemGet_WindowMini_C) == 0x000540, "Wrong size on UWBP_ItemGet_WindowMini_C");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, UberGraphFrame) == 0x0003A8, "Member 'UWBP_ItemGet_WindowMini_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RankUp_Out) == 0x0003B0, "Member 'UWBP_ItemGet_WindowMini_C::RankUp_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RankUp_In_Loop) == 0x0003B8, "Member 'UWBP_ItemGet_WindowMini_C::RankUp_In_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, GetWindow_Out) == 0x0003C0, "Member 'UWBP_ItemGet_WindowMini_C::GetWindow_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, GetWindow_In_Loop) == 0x0003C8, "Member 'UWBP_ItemGet_WindowMini_C::GetWindow_In_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, ArcUV_01) == 0x0003D0, "Member 'UWBP_ItemGet_WindowMini_C::ArcUV_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, ArcUV_02) == 0x0003D8, "Member 'UWBP_ItemGet_WindowMini_C::ArcUV_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, ArcUV_03) == 0x0003E0, "Member 'UWBP_ItemGet_WindowMini_C::ArcUV_03' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, base) == 0x0003E8, "Member 'UWBP_ItemGet_WindowMini_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, CanvasPanel) == 0x0003F0, "Member 'UWBP_ItemGet_WindowMini_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff) == 0x0003F8, "Member 'UWBP_ItemGet_WindowMini_C::Eff' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_1) == 0x000400, "Member 'UWBP_ItemGet_WindowMini_C::Eff_1' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_2) == 0x000408, "Member 'UWBP_ItemGet_WindowMini_C::Eff_2' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_3) == 0x000410, "Member 'UWBP_ItemGet_WindowMini_C::Eff_3' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_4) == 0x000418, "Member 'UWBP_ItemGet_WindowMini_C::Eff_4' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_10) == 0x000420, "Member 'UWBP_ItemGet_WindowMini_C::Eff_10' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_11) == 0x000428, "Member 'UWBP_ItemGet_WindowMini_C::Eff_11' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_00) == 0x000430, "Member 'UWBP_ItemGet_WindowMini_C::Eff_00' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_01) == 0x000438, "Member 'UWBP_ItemGet_WindowMini_C::Eff_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_02) == 0x000440, "Member 'UWBP_ItemGet_WindowMini_C::Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_03) == 0x000448, "Member 'UWBP_ItemGet_WindowMini_C::Eff_03' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_04) == 0x000450, "Member 'UWBP_ItemGet_WindowMini_C::Eff_04' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_05) == 0x000458, "Member 'UWBP_ItemGet_WindowMini_C::Eff_05' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_06) == 0x000460, "Member 'UWBP_ItemGet_WindowMini_C::Eff_06' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_07) == 0x000468, "Member 'UWBP_ItemGet_WindowMini_C::Eff_07' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_08) == 0x000470, "Member 'UWBP_ItemGet_WindowMini_C::Eff_08' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_09) == 0x000478, "Member 'UWBP_ItemGet_WindowMini_C::Eff_09' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_Core) == 0x000480, "Member 'UWBP_ItemGet_WindowMini_C::Eff_Core' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_Core_Add_01) == 0x000488, "Member 'UWBP_ItemGet_WindowMini_C::Eff_Core_Add_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Eff_Core_Add_02) == 0x000490, "Member 'UWBP_ItemGet_WindowMini_C::Eff_Core_Add_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, ItemBase) == 0x000498, "Member 'UWBP_ItemGet_WindowMini_C::ItemBase' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Left) == 0x0004A0, "Member 'UWBP_ItemGet_WindowMini_C::Left' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, PAT_MachineTypeIcon) == 0x0004A8, "Member 'UWBP_ItemGet_WindowMini_C::PAT_MachineTypeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Right) == 0x0004B0, "Member 'UWBP_ItemGet_WindowMini_C::Right' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Shadow) == 0x0004B8, "Member 'UWBP_ItemGet_WindowMini_C::Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Small_Line_01) == 0x0004C0, "Member 'UWBP_ItemGet_WindowMini_C::Small_Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Small_Line_02) == 0x0004C8, "Member 'UWBP_ItemGet_WindowMini_C::Small_Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Small_Line_03) == 0x0004D0, "Member 'UWBP_ItemGet_WindowMini_C::Small_Line_03' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, Small_Line_04) == 0x0004D8, "Member 'UWBP_ItemGet_WindowMini_C::Small_Line_04' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, WBP_ResultRate_Sub_RankIcon) == 0x0004E0, "Member 'UWBP_ItemGet_WindowMini_C::WBP_ResultRate_Sub_RankIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, WidgetSwitcher_Item) == 0x0004E8, "Member 'UWBP_ItemGet_WindowMini_C::WidgetSwitcher_Item' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RewardItemNum) == 0x0004F0, "Member 'UWBP_ItemGet_WindowMini_C::RewardItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RewardIndex) == 0x0004F4, "Member 'UWBP_ItemGet_WindowMini_C::RewardIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RewardParamArray) == 0x0004F8, "Member 'UWBP_ItemGet_WindowMini_C::RewardParamArray' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RewardTitleText) == 0x000508, "Member 'UWBP_ItemGet_WindowMini_C::RewardTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RankTitleText) == 0x000518, "Member 'UWBP_ItemGet_WindowMini_C::RankTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, RateRank) == 0x000528, "Member 'UWBP_ItemGet_WindowMini_C::RateRank' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, CurrentDisplayType) == 0x00052C, "Member 'UWBP_ItemGet_WindowMini_C::CurrentDisplayType' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, ItemCountLayoutWidget) == 0x000530, "Member 'UWBP_ItemGet_WindowMini_C::ItemCountLayoutWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_WindowMini_C, WindowZOrder) == 0x000538, "Member 'UWBP_ItemGet_WindowMini_C::WindowZOrder' has a wrong offset!");

}

