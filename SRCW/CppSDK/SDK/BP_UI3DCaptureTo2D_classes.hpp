#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI3DCaptureTo2D

#include "Basic.hpp"

#include "E3DCaptureMenuType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionUI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UI3DCaptureTo2D.BP_UI3DCaptureTo2D_C
// 0x0120 (0x03D0 - 0x02B0)
class ABP_UI3DCaptureTo2D_C final : public AUnionUICapture2DActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 In_Actor;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bDebug;                                            // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TopMenuTransform;                                  // 0x02D0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<E3DCaptureMenuType, struct FTransform>   CaptureTransformMap;                               // 0x0330(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTransform>                SplitBaseCharaMachineTransformMap;                 // 0x0380(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CustomEvent_0(bool bSuccess);
	void ExecuteUbergraph_BP_UI3DCaptureTo2D(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SetTransformByMenuType(E3DCaptureMenuType MenuType);
	void TakePicture(const class FString& FileName_Footer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UI3DCaptureTo2D_C">();
	}
	static class ABP_UI3DCaptureTo2D_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UI3DCaptureTo2D_C>();
	}
};
static_assert(alignof(ABP_UI3DCaptureTo2D_C) == 0x000010, "Wrong alignment on ABP_UI3DCaptureTo2D_C");
static_assert(sizeof(ABP_UI3DCaptureTo2D_C) == 0x0003D0, "Wrong size on ABP_UI3DCaptureTo2D_C");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_UI3DCaptureTo2D_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, Camera) == 0x0002B8, "Member 'ABP_UI3DCaptureTo2D_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, In_Actor) == 0x0002C0, "Member 'ABP_UI3DCaptureTo2D_C::In_Actor' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, bDebug) == 0x0002C8, "Member 'ABP_UI3DCaptureTo2D_C::bDebug' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, TopMenuTransform) == 0x0002D0, "Member 'ABP_UI3DCaptureTo2D_C::TopMenuTransform' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, CaptureTransformMap) == 0x000330, "Member 'ABP_UI3DCaptureTo2D_C::CaptureTransformMap' has a wrong offset!");
static_assert(offsetof(ABP_UI3DCaptureTo2D_C, SplitBaseCharaMachineTransformMap) == 0x000380, "Member 'ABP_UI3DCaptureTo2D_C::SplitBaseCharaMachineTransformMap' has a wrong offset!");

}

