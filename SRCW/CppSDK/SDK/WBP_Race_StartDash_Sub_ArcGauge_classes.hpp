#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_StartDash_Sub_ArcGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_StartDash_Sub_ArcGauge.WBP_Race_StartDash_Sub_ArcGauge_C
// 0x0080 (0x0398 - 0x0318)
class UWBP_Race_StartDash_Sub_ArcGauge_C final : public URaceUISubStartGauge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TestGaurgeAnim;                                    // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HugeSuccess_LightGreen;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MeterCover;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NG_Red_01;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NG_Red_02;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PushGauge;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Success_Green;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_Sub_Btn_Key_C*                WBP_Race_StartDash_Sub_Btn;                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_Sub_Btn_Cross_C*              WBP_Race_StartDash_Sub_Btn_Cross;                  // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_Sub_Btn_LR_C*                 WBP_Race_StartDash_Sub_Btn_LR;                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Btn;                                // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               GaugeMat;                                          // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ButtonWB;                                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Race_StartDash_Sub_ArcGauge(int32 EntryPoint);
	class UObject* GetButtonWidget();
	void PreConstruct(bool IsDesignTime);
	void SetDashInputKey(const struct FKey& Key, int32 PlayerIndex);
	void SetGaugePivotAndRange(class UImage* ImageRef, float PivotRate, float GaugeRateRange);
	void SetGhostViewMode(bool IsGhostView);
	void SetKey(const struct FKey& NewKey, int32 PlayerControllerIndex);
	void SetParcentMyGauge(double ZeroToOne_Max1_5);
	void SetPivotAndRange(double ZeroToOne, double PivotParcent, class UImage* Image);
	void SetStartDashParamSetting(const struct FUnionRaceStartDashParam& InStartDashParam);
	void SetStartDashSettings(double LV3_PIVOT, double LV3_RANGE, double LV2_PIVOT, double LV2_RANGE, double NG1_PIVOT, double NG1_RANGE, double NG2_PIVOT, double NG2_RANGE);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_StartDash_Sub_ArcGauge_C">();
	}
	static class UWBP_Race_StartDash_Sub_ArcGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_StartDash_Sub_ArcGauge_C>();
	}
};
static_assert(alignof(UWBP_Race_StartDash_Sub_ArcGauge_C) == 0x000008, "Wrong alignment on UWBP_Race_StartDash_Sub_ArcGauge_C");
static_assert(sizeof(UWBP_Race_StartDash_Sub_ArcGauge_C) == 0x000398, "Wrong size on UWBP_Race_StartDash_Sub_ArcGauge_C");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, UberGraphFrame) == 0x000318, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, TestGaurgeAnim) == 0x000320, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::TestGaurgeAnim' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, Arrow) == 0x000328, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, base) == 0x000330, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, HugeSuccess_LightGreen) == 0x000338, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::HugeSuccess_LightGreen' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, MeterCover) == 0x000340, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::MeterCover' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, NG_Red_01) == 0x000348, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::NG_Red_01' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, NG_Red_02) == 0x000350, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::NG_Red_02' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, PushGauge) == 0x000358, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::PushGauge' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, Success_Green) == 0x000360, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::Success_Green' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, WBP_Race_StartDash_Sub_Btn) == 0x000368, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::WBP_Race_StartDash_Sub_Btn' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, WBP_Race_StartDash_Sub_Btn_Cross) == 0x000370, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::WBP_Race_StartDash_Sub_Btn_Cross' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, WBP_Race_StartDash_Sub_Btn_LR) == 0x000378, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::WBP_Race_StartDash_Sub_Btn_LR' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, WidgetSwitcher_Btn) == 0x000380, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::WidgetSwitcher_Btn' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, GaugeMat) == 0x000388, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::GaugeMat' has a wrong offset!");
static_assert(offsetof(UWBP_Race_StartDash_Sub_ArcGauge_C, ButtonWB) == 0x000390, "Member 'UWBP_Race_StartDash_Sub_ArcGauge_C::ButtonWB' has a wrong offset!");

}

