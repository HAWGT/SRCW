#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Charahead

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Charahead.WBP_Race_HUD_Sub_Charahead_C
// 0x0028 (0x0310 - 0x02E8)
class UWBP_Race_HUD_Sub_Charahead_C final : public URaceUISubPlayerName
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_Race_HUD_Sub_Charahead_CPU_C*      WBP_Race_HUD_Sub_Charahead_CPU;                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_Charahead_Player_C*   WBP_Race_HUD_Sub_Charahead_Player;                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_CharaHead;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsRival;                                           // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Charahead(int32 EntryPoint);
	void SetCOMIF(bool IsCom);
	void SetCrossPlayIcon(ECrossplayPlatform CrossplayType);
	void SetCrossPlayIconIF(ECrossplayPlatform CrossplayType);
	void SetGroupIndexIF(bool IsGroup, int32 GroupIndex, bool IsForce);
	void SetNameIF(const class FText& InName);
	void SetOnlineIF(bool IsRival_0);
	void SetPlayerIndexIF(bool IsLocalPlayer, int32 PlayerIndex);
	void SetRankIF(int32 Rank);
	void SetRivalIF(bool IsRival_0, bool IsPowerRival);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Charahead_C">();
	}
	static class UWBP_Race_HUD_Sub_Charahead_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Charahead_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Charahead_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Charahead_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Charahead_C) == 0x000310, "Wrong size on UWBP_Race_HUD_Sub_Charahead_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_C, UberGraphFrame) == 0x0002E8, "Member 'UWBP_Race_HUD_Sub_Charahead_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_C, WBP_Race_HUD_Sub_Charahead_CPU) == 0x0002F0, "Member 'UWBP_Race_HUD_Sub_Charahead_C::WBP_Race_HUD_Sub_Charahead_CPU' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_C, WBP_Race_HUD_Sub_Charahead_Player) == 0x0002F8, "Member 'UWBP_Race_HUD_Sub_Charahead_C::WBP_Race_HUD_Sub_Charahead_Player' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_C, WidgetSwitcher_CharaHead) == 0x000300, "Member 'UWBP_Race_HUD_Sub_Charahead_C::WidgetSwitcher_CharaHead' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Charahead_C, IsRival) == 0x000308, "Member 'UWBP_Race_HUD_Sub_Charahead_C::IsRival' has a wrong offset!");

}

