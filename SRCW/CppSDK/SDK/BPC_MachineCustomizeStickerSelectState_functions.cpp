#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MachineCustomizeStickerSelectState

#include "Basic.hpp"

#include "BPC_MachineCustomizeStickerSelectState_classes.hpp"
#include "BPC_MachineCustomizeStickerSelectState_parameters.hpp"


namespace SDK
{

// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.Bind
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::Bind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "Bind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.CreateDialog
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::CreateDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "CreateDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.DeleteDialog
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::DeleteDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "DeleteDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.ExecuteUbergraph_BPC_MachineCustomizeStickerSelectState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::ExecuteUbergraph_BPC_MachineCustomizeStickerSelectState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "ExecuteUbergraph_BPC_MachineCustomizeStickerSelectState");

	Params::BPC_MachineCustomizeStickerSelectState_C_ExecuteUbergraph_BPC_MachineCustomizeStickerSelectState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.HideFooter
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::HideFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "HideFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.HidePopupWindow
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::HidePopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "HidePopupWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.LeftShoulderEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::LeftShoulderEvent(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "LeftShoulderEvent");

	Params::BPC_MachineCustomizeStickerSelectState_C_LeftShoulderEvent Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.OnExitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::OnExitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "OnExitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.OnFocusedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_StickerPresetPageItemData&ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::OnFocusedEvent(const struct FST_StickerPresetPageItemData& ItemData, int32 InPlayerIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "OnFocusedEvent");

	Params::BPC_MachineCustomizeStickerSelectState_C_OnFocusedEvent Parms{};

	Parms.ItemData = std::move(ItemData);
	Parms.InPlayerIndex = InPlayerIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.OnInitState
// (Event, Public, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::OnInitState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "OnInitState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.OpenTipsWindow
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHintId                                 InHintId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::OpenTipsWindow(EHintId InHintId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "OpenTipsWindow");

	Params::BPC_MachineCustomizeStickerSelectState_C_OpenTipsWindow Parms{};

	Parms.InHintId = InHintId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.OverrideStickers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>&                  OverlapStickers                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsRear                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::OverrideStickers(TArray<class AActor*>& OverlapStickers, bool IsRear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "OverrideStickers");

	Params::BPC_MachineCustomizeStickerSelectState_C_OverrideStickers Parms{};

	Parms.OverlapStickers = std::move(OverlapStickers);
	Parms.IsRear = IsRear;

	UObject::ProcessEvent(Func, &Parms);

	OverlapStickers = std::move(Parms.OverlapStickers);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.PopupWindow_OnDecision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::PopupWindow_OnDecision(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "PopupWindow_OnDecision");

	Params::BPC_MachineCustomizeStickerSelectState_C_PopupWindow_OnDecision Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.RewardDialog_Purchase_OnResult
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogResult                           Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::RewardDialog_Purchase_OnResult(EDialogResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "RewardDialog_Purchase_OnResult");

	Params::BPC_MachineCustomizeStickerSelectState_C_RewardDialog_Purchase_OnResult Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.RewardDialog_Unlock_OnResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogResult                           Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::RewardDialog_Unlock_OnResult(EDialogResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "RewardDialog_Unlock_OnResult");

	Params::BPC_MachineCustomizeStickerSelectState_C_RewardDialog_Unlock_OnResult Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.RightShoulderEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionUIButtonBase*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   PanelIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ButtonIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::RightShoulderEvent(class UUnionUIButtonBase* Button, int32 PanelIndex, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "RightShoulderEvent");

	Params::BPC_MachineCustomizeStickerSelectState_C_RightShoulderEvent Parms{};

	Parms.Button = Button;
	Parms.PanelIndex = PanelIndex;
	Parms.ButtonIndex = ButtonIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetActiveAuraEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActive_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::SetActiveAuraEffect(bool IsActive_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetActiveAuraEffect");

	Params::BPC_MachineCustomizeStickerSelectState_C_SetActiveAuraEffect Parms{};

	Parms.IsActive_0 = IsActive_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetExtraSticker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsExtra                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRear                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EExtraStickerPattern                    Pattern                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::SetExtraSticker(bool IsExtra, bool IsRear, EExtraStickerPattern Pattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetExtraSticker");

	Params::BPC_MachineCustomizeStickerSelectState_C_SetExtraSticker Parms{};

	Parms.IsExtra = IsExtra;
	Parms.IsRear = IsRear;
	Parms.Pattern = Pattern;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetFrontMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::SetFrontMaterial(class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetFrontMaterial");

	Params::BPC_MachineCustomizeStickerSelectState_C_SetFrontMaterial Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetRearMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::SetRearMaterial(class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetRearMaterial");

	Params::BPC_MachineCustomizeStickerSelectState_C_SetRearMaterial Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetStickerColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsColorChangeable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AUnionStickerBase*                Sticker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::SetStickerColor(bool IsColorChangeable, class AUnionStickerBase* Sticker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetStickerColor");

	Params::BPC_MachineCustomizeStickerSelectState_C_SetStickerColor Parms{};

	Parms.IsColorChangeable = IsColorChangeable;
	Parms.Sticker = Sticker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SettingStickersScale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FUserStickerData>&        Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_MachineCustomizeStickerSelectState_C::SettingStickersScale(TArray<struct FUserStickerData>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SettingStickersScale");

	Params::BPC_MachineCustomizeStickerSelectState_C_SettingStickersScale Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetupFooter
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::SetupFooter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetupFooter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetupRewardDialogPurchase
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::SetupRewardDialogPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetupRewardDialogPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetupRewardDialogUnlock
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::SetupRewardDialogUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetupRewardDialogUnlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetupStickerMasterSystem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::SetupStickerMasterSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetupStickerMasterSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.SetupStickerSelect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::SetupStickerSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "SetupStickerSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.ShowPopupWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::ShowPopupWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "ShowPopupWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.ShowTips
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::ShowTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "ShowTips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.StartOpenTipsWindow
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::StartOpenTipsWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "StartOpenTipsWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.StickerSelectPage_OnCancel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::StickerSelectPage_OnCancel(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "StickerSelectPage_OnCancel");

	Params::BPC_MachineCustomizeStickerSelectState_C_StickerSelectPage_OnCancel Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.StickerSelectPage_OnItemSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FST_StickerPresetPageItemData&ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   InPlayerIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::StickerSelectPage_OnItemSelected(const struct FST_StickerPresetPageItemData& ItemData, int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "StickerSelectPage_OnItemSelected");

	Params::BPC_MachineCustomizeStickerSelectState_C_StickerSelectPage_OnItemSelected Parms{};

	Parms.ItemData = std::move(ItemData);
	Parms.InPlayerIndex = InPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.StickerSelectPage_OnPurchaseAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::StickerSelectPage_OnPurchaseAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "StickerSelectPage_OnPurchaseAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.TipsWindow_CloseTipsWindow
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::TipsWindow_CloseTipsWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "TipsWindow_CloseTipsWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.TurnStickerFrameVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUnionStickerBase*                Sticker                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsVisible                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::TurnStickerFrameVisible(class AUnionStickerBase* Sticker, bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "TurnStickerFrameVisible");

	Params::BPC_MachineCustomizeStickerSelectState_C_TurnStickerFrameVisible Parms{};

	Parms.Sticker = Sticker;
	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.Unbind
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_MachineCustomizeStickerSelectState_C::Unbind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "Unbind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MachineCustomizeStickerSelectState.BPC_MachineCustomizeStickerSelectState_C.IsOpenTabControlTipsWindow
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool*                                   bEnableOpenWindow                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MachineCustomizeStickerSelectState_C::IsOpenTabControlTipsWindow(bool* bEnableOpenWindow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MachineCustomizeStickerSelectState_C", "IsOpenTabControlTipsWindow");

	Params::BPC_MachineCustomizeStickerSelectState_C_IsOpenTabControlTipsWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnableOpenWindow != nullptr)
		*bEnableOpenWindow = Parms.bEnableOpenWindow;
}

}

