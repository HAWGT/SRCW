#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RaceBefore_FeaturedRacer

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RaceBefore_FeaturedRacer.WBP_RaceBefore_FeaturedRacer_C
// 0x0098 (0x0378 - 0x02E0)
class UWBP_RaceBefore_FeaturedRacer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FeaturedRacer_InOut;                               // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BG_Black;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlueBase;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlueBase_CutIn;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BlueBase_s;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NmaeLine;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Panel_00;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PAT_PlatformIcon;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag_CutIn;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag_s;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TitileBase;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_FeaturedRacer;                                 // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_FeaturedRacer_2;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TXT_MachineName;                                   // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TXT_PlayerName;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_RaceBefore_FeaturedRacer(int32 EntryPoint);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void SetPlatform(ECrossplayPlatform In_Platform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RaceBefore_FeaturedRacer_C">();
	}
	static class UWBP_RaceBefore_FeaturedRacer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RaceBefore_FeaturedRacer_C>();
	}
};
static_assert(alignof(UWBP_RaceBefore_FeaturedRacer_C) == 0x000008, "Wrong alignment on UWBP_RaceBefore_FeaturedRacer_C");
static_assert(sizeof(UWBP_RaceBefore_FeaturedRacer_C) == 0x000378, "Wrong size on UWBP_RaceBefore_FeaturedRacer_C");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_RaceBefore_FeaturedRacer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, FeaturedRacer_InOut) == 0x0002E8, "Member 'UWBP_RaceBefore_FeaturedRacer_C::FeaturedRacer_InOut' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, BG_Black) == 0x0002F0, "Member 'UWBP_RaceBefore_FeaturedRacer_C::BG_Black' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, BlueBase) == 0x0002F8, "Member 'UWBP_RaceBefore_FeaturedRacer_C::BlueBase' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, BlueBase_CutIn) == 0x000300, "Member 'UWBP_RaceBefore_FeaturedRacer_C::BlueBase_CutIn' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, BlueBase_s) == 0x000308, "Member 'UWBP_RaceBefore_FeaturedRacer_C::BlueBase_s' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, NmaeLine) == 0x000310, "Member 'UWBP_RaceBefore_FeaturedRacer_C::NmaeLine' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, Panel) == 0x000318, "Member 'UWBP_RaceBefore_FeaturedRacer_C::Panel' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, Panel_00) == 0x000320, "Member 'UWBP_RaceBefore_FeaturedRacer_C::Panel_00' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, PAT_PlatformIcon) == 0x000328, "Member 'UWBP_RaceBefore_FeaturedRacer_C::PAT_PlatformIcon' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, RaceFlag) == 0x000330, "Member 'UWBP_RaceBefore_FeaturedRacer_C::RaceFlag' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, RaceFlag_CutIn) == 0x000338, "Member 'UWBP_RaceBefore_FeaturedRacer_C::RaceFlag_CutIn' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, RaceFlag_s) == 0x000340, "Member 'UWBP_RaceBefore_FeaturedRacer_C::RaceFlag_s' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, SafeZone) == 0x000348, "Member 'UWBP_RaceBefore_FeaturedRacer_C::SafeZone' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, TitileBase) == 0x000350, "Member 'UWBP_RaceBefore_FeaturedRacer_C::TitileBase' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, TXT_FeaturedRacer) == 0x000358, "Member 'UWBP_RaceBefore_FeaturedRacer_C::TXT_FeaturedRacer' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, TXT_FeaturedRacer_2) == 0x000360, "Member 'UWBP_RaceBefore_FeaturedRacer_C::TXT_FeaturedRacer_2' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, TXT_MachineName) == 0x000368, "Member 'UWBP_RaceBefore_FeaturedRacer_C::TXT_MachineName' has a wrong offset!");
static_assert(offsetof(UWBP_RaceBefore_FeaturedRacer_C, TXT_PlayerName) == 0x000370, "Member 'UWBP_RaceBefore_FeaturedRacer_C::TXT_PlayerName' has a wrong offset!");

}

