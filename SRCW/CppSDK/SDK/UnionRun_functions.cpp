#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UnionRun

#include "Basic.hpp"

#include "UnionRun_classes.hpp"
#include "UnionRun_parameters.hpp"


namespace SDK
{

// Function UnionRun.UnionCourseObjectBase.CheckIsValidParentActor
// (Final, Native, Public, BlueprintCallable)

void AUnionCourseObjectBase::CheckIsValidParentActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "CheckIsValidParentActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCourseObjectBase.GetObjectPlacementType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EObjectPlacementType              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EObjectPlacementType AUnionCourseObjectBase::GetObjectPlacementType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "GetObjectPlacementType");

	Params::UnionCourseObjectBase_GetObjectPlacementType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCourseObjectBase.GetPatternRandomId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 AUnionCourseObjectBase::GetPatternRandomId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "GetPatternRandomId");

	Params::UnionCourseObjectBase_GetPatternRandomId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCourseObjectBase.SetDomainIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDomainIndex                            Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionCourseObjectBase::SetDomainIndex(EDomainIndex Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "SetDomainIndex");

	Params::UnionCourseObjectBase_SetDomainIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCourseObjectBase.SetDomainNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDomainNumber                           Number                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionCourseObjectBase::SetDomainNumber(EDomainNumber Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "SetDomainNumber");

	Params::UnionCourseObjectBase_SetDomainNumber Parms{};

	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCourseObjectBase.SetPatternRandomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionCourseObjectBase::SetPatternRandomId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "SetPatternRandomId");

	Params::UnionCourseObjectBase_SetPatternRandomId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCourseObjectBase.SetRandomObjectType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERandomObjType                          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionCourseObjectBase::SetRandomObjectType(ERandomObjType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "SetRandomObjectType");

	Params::UnionCourseObjectBase_SetRandomObjectType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCourseObjectBase.GetDomainNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDomainNumber                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDomainNumber AUnionCourseObjectBase::GetDomainNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCourseObjectBase", "GetDomainNumber");

	Params::UnionCourseObjectBase_GetDomainNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickBigBakubaku.InitStaticBody
// (Final, Native, Private)
// Parameters:
// const class UGimmickStaticBodyComponent*StaticBody                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBigBakubaku::InitStaticBody(const class UGimmickStaticBodyComponent* StaticBody, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBigBakubaku", "InitStaticBody");

	Params::GimmickBigBakubaku_InitStaticBody Parms{};

	Parms.StaticBody = StaticBody;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AsuraAnimInstance.SetAsuraState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAsuraState                             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAsuraAnimInstance::SetAsuraState(EAsuraState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsuraAnimInstance", "SetAsuraState");

	Params::AsuraAnimInstance_SetAsuraState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AsuraAnimInstance.IsAsuraState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAsuraState                             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAsuraAnimInstance::IsAsuraState(EAsuraState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsuraAnimInstance", "IsAsuraState");

	Params::AsuraAnimInstance_IsAsuraState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceLogUtil.GetRacerLapInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URaceLogUtil::GetRacerLapInfo(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceLogUtil", "GetRacerLapInfo");

	Params::RaceLogUtil_GetRacerLapInfo Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceLogUtil.GetRacerStatusInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URaceLogUtil::GetRacerStatusInfo(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceLogUtil", "GetRacerStatusInfo");

	Params::RaceLogUtil_GetRacerStatusInfo Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceLogUtil.PrintRaceLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    at                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceLogUtil::PrintRaceLog(int32 RacerIndex, const class FString& str, const class FString& at)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceLogUtil", "PrintRaceLog");

	Params::RaceLogUtil_PrintRaceLog Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.str = std::move(str);
	Parms.at = std::move(at);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceLogUtil.PrintRunLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    at                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceLogUtil::PrintRunLog(int32 RacerIndex, const class FString& str, const class FString& at)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceLogUtil", "PrintRunLog");

	Params::RaceLogUtil_PrintRunLog Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.str = std::move(str);
	Parms.at = std::move(at);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceLogUtil.PrintWarpLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    str                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    at                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceLogUtil::PrintWarpLog(int32 RacerIndex, const class FString& str, const class FString& at)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceLogUtil", "PrintWarpLog");

	Params::RaceLogUtil_PrintWarpLog Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.str = std::move(str);
	Parms.at = std::move(at);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackFailed
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackFailed(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackFailed");

	Params::AttackReplyInterface_NotifyAttackFailed Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackFinishOverwritten
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackFinishOverwritten(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackFinishOverwritten");

	Params::AttackReplyInterface_NotifyAttackFinishOverwritten Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackFinishSucceed
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackFinishSucceed(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackFinishSucceed");

	Params::AttackReplyInterface_NotifyAttackFinishSucceed Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackMissingShot
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackMissingShot(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackMissingShot");

	Params::AttackReplyInterface_NotifyAttackMissingShot Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackPauseEnd
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackPauseEnd(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackPauseEnd");

	Params::AttackReplyInterface_NotifyAttackPauseEnd Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackPauseStart
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackPauseStart(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackPauseStart");

	Params::AttackReplyInterface_NotifyAttackPauseStart Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackSucced
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackSucced(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackSucced");

	Params::AttackReplyInterface_NotifyAttackSucced Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.AttackReplyInterface.NotifyAttackTimeElapsed
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAttackReply&              Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IAttackReplyInterface::NotifyAttackTimeElapsed(const struct FAttackReply& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("AttackReplyInterface", "NotifyAttackTimeElapsed");

	Params::AttackReplyInterface_NotifyAttackTimeElapsed Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionCameraBase.IsCurrentViewTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionCameraBase::IsCurrentViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCameraBase", "IsCurrentViewTarget");

	Params::UnionCameraBase_IsCurrentViewTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCameraBase.IsInBlending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionCameraBase::IsInBlending()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCameraBase", "IsInBlending");

	Params::UnionCameraBase_IsInBlending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCameraBase.RequestEndCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionCameraBase::RequestEndCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCameraBase", "RequestEndCamera");

	Params::UnionCameraBase_RequestEndCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCameraBase.RequestStartCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionCameraBase::RequestStartCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCameraBase", "RequestStartCamera");

	Params::UnionCameraBase_RequestStartCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BoostPadObject.OnVATUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UUnionVATMeshComponent*           VATComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionVATSequenceInfo&     SequenceInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABoostPadObject::OnVATUpdate(class UUnionVATMeshComponent* VATComponent, const struct FUnionVATSequenceInfo& SequenceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostPadObject", "OnVATUpdate");

	Params::BoostPadObject_OnVATUpdate Parms{};

	Parms.VATComponent = VATComponent;
	Parms.SequenceInfo = std::move(SequenceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BoostPadObject.SetBoostPadType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBoostPadType                           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsSpecial                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABoostPadObject::SetBoostPadType(EBoostPadType Type, bool IsSpecial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostPadObject", "SetBoostPadType");

	Params::BoostPadObject_SetBoostPadType Parms{};

	Parms.Type = Type;
	Parms.IsSpecial = IsSpecial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BoostPadObject.SetGateScaleRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABoostPadObject::SetGateScaleRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostPadObject", "SetGateScaleRate");

	Params::BoostPadObject_SetGateScaleRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BounceMoveObject.OnFinishedBounce
// (Final, Native, Public)

void ABounceMoveObject::OnFinishedBounce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BounceMoveObject", "OnFinishedBounce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BPFL_UnionRunTuningUtil.GetHoverBaseHeight
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EVehicleType                            VehicleType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBPFL_UnionRunTuningUtil::GetHoverBaseHeight(EVehicleType VehicleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunTuningUtil", "GetHoverBaseHeight");

	Params::BPFL_UnionRunTuningUtil_GetHoverBaseHeight Parms{};

	Parms.VehicleType = VehicleType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunTuningUtil.GetIsDroneDisable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPFL_UnionRunTuningUtil::GetIsDroneDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunTuningUtil", "GetIsDroneDisable");

	Params::BPFL_UnionRunTuningUtil_GetIsDroneDisable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunTuningUtil.GetMeshSizeRate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EVehicleDisplayMode                     DisplayMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBPFL_UnionRunTuningUtil::GetMeshSizeRate(EVehicleDisplayMode DisplayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunTuningUtil", "GetMeshSizeRate");

	Params::BPFL_UnionRunTuningUtil_GetMeshSizeRate Parms{};

	Parms.DisplayMode = DisplayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunTuningUtil.GetStartingLightPosition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            SelectedPlayerNum                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Front                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Right                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBPFL_UnionRunTuningUtil::GetStartingLightPosition(const int32& SelectedPlayerNum, float* Front, float* Height, float* Right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunTuningUtil", "GetStartingLightPosition");

	Params::BPFL_UnionRunTuningUtil_GetStartingLightPosition Parms{};

	Parms.SelectedPlayerNum = SelectedPlayerNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Front != nullptr)
		*Front = Parms.Front;

	if (Height != nullptr)
		*Height = Parms.Height;

	if (Right != nullptr)
		*Right = Parms.Right;
}


// Function UnionRun.BPFL_UnionRunTuningUtil.GetYellowDrillMeshSizeRate
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBPFL_UnionRunTuningUtil::GetYellowDrillMeshSizeRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunTuningUtil", "GetYellowDrillMeshSizeRate");

	Params::BPFL_UnionRunTuningUtil_GetYellowDrillMeshSizeRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunVehicleUtil.GetCarStatusType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMachineId                              InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECarStatusType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECarStatusType UBPFL_UnionRunVehicleUtil::GetCarStatusType(EMachineId InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunVehicleUtil", "GetCarStatusType");

	Params::BPFL_UnionRunVehicleUtil_GetCarStatusType Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunVehicleUtil.GetDefaultMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECarStatusType                          InCarStatusType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMachineId UBPFL_UnionRunVehicleUtil::GetDefaultMachineId(ECarStatusType InCarStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunVehicleUtil", "GetDefaultMachineId");

	Params::BPFL_UnionRunVehicleUtil_GetDefaultMachineId Parms{};

	Parms.InCarStatusType = InCarStatusType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunVehicleUtil.GetFirstBasicCustomMachineId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECarStatusType                          InCarStatusType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMachineId UBPFL_UnionRunVehicleUtil::GetFirstBasicCustomMachineId(ECarStatusType InCarStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunVehicleUtil", "GetFirstBasicCustomMachineId");

	Params::BPFL_UnionRunVehicleUtil_GetFirstBasicCustomMachineId Parms{};

	Parms.InCarStatusType = InCarStatusType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BPFL_UnionRunVehicleUtil.IsHoverboard
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECarStatusType                          InCarStatusType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBPFL_UnionRunVehicleUtil::IsHoverboard(ECarStatusType InCarStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_UnionRunVehicleUtil", "IsHoverboard");

	Params::BPFL_UnionRunVehicleUtil_IsHoverboard Parms{};

	Parms.InCarStatusType = InCarStatusType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BreakObjectAnimInstance.SetHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Speed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBreakObjectAnimInstance::SetHit(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectAnimInstance", "SetHit");

	Params::BreakObjectAnimInstance_SetHit Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsAttack");

	Params::KingBoomBooAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsAttackEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsAttackEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsAttackEnd");

	Params::KingBoomBooAnimInstance_GetIsAttackEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsEnd");

	Params::KingBoomBooAnimInstance_GetIsEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsExit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsExit");

	Params::KingBoomBooAnimInstance_GetIsExit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsMove");

	Params::KingBoomBooAnimInstance_GetIsMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.GetIsStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKingBoomBooAnimInstance::GetIsStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "GetIsStart");

	Params::KingBoomBooAnimInstance_GetIsStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsAttack");

	Params::KingBoomBooAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsAttackEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsAttackEnd(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsAttackEnd");

	Params::KingBoomBooAnimInstance_SetIsAttackEnd Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsEnd(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsEnd");

	Params::KingBoomBooAnimInstance_SetIsEnd Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsExit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsExit(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsExit");

	Params::KingBoomBooAnimInstance_SetIsExit Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsMove(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsMove");

	Params::KingBoomBooAnimInstance_SetIsMove Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.KingBoomBooAnimInstance.SetIsStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKingBoomBooAnimInstance::SetIsStart(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooAnimInstance", "SetIsStart");

	Params::KingBoomBooAnimInstance_SetIsStart Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BreakObjectBase.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABreakObjectBase::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "HitRacer");

	Params::BreakObjectBase_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BreakObjectBase.OnPlayBreakAnimation
// (Event, Protected, BlueprintEvent)

void ABreakObjectBase::OnPlayBreakAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "OnPlayBreakAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BreakObjectBase.OnPlayBreakSound
// (Event, Protected, BlueprintEvent)

void ABreakObjectBase::OnPlayBreakSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "OnPlayBreakSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BreakObjectBase.OnPlayClashSound
// (Event, Protected, BlueprintEvent)

void ABreakObjectBase::OnPlayClashSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "OnPlayClashSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BreakObjectBase.GetBlendSpaceValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABreakObjectBase::GetBlendSpaceValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "GetBlendSpaceValue");

	Params::BreakObjectBase_GetBlendSpaceValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BreakObjectBase.IsBroken
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABreakObjectBase::IsBroken() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreakObjectBase", "IsBroken");

	Params::BreakObjectBase_IsBroken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.BtDebugDispActor.Execute_AreaDataBlockDisp
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_AreaDataBlockDisp(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_AreaDataBlockDisp");

	Params::BtDebugDispActor_Execute_AreaDataBlockDisp Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_AreaDataCourseCollisionDisp
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_AreaDataCourseCollisionDisp(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_AreaDataCourseCollisionDisp");

	Params::BtDebugDispActor_Execute_AreaDataCourseCollisionDisp Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_AreaDataCourseCollisionText
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_AreaDataCourseCollisionText(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_AreaDataCourseCollisionText");

	Params::BtDebugDispActor_Execute_AreaDataCourseCollisionText Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_CalcStageAABB
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_CalcStageAABB(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_CalcStageAABB");

	Params::BtDebugDispActor_Execute_CalcStageAABB Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_CollisionDisp
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_CollisionDisp(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_CollisionDisp");

	Params::BtDebugDispActor_Execute_CollisionDisp Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_CollisionText
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_CollisionText(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_CollisionText");

	Params::BtDebugDispActor_Execute_CollisionText Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_DispStageAABB
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_DispStageAABB(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_DispStageAABB");

	Params::BtDebugDispActor_Execute_DispStageAABB Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_DrawSphere
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_DrawSphere(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_DrawSphere");

	Params::BtDebugDispActor_Execute_DrawSphere Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BtDebugDispActor.Execute_RayCast
// (Final, Native, Public, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABtDebugDispActor::Execute_RayCast(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BtDebugDispActor", "Execute_RayCast");

	Params::BtDebugDispActor_Execute_RayCast Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "HitRacer");

	Params::BubbleItemBox_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.OnChangeItemBox
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemBoxType                            ItemBoxType_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::OnChangeItemBox(EItemBoxType ItemBoxType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "OnChangeItemBox");

	Params::BubbleItemBox_OnChangeItemBox Parms{};

	Parms.ItemBoxType_0 = ItemBoxType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.BubbleItemBox.OnHitRacer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::OnHitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "OnHitRacer");

	Params::BubbleItemBox_OnHitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.BubbleItemBox.OnPlayForceFeedback
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   LocalPlayerIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::OnPlayForceFeedback(int32 LocalPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "OnPlayForceFeedback");

	Params::BubbleItemBox_OnPlayForceFeedback Parms{};

	Parms.LocalPlayerIndex = LocalPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.BubbleItemBox.OnPlayTakeSound
// (Event, Public, BlueprintEvent)

void ABubbleItemBox::OnPlayTakeSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "OnPlayTakeSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BubbleItemBox.OnStartRelocation
// (Event, Public, BlueprintEvent)

void ABubbleItemBox::OnStartRelocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "OnStartRelocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BubbleItemBox.SetisReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    newParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::SetisReset(bool newParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "SetisReset");

	Params::BubbleItemBox_SetisReset Parms{};

	Parms.newParam = newParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.SetItemBoxType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemBoxType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::SetItemBoxType(EItemBoxType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "SetItemBoxType");

	Params::BubbleItemBox_SetItemBoxType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.SetItemBoxTypeEx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemBoxType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::SetItemBoxTypeEx(EItemBoxType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "SetItemBoxTypeEx");

	Params::BubbleItemBox_SetItemBoxTypeEx Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.SetVisibleEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::SetVisibleEnable(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "SetVisibleEnable");

	Params::BubbleItemBox_SetVisibleEnable Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleItemBox::Update(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "Update");

	Params::BubbleItemBox_Update Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleItemBox.GetSoundPan
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESoundPan                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESoundPan ABubbleItemBox::GetSoundPan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleItemBox", "GetSoundPan");

	Params::BubbleItemBox_GetSoundPan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SimpleTravelRingObject.GetTransformRingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETransformRingType                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ETransformRingType ASimpleTravelRingObject::GetTransformRingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "GetTransformRingType");

	Params::SimpleTravelRingObject_GetTransformRingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SimpleTravelRingObject.GetTravelRingSizeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETravelRingSizeType               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ETravelRingSizeType ASimpleTravelRingObject::GetTravelRingSizeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "GetTravelRingSizeType");

	Params::SimpleTravelRingObject_GetTravelRingSizeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SimpleTravelRingObject.GetTravelRingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const ETravelRingType                   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ETravelRingType ASimpleTravelRingObject::GetTravelRingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "GetTravelRingType");

	Params::SimpleTravelRingObject_GetTravelRingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SimpleTravelRingObject.SetTransformRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETransformRingType                Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASimpleTravelRingObject::SetTransformRingType(const ETransformRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "SetTransformRingType");

	Params::SimpleTravelRingObject_SetTransformRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SimpleTravelRingObject.SetTravelRingSizeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETravelRingSizeType               Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASimpleTravelRingObject::SetTravelRingSizeType(const ETravelRingSizeType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "SetTravelRingSizeType");

	Params::SimpleTravelRingObject_SetTravelRingSizeType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SimpleTravelRingObject.SetTravelRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const ETravelRingType                   Type                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASimpleTravelRingObject::SetTravelRingType(const ETravelRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SimpleTravelRingObject", "SetTravelRingType");

	Params::SimpleTravelRingObject_SetTravelRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleRing.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleRing::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "HitRacer");

	Params::BubbleRing_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleRing.SetisReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    newParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleRing::SetisReset(bool newParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "SetisReset");

	Params::BubbleRing_SetisReset Parms{};

	Parms.newParam = newParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleRing.SetRingNumMaterial
// (Event, Public, BlueprintEvent)

void ABubbleRing::SetRingNumMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "SetRingNumMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.BubbleRing.SetRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPackageRingType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleRing::SetRingType(EPackageRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "SetRingType");

	Params::BubbleRing_SetRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleRing.SetRingTypeEx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPackageRingType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleRing::SetRingTypeEx(EPackageRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "SetRingTypeEx");

	Params::BubbleRing_SetRingTypeEx Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.BubbleRing.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABubbleRing::Update(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BubbleRing", "Update");

	Params::BubbleRing_Update Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RespotObject.SetRespotMatrix
// (Final, Native, Public, BlueprintCallable)

void ARespotObject::SetRespotMatrix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespotObject", "SetRespotMatrix");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RespotObject.SetRespotType
// (Final, Native, Public, BlueprintCallable)

void ARespotObject::SetRespotType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespotObject", "SetRespotType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RespotObject.UpdateRespotMatrix
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                NewTransform                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARespotObject::UpdateRespotMatrix(const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RespotObject", "UpdateRespotMatrix");

	Params::RespotObject_UpdateRespotMatrix Parms{};

	Parms.NewTransform = std::move(NewTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CameraCollision.SetCameraData
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   NewCameraId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NewBoxSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EResultCameraProductionType             NewResultCameraType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACameraCollision::SetCameraData(int32 NewCameraId, const struct FVector& NewBoxSize, EResultCameraProductionType NewResultCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraCollision", "SetCameraData");

	Params::CameraCollision_SetCameraData Parms{};

	Parms.NewCameraId = NewCameraId;
	Parms.NewBoxSize = std::move(NewBoxSize);
	Parms.NewResultCameraType = NewResultCameraType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CameraMessageInterface.NotifyCameraChanged
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           PrevCamera                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewCamera                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FViewTargetTransitionParams&BlendSetting                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ICameraMessageInterface::NotifyCameraChanged(int32 PlayerControllerIndex, class AActor* PrevCamera, class AActor* NewCamera, const struct FViewTargetTransitionParams& BlendSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("CameraMessageInterface", "NotifyCameraChanged");

	Params::CameraMessageInterface_NotifyCameraChanged Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.PrevCamera = PrevCamera;
	Parms.NewCamera = NewCamera;
	Parms.BlendSetting = std::move(BlendSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CarObject.OnHitCommonTriggerConflict
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACarObject::OnHitCommonTriggerConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarObject", "OnHitCommonTriggerConflict");

	Params::CarObject_OnHitCommonTriggerConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CarObject.OnHitEventTriggerConflict
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACarObject::OnHitEventTriggerConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarObject", "OnHitEventTriggerConflict");

	Params::CarObject_OnHitEventTriggerConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CarObject.OnHitRingTriggerConflict
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACarObject::OnHitRingTriggerConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarObject", "OnHitRingTriggerConflict");

	Params::CarObject_OnHitRingTriggerConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GUNHunterAnimInstance.OnStartShootEnd
// (Final, Native, Public, BlueprintCallable)

void UGUNHunterAnimInstance::OnStartShootEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GUNHunterAnimInstance", "OnStartShootEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GUNHunterAnimInstance.SetIsAttackCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    isChange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGUNHunterAnimInstance::SetIsAttackCharge(bool isChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GUNHunterAnimInstance", "SetIsAttackCharge");

	Params::GUNHunterAnimInstance_SetIsAttackCharge Parms{};

	Parms.isChange = isChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GUNHunterAnimInstance.SetIsDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGUNHunterAnimInstance::SetIsDead(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GUNHunterAnimInstance", "SetIsDead");

	Params::GUNHunterAnimInstance_SetIsDead Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GUNHunterAnimInstance.IsShootState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGUNHunterShootState                    State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isDown                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGUNHunterAnimInstance::IsShootState(EGUNHunterShootState State, bool isDown) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GUNHunterAnimInstance", "IsShootState");

	Params::GUNHunterAnimInstance_IsShootState Parms{};

	Parms.State = State;
	Parms.isDown = isDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GUNHunterAnimInstance.IsStartMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGUNHunterStartType                     Motion                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGUNHunterAnimInstance::IsStartMotion(EGUNHunterStartType Motion) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GUNHunterAnimInstance", "IsStartMotion");

	Params::GUNHunterAnimInstance_IsStartMotion Parms{};

	Parms.Motion = Motion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CheatItem.Execute_AllRacerUseItemMode
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_AllRacerUseItemMode(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_AllRacerUseItemMode");

	Params::CheatItem_Execute_AllRacerUseItemMode Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_DebugItemCount
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_DebugItemCount(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_DebugItemCount");

	Params::CheatItem_Execute_DebugItemCount Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_DebugItemCountStop
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_DebugItemCountStop(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_DebugItemCountStop");

	Params::CheatItem_Execute_DebugItemCountStop Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_SetItemCapacity
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_SetItemCapacity(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_SetItemCapacity");

	Params::CheatItem_Execute_SetItemCapacity Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_SetItemHitToItem
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_SetItemHitToItem(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_SetItemHitToItem");

	Params::CheatItem_Execute_SetItemHitToItem Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_SetItemHitToMachine
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_SetItemHitToMachine(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_SetItemHitToMachine");

	Params::CheatItem_Execute_SetItemHitToMachine Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_SetItemRocketPunchForceNoReflect
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_SetItemRocketPunchForceNoReflect(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_SetItemRocketPunchForceNoReflect");

	Params::CheatItem_Execute_SetItemRocketPunchForceNoReflect Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_SetItemSlimeAutoUserInput
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_SetItemSlimeAutoUserInput(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_SetItemSlimeAutoUserInput");

	Params::CheatItem_Execute_SetItemSlimeAutoUserInput Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatItem.Execute_ShowItemCount
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatItem::Execute_ShowItemCount(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatItem", "Execute_ShowItemCount");

	Params::CheatItem_Execute_ShowItemCount Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatPerformance.CheckRaceCheatManagerTick
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   on                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheatPerformance::CheckRaceCheatManagerTick(int32 on)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatPerformance", "CheckRaceCheatManagerTick");

	Params::CheatPerformance_CheckRaceCheatManagerTick Parms{};

	Parms.on = on;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatPerformance.Execute_CheatPerformanceSetSeq
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatPerformance::Execute_CheatPerformanceSetSeq(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatPerformance", "Execute_CheatPerformanceSetSeq");

	Params::CheatPerformance_Execute_CheatPerformanceSetSeq Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatPerformance.Execute_DebugRayCast
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatPerformance::Execute_DebugRayCast(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatPerformance", "Execute_DebugRayCast");

	Params::CheatPerformance_Execute_DebugRayCast Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatPerformance.Execute_DebugRayCastStop
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatPerformance::Execute_DebugRayCastStop(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatPerformance", "Execute_DebugRayCastStop");

	Params::CheatPerformance_Execute_DebugRayCastStop Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatPerformance.Execute_RaceTestConfig_SetAutoUnrealInsights
// (Final, Native, Private, HasOutParams)
// Parameters:
// const TArray<class FString>&            args                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCheatPerformance::Execute_RaceTestConfig_SetAutoUnrealInsights(const TArray<class FString>& args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatPerformance", "Execute_RaceTestConfig_SetAutoUnrealInsights");

	Params::CheatPerformance_Execute_RaceTestConfig_SetAutoUnrealInsights Parms{};

	Parms.args = std::move(args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatRaceCommon.EnableSplitScreen
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheatRaceCommon::EnableSplitScreen(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatRaceCommon", "EnableSplitScreen");

	Params::CheatRaceCommon_EnableSplitScreen Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatRaceCommon.RemoveAllWidgets
// (Final, Exec, Native, Public)

void UCheatRaceCommon::RemoveAllWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatRaceCommon", "RemoveAllWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CheatRaceCommon.SetVisibleUnionRunParam
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCheatRaceCommon::SetVisibleUnionRunParam(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheatRaceCommon", "SetVisibleUnionRunParam");

	Params::CheatRaceCommon_SetVisibleUnionRunParam Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PauseManager.SetGamePaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Paused                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPauseManager::SetGamePaused(bool Paused, int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "SetGamePaused");

	Params::PauseManager_SetGamePaused Parms{};

	Parms.Paused = Paused;
	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PauseManager.SetGamePauseOwnerRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPauseManager::SetGamePauseOwnerRacerIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "SetGamePauseOwnerRacerIndex");

	Params::PauseManager_SetGamePauseOwnerRacerIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PauseManager.SetIsOnlineMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsOnlineMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPauseManager::SetIsOnlineMode(bool IsOnlineMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "SetIsOnlineMode");

	Params::PauseManager_SetIsOnlineMode Parms{};

	Parms.IsOnlineMode = IsOnlineMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PauseManager.GetGamePauseOwnerRacerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPauseManager::GetGamePauseOwnerRacerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "GetGamePauseOwnerRacerIndex");

	Params::PauseManager_GetGamePauseOwnerRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.PauseManager.IsGamePaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPauseManager::IsGamePaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "IsGamePaused");

	Params::PauseManager_IsGamePaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.PauseManager.IsGamePauseOwnerGoaled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPauseManager::IsGamePauseOwnerGoaled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "IsGamePauseOwnerGoaled");

	Params::PauseManager_IsGamePauseOwnerGoaled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.PauseManager.IsOnlineMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPauseManager::IsOnlineMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PauseManager", "IsOnlineMode");

	Params::PauseManager_IsOnlineMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ColliderComponent.SetCheckScaleEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetCheckScaleEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetCheckScaleEnabled");

	Params::ColliderComponent_SetCheckScaleEnabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetCollisionProcessEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetCollisionProcessEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetCollisionProcessEnabled");

	Params::ColliderComponent_SetCollisionProcessEnabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetObjectCollisionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetObjectCollisionEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetObjectCollisionEnabled");

	Params::ColliderComponent_SetObjectCollisionEnabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetOverrideTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                trans                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetOverrideTransform(const struct FTransform& trans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetOverrideTransform");

	Params::ColliderComponent_SetOverrideTransform Parms{};

	Parms.trans = std::move(trans);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetScaleEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetScaleEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetScaleEnabled");

	Params::ColliderComponent_SetScaleEnabled Parms{};

	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetSurfaceFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FUnionSurfaceFlag&         flag                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UColliderComponent::SetSurfaceFlag(const struct FUnionSurfaceFlag& flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetSurfaceFlag");

	Params::ColliderComponent_SetSurfaceFlag Parms{};

	Parms.flag = std::move(flag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.SetSurfaceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionSurfaceType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UColliderComponent::SetSurfaceType(EUnionSurfaceType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "SetSurfaceType");

	Params::ColliderComponent_SetSurfaceType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ColliderComponent.GetCollisionProcessEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UColliderComponent::GetCollisionProcessEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "GetCollisionProcessEnabled");

	Params::ColliderComponent_GetCollisionProcessEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ColliderComponent.GetFinalTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UColliderComponent::GetFinalTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "GetFinalTransform");

	Params::ColliderComponent_GetFinalTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ColliderComponent.GetObjectCollisionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UColliderComponent::GetObjectCollisionEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "GetObjectCollisionEnabled");

	Params::ColliderComponent_GetObjectCollisionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ColliderComponent.GetOverrideTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTransform                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FTransform UColliderComponent::GetOverrideTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "GetOverrideTransform");

	Params::ColliderComponent_GetOverrideTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ColliderComponent.GetScaleEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UColliderComponent::GetScaleEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColliderComponent", "GetScaleEnabled");

	Params::ColliderComponent_GetScaleEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceObjectSimpleAnimation.UpdateTransform
// (Final, Native, Private, BlueprintCallable)

void ARaceObjectSimpleAnimation::UpdateTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceObjectSimpleAnimation", "UpdateTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.SetCollisionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCollisionBaseComponent::SetCollisionEnabled(bool bEnabled, bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "SetCollisionEnabled");

	Params::CollisionBaseComponent_SetCollisionEnabled Parms{};

	Parms.bEnabled = bEnabled;
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.SetDomainNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDomainNumber                           domain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCollisionBaseComponent::SetDomainNumber(EDomainNumber domain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "SetDomainNumber");

	Params::CollisionBaseComponent_SetDomainNumber Parms{};

	Parms.domain = domain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.SetLocalScalingUE
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Scale                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCollisionBaseComponent::SetLocalScalingUE(const struct FVector& Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "SetLocalScalingUE");

	Params::CollisionBaseComponent_SetLocalScalingUE Parms{};

	Parms.Scale = std::move(Scale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.SetOverrideTransform
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                trans                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCollisionBaseComponent::SetOverrideTransform(const struct FTransform& trans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "SetOverrideTransform");

	Params::CollisionBaseComponent_SetOverrideTransform Parms{};

	Parms.trans = std::move(trans);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.UpdateCollisionShape
// (Final, Native, Public, BlueprintCallable)

void UCollisionBaseComponent::UpdateCollisionShape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "UpdateCollisionShape");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CollisionBaseComponent.GetLocalScalingUE
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UCollisionBaseComponent::GetLocalScalingUE() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "GetLocalScalingUE");

	Params::CollisionBaseComponent_GetLocalScalingUE Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CollisionBaseComponent.GetTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UCollisionBaseComponent::GetTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "GetTransform");

	Params::CollisionBaseComponent_GetTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CollisionBaseComponent.IsCollisionAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCollisionBaseComponent::IsCollisionAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "IsCollisionAvailable");

	Params::CollisionBaseComponent_IsCollisionAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CollisionBaseComponent.IsCollisionEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCollisionBaseComponent::IsCollisionEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollisionBaseComponent", "IsCollisionEnabled");

	Params::CollisionBaseComponent_IsCollisionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CollisionMessageInterface.NotifyTriggerConflict
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ICollisionMessageInterface::NotifyTriggerConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("CollisionMessageInterface", "NotifyTriggerConflict");

	Params::CollisionMessageInterface_NotifyTriggerConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubPlayerName.GetGhostPfId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubPlayerName::GetGhostPfId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubPlayerName", "GetGhostPfId");

	Params::RaceUISubPlayerName_GetGhostPfId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemBlackBombBaseObject.OnTriggerConflict
// (Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemBlackBombBaseObject::OnTriggerConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBlackBombBaseObject", "OnTriggerConflict");

	Params::ItemBlackBombBaseObject_OnTriggerConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CourseSequenceActorSpawner.GetSpawnActor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ACourseSequenceActorSpawner::GetSpawnActor(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CourseSequenceActorSpawner", "GetSpawnActor");

	Params::CourseSequenceActorSpawner_GetSpawnActor Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.CourseSequenceActorSpawner.PostSpawnSequenceActor
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void ACourseSequenceActorSpawner::PostSpawnSequenceActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CourseSequenceActorSpawner", "PostSpawnSequenceActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.CourseSequenceActorSpawner.SetSize
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACourseSequenceActorSpawner::SetSize(const struct FVector& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CourseSequenceActorSpawner", "SetSize");

	Params::CourseSequenceActorSpawner_SetSize Parms{};

	Parms.Size = std::move(Size);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.GetIsPhase1Attack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDarkGaiaPhoenixAnimInstance::GetIsPhase1Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "GetIsPhase1Attack");

	Params::DarkGaiaPhoenixAnimInstance_GetIsPhase1Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.GetIsPhase2Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDarkGaiaPhoenixAnimInstance::GetIsPhase2Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "GetIsPhase2Move");

	Params::DarkGaiaPhoenixAnimInstance_GetIsPhase2Move Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.GetIsPhase3Attack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDarkGaiaPhoenixAnimInstance::GetIsPhase3Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "GetIsPhase3Attack");

	Params::DarkGaiaPhoenixAnimInstance_GetIsPhase3Attack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.GetIsPhase3Mirror
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDarkGaiaPhoenixAnimInstance::GetIsPhase3Mirror()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "GetIsPhase3Mirror");

	Params::DarkGaiaPhoenixAnimInstance_GetIsPhase3Mirror Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.GetIsPhase3Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDarkGaiaPhoenixAnimInstance::GetIsPhase3Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "GetIsPhase3Move");

	Params::DarkGaiaPhoenixAnimInstance_GetIsPhase3Move Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.SetIsPhase1Attack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDarkGaiaPhoenixAnimInstance::SetIsPhase1Attack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "SetIsPhase1Attack");

	Params::DarkGaiaPhoenixAnimInstance_SetIsPhase1Attack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.SetIsPhase2Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDarkGaiaPhoenixAnimInstance::SetIsPhase2Move(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "SetIsPhase2Move");

	Params::DarkGaiaPhoenixAnimInstance_SetIsPhase2Move Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.SetIsPhase3Attack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDarkGaiaPhoenixAnimInstance::SetIsPhase3Attack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "SetIsPhase3Attack");

	Params::DarkGaiaPhoenixAnimInstance_SetIsPhase3Attack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.SetIsPhase3Mirror
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDarkGaiaPhoenixAnimInstance::SetIsPhase3Mirror(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "SetIsPhase3Mirror");

	Params::DarkGaiaPhoenixAnimInstance_SetIsPhase3Mirror Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DarkGaiaPhoenixAnimInstance.SetIsPhase3Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDarkGaiaPhoenixAnimInstance::SetIsPhase3Move(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DarkGaiaPhoenixAnimInstance", "SetIsPhase3Move");

	Params::DarkGaiaPhoenixAnimInstance_SetIsPhase3Move Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DeathEggAnimInstance.OnEnterPubchLoop
// (Final, Native, Public, BlueprintCallable)

void UDeathEggAnimInstance::OnEnterPubchLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathEggAnimInstance", "OnEnterPubchLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DeathEggAnimInstance.OnEnterWait
// (Final, Native, Public, BlueprintCallable)

void UDeathEggAnimInstance::OnEnterWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathEggAnimInstance", "OnEnterWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.DeathEggAnimInstance.IsPunchState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDeathEggState                          State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDeathEggAnimInstance::IsPunchState(EDeathEggState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeathEggAnimInstance", "IsPunchState");

	Params::DeathEggAnimInstance_IsPunchState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTimeTrialTimeLap.SetLapDiffTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LapNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTimeLap::SetLapDiffTime(int32 LapNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTimeLap", "SetLapDiffTime");

	Params::RaceUISubTimeTrialTimeLap_SetLapDiffTime Parms{};

	Parms.LapNum = LapNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTimeLap.SetLapTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FRaceUITimeTrialTime&      NewTime                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTimeLap::SetLapTime(const struct FRaceUITimeTrialTime& NewTime, int32 Lap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTimeLap", "SetLapTime");

	Params::RaceUISubTimeTrialTimeLap_SetLapTime Parms{};

	Parms.NewTime = std::move(NewTime);
	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTimeLap.SetLapTimeIsGhostReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTimeLap::SetLapTimeIsGhostReplay(int32 Lap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTimeLap", "SetLapTimeIsGhostReplay");

	Params::RaceUISubTimeTrialTimeLap_SetLapTimeIsGhostReplay Parms{};

	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTimeLap.SetLapTimeWithDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FRaceUITimeTrialTime&      NewTime                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisibleDiff                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTimeLap::SetLapTimeWithDiff(const struct FRaceUITimeTrialTime& NewTime, int32 Lap, bool IsVisibleDiff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTimeLap", "SetLapTimeWithDiff");

	Params::RaceUISubTimeTrialTimeLap_SetLapTimeWithDiff Parms{};

	Parms.NewTime = std::move(NewTime);
	Parms.Lap = Lap;
	Parms.IsVisibleDiff = IsVisibleDiff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTimeLap.UpdateLapTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRaceUITimeTrialTime             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRaceUITimeTrialTime URaceUISubTimeTrialTimeLap::UpdateLapTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTimeLap", "UpdateLapTime");

	Params::RaceUISubTimeTrialTimeLap_UpdateLapTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemBoxObject.OnChangeItemBox
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemBoxType                            ItemBoxType_0                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxObject::OnChangeItemBox(EItemBoxType ItemBoxType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "OnChangeItemBox");

	Params::ItemBoxObject_OnChangeItemBox Parms{};

	Parms.ItemBoxType_0 = ItemBoxType_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemBoxObject.OnHitRacer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxObject::OnHitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "OnHitRacer");

	Params::ItemBoxObject_OnHitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemBoxObject.OnPlayForceFeedback
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   LocalPlayerIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxObject::OnPlayForceFeedback(int32 LocalPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "OnPlayForceFeedback");

	Params::ItemBoxObject_OnPlayForceFeedback Parms{};

	Parms.LocalPlayerIndex = LocalPlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemBoxObject.OnPlayTakeSound
// (Event, Public, BlueprintEvent)

void AItemBoxObject::OnPlayTakeSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "OnPlayTakeSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemBoxObject.OnStartRelocation
// (Event, Public, BlueprintEvent)

void AItemBoxObject::OnStartRelocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "OnStartRelocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemBoxObject.SetItemBoxType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemBoxType                            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxObject::SetItemBoxType(EItemBoxType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "SetItemBoxType");

	Params::ItemBoxObject_SetItemBoxType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemBoxObject.SetSpecifiedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemId                                 Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxObject::SetSpecifiedItem(EItemId Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "SetSpecifiedItem");

	Params::ItemBoxObject_SetSpecifiedItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemBoxObject.GetSoundPan
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESoundPan                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESoundPan AItemBoxObject::GetSoundPan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxObject", "GetSoundPan");

	Params::ItemBoxObject_GetSoundPan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.DroppedRingFactory.OnPlayDroppedRingSound_DAMAGE_01
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingFactory::OnPlayDroppedRingSound_DAMAGE_01(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingFactory", "OnPlayDroppedRingSound_DAMAGE_01");

	Params::DroppedRingFactory_OnPlayDroppedRingSound_DAMAGE_01 Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.DroppedRingFactory.OnPlayDroppedRingSound_HIT_01
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingFactory::OnPlayDroppedRingSound_HIT_01(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingFactory", "OnPlayDroppedRingSound_HIT_01");

	Params::DroppedRingFactory_OnPlayDroppedRingSound_HIT_01 Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.DroppedRingFactory.OnPlayDroppedRingSound_Large
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingFactory::OnPlayDroppedRingSound_Large(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingFactory", "OnPlayDroppedRingSound_Large");

	Params::DroppedRingFactory_OnPlayDroppedRingSound_Large Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.DroppedRingFactory.OnPlayDroppedRingSound_Medium
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingFactory::OnPlayDroppedRingSound_Medium(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingFactory", "OnPlayDroppedRingSound_Medium");

	Params::DroppedRingFactory_OnPlayDroppedRingSound_Medium Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.DroppedRingFactory.OnPlayDroppedRingSound_Small
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingFactory::OnPlayDroppedRingSound_Small(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingFactory", "OnPlayDroppedRingSound_Small");

	Params::DroppedRingFactory_OnPlayDroppedRingSound_Small Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.DroppedRingObject.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADroppedRingObject::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DroppedRingObject", "HitRacer");

	Params::DroppedRingObject_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsAttack");

	Params::EggChaserAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.GetIsAttackReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsAttackReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsAttackReady");

	Params::EggChaserAnimInstance_GetIsAttackReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.GetIsFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsFly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsFly");

	Params::EggChaserAnimInstance_GetIsFly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.GetIsFlyToWait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsFlyToWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsFlyToWait");

	Params::EggChaserAnimInstance_GetIsFlyToWait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.GetIsPhase3Move
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsPhase3Move()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsPhase3Move");

	Params::EggChaserAnimInstance_GetIsPhase3Move Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.GetIsWaitToFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggChaserAnimInstance::GetIsWaitToFly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "GetIsWaitToFly");

	Params::EggChaserAnimInstance_GetIsWaitToFly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggChaserAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsAttack");

	Params::EggChaserAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.SetIsAttackReady
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsAttackReady(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsAttackReady");

	Params::EggChaserAnimInstance_SetIsAttackReady Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.SetIsFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsFly(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsFly");

	Params::EggChaserAnimInstance_SetIsFly Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.SetIsFlyToWait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsFlyToWait(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsFlyToWait");

	Params::EggChaserAnimInstance_SetIsFlyToWait Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.SetIsWait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsWait(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsWait");

	Params::EggChaserAnimInstance_SetIsWait Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggChaserAnimInstance.SetIsWaitToFly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEggChaserAnimInstance::SetIsWaitToFly(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggChaserAnimInstance", "SetIsWaitToFly");

	Params::EggChaserAnimInstance_SetIsWaitToFly Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBoost.CheckBoostLevelInGhostReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBoost::CheckBoostLevelInGhostReplay(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "CheckBoostLevelInGhostReplay");

	Params::RaceUISubBoost_CheckBoostLevelInGhostReplay Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBoost.IsFastFirstCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBoost::IsFastFirstCharge(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "IsFastFirstCharge");

	Params::RaceUISubBoost_IsFastFirstCharge Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBoost.IsFastSecondCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBoost::IsFastSecondCharge(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "IsFastSecondCharge");

	Params::RaceUISubBoost_IsFastSecondCharge Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBoost.IsFastThirdCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBoost::IsFastThirdCharge(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "IsFastThirdCharge");

	Params::RaceUISubBoost_IsFastThirdCharge Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBoost.IsViewGhostReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBoost::IsViewGhostReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "IsViewGhostReplay");

	Params::RaceUISubBoost_IsViewGhostReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBoost.SetVisibleHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBoost::SetVisibleHUD(bool IsVisible_0, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "SetVisibleHUD");

	Params::RaceUISubBoost_SetVisibleHUD Parms{};

	Parms.IsVisible_0 = IsVisible_0;
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBoost.SetWaitTimeJustBoostInGhostReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBoost::SetWaitTimeJustBoostInGhostReplay(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "SetWaitTimeJustBoostInGhostReplay");

	Params::RaceUISubBoost_SetWaitTimeJustBoostInGhostReplay Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBoost.UpdateChargeInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ChargeLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChargeRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBoost::UpdateChargeInfo(int32 ChargeLevel, float ChargeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "UpdateChargeInfo");

	Params::RaceUISubBoost_UpdateChargeInfo Parms{};

	Parms.ChargeLevel = ChargeLevel;
	Parms.ChargeRate = ChargeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBoost.GetIsOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBoost::GetIsOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBoost", "GetIsOpened");

	Params::RaceUISubBoost_GetIsOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.Gimmick_Extnd05_Enemy04004.IsDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmick_Extnd05_Enemy04004::IsDamaged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimmick_Extnd05_Enemy04004", "IsDamaged");

	Params::Gimmick_Extnd05_Enemy04004_IsDamaged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggDragoonAnimInstance.OnEnterAttackLoop
// (Final, Native, Public, BlueprintCallable)

void UEggDragoonAnimInstance::OnEnterAttackLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggDragoonAnimInstance", "OnEnterAttackLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggDragoonAnimInstance.OnEnterAttackWait
// (Final, Native, Public, BlueprintCallable)

void UEggDragoonAnimInstance::OnEnterAttackWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggDragoonAnimInstance", "OnEnterAttackWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EggDragoonAnimInstance.IsAttackState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEggDragoonState                        State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggDragoonAnimInstance::IsAttackState(EEggDragoonState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggDragoonAnimInstance", "IsAttackState");

	Params::EggDragoonAnimInstance_IsAttackState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EggDragoonAnimInstance.IsStateActivate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEggDragoonAnimInstance::IsStateActivate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EggDragoonAnimInstance", "IsStateActivate");

	Params::EggDragoonAnimInstance_IsStateActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EnemyAmbushTrex.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyAmbushTrex::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAmbushTrex", "HitRacer");

	Params::EnemyAmbushTrex_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBtnKey.SetButtonState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBtnKey::SetButtonState(int32 InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnKey", "SetButtonState");

	Params::RaceUISubBtnKey_SetButtonState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubBtnKey.GetKeyDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText URaceUISubBtnKey::GetKeyDisplayName(const struct FKey& InKey, int32 PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnKey", "GetKeyDisplayName");

	Params::RaceUISubBtnKey_GetKeyDisplayName Parms{};

	Parms.InKey = std::move(InKey);
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnKey.GetMouseButtonIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubBtnKey::GetMouseButtonIndex(const struct FKey& InKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnKey", "GetMouseButtonIndex");

	Params::RaceUISubBtnKey_GetMouseButtonIndex Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.EnemyAttackStoneStatue.MovePositionUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyAttackStoneStatue::MovePositionUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAttackStoneStatue", "MovePositionUpdate");

	Params::EnemyAttackStoneStatue_MovePositionUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyAttackStoneStatue.OnStatueDamageFinishEvent
// (Event, Public, BlueprintEvent)

void AEnemyAttackStoneStatue::OnStatueDamageFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAttackStoneStatue", "OnStatueDamageFinishEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyAttackStoneStatue.OnStatueDamageStartEvent
// (Event, Public, BlueprintEvent)

void AEnemyAttackStoneStatue::OnStatueDamageStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAttackStoneStatue", "OnStatueDamageStartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyAttackStoneStatue.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyAttackStoneStatue::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAttackStoneStatue", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyAttackStoneStatue.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyAttackStoneStatue::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyAttackStoneStatue", "OnTriggerColliderConflict");

	Params::EnemyAttackStoneStatue_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.ChangeStateMove
// (Final, Native, Public, BlueprintCallable)

void AEnemyBigTrain::ChangeStateMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "ChangeStateMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.ChangeStateReturnStart
// (Final, Native, Public, BlueprintCallable)

void AEnemyBigTrain::ChangeStateReturnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "ChangeStateReturnStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.ChangeStateStay
// (Final, Native, Public, BlueprintCallable)

void AEnemyBigTrain::ChangeStateStay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "ChangeStateStay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.OnPlayMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyBigTrain::OnPlayMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnPlayMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyBigTrain.OnStopMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyBigTrain::OnStopMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnStopMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyBigTrain.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyBigTrain::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyBigTrain::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnTriggerColliderConflict");

	Params::EnemyBigTrain_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.OnTriggerColliderConflictSteamAttack
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyBigTrain::OnTriggerColliderConflictSteamAttack(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnTriggerColliderConflictSteamAttack");

	Params::EnemyBigTrain_OnTriggerColliderConflictSteamAttack Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyBigTrain.OnUpdateMoveSoundLocation
// (Event, Public, BlueprintEvent)

void AEnemyBigTrain::OnUpdateMoveSoundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyBigTrain", "OnUpdateMoveSoundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenix.OnPlayMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenix::OnPlayMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenix", "OnPlayMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenix.OnStopMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenix::OnStopMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenix", "OnStopMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenix.OnUpdateMoveSoundLocation
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenix::OnUpdateMoveSoundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenix", "OnUpdateMoveSoundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenix.StartAttack
// (Final, Native, Public, BlueprintCallable)

void AEnemyDarkGaiaPhoenix::StartAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenix", "StartAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyDarkGaiaPhoenixPhase3.ActivateAttackEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsRight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isMirrer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyDarkGaiaPhoenixPhase3::ActivateAttackEffect(bool IsRight, bool isMirrer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenixPhase3", "ActivateAttackEffect");

	Params::EnemyDarkGaiaPhoenixPhase3_ActivateAttackEffect Parms{};

	Parms.IsRight = IsRight;
	Parms.isMirrer = isMirrer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyDarkGaiaPhoenixPhase3.OnPlayMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenixPhase3::OnPlayMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenixPhase3", "OnPlayMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenixPhase3.OnStopMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenixPhase3::OnStopMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenixPhase3", "OnStopMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenixPhase3.OnUpdateMoveSoundLocation
// (Event, Public, BlueprintEvent)

void AEnemyDarkGaiaPhoenixPhase3::OnUpdateMoveSoundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenixPhase3", "OnUpdateMoveSoundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyDarkGaiaPhoenixPhase3.WingAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsRight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    isMirrer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyDarkGaiaPhoenixPhase3::WingAttack(bool IsRight, bool isMirrer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyDarkGaiaPhoenixPhase3", "WingAttack");

	Params::EnemyDarkGaiaPhoenixPhase3_WingAttack Parms{};

	Parms.IsRight = IsRight;
	Parms.isMirrer = isMirrer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmckEventCollision.SetEventId
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUnionEventId                           EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmckEventCollision::SetEventId(EUnionEventId EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmckEventCollision", "SetEventId");

	Params::GimmckEventCollision_SetEventId Parms{};

	Parms.EventId = EventId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyEggChaser.ActivateAttack
// (Final, Native, Public, BlueprintCallable)

void AEnemyEggChaser::ActivateAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyEggChaser", "ActivateAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyEggChaser.ActivateChase
// (Final, Native, Public, BlueprintCallable)

void AEnemyEggChaser::ActivateChase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyEggChaser", "ActivateChase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyEggChaser.StartAttack
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyEggChaser::StartAttack(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyEggChaser", "StartAttack");

	Params::EnemyEggChaser_StartAttack Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.EnemyHeadButtTrex.OnDestroyRockEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyHeadButtTrex::OnDestroyRockEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyHeadButtTrex", "OnDestroyRockEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyHeadButtTrex.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyHeadButtTrex::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyHeadButtTrex", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoai.MovePositionUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyMoai::MovePositionUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoai", "MovePositionUpdate");

	Params::EnemyMoai_MovePositionUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoai.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyMoai::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoai", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoai.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyMoai::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoai", "OnTriggerColliderConflict");

	Params::EnemyMoai_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoaiFinalLap.MovePositionFinished
// (Final, Native, Private)

void AEnemyMoaiFinalLap::MovePositionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoaiFinalLap", "MovePositionFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoaiFinalLap.MovePositionUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyMoaiFinalLap::MovePositionUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoaiFinalLap", "MovePositionUpdate");

	Params::EnemyMoaiFinalLap_MovePositionUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoaiFinalLap.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyMoaiFinalLap::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoaiFinalLap", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyMoaiFinalLap.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyMoaiFinalLap::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyMoaiFinalLap", "OnTriggerColliderConflict");

	Params::EnemyMoaiFinalLap_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickRingDropper.DropRings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   DropRingCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickRingDropper::DropRings(int32 DropRingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickRingDropper", "DropRings");

	Params::GimmickRingDropper_DropRings Parms{};

	Parms.DropRingCount = DropRingCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyShipPaddle.MovePositionUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyShipPaddle::MovePositionUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyShipPaddle", "MovePositionUpdate");

	Params::EnemyShipPaddle_MovePositionUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySmallTrain.ChangeStateMove
// (Final, Native, Public, BlueprintCallable)

void AEnemySmallTrain::ChangeStateMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "ChangeStateMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySmallTrain.ChangeStateReturnStart
// (Final, Native, Public, BlueprintCallable)

void AEnemySmallTrain::ChangeStateReturnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "ChangeStateReturnStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySmallTrain.ChangeStateStay
// (Final, Native, Public, BlueprintCallable)

void AEnemySmallTrain::ChangeStateStay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "ChangeStateStay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySmallTrain.OnPlayMoveSound
// (Event, Public, BlueprintEvent)

void AEnemySmallTrain::OnPlayMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "OnPlayMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemySmallTrain.OnStopMoveSound
// (Event, Public, BlueprintEvent)

void AEnemySmallTrain::OnStopMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "OnStopMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemySmallTrain.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemySmallTrain::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "OnTriggerColliderConflict");

	Params::EnemySmallTrain_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySmallTrain.OnUpdateMoveSoundLocation
// (Event, Public, BlueprintEvent)

void AEnemySmallTrain::OnUpdateMoveSoundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySmallTrain", "OnUpdateMoveSoundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemySnake.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemySnake::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySnake", "OnTriggerColliderConflict");

	Params::EnemySnake_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.BubbleIdleMoveFinished
// (Final, Native, Private)

void AGimmickBubble::BubbleIdleMoveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "BubbleIdleMoveFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.BubbleIdleMoveUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::BubbleIdleMoveUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "BubbleIdleMoveUpdate");

	Params::GimmickBubble_BubbleIdleMoveUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.BubbleScaleFinished
// (Final, Native, Private)

void AGimmickBubble::BubbleScaleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "BubbleScaleFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.BubbleScaleUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::BubbleScaleUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "BubbleScaleUpdate");

	Params::GimmickBubble_BubbleScaleUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.ForceSetDomainNumber
// (Event, Public, BlueprintEvent)
// Parameters:
// EDomainNumber                           Number                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::ForceSetDomainNumber(EDomainNumber Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "ForceSetDomainNumber");

	Params::GimmickBubble_ForceSetDomainNumber Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.GimmickBubble.ForceUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::ForceUpdate(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "ForceUpdate");

	Params::GimmickBubble_ForceUpdate Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.GimmickBubble.ManualUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::ManualUpdate(float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "ManualUpdate");

	Params::GimmickBubble_ManualUpdate Parms{};

	Parms.InDeltaTime = InDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBubble.OnGetBonusItem
// (Event, Public, BlueprintEvent)
// Parameters:
// EBubbleBonusType                        BonusType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::OnGetBonusItem(EBubbleBonusType BonusType, int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "OnGetBonusItem");

	Params::GimmickBubble_OnGetBonusItem Parms{};

	Parms.BonusType = BonusType;
	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.GimmickBubble.SetVisivleBonusItemType
// (Event, Public, BlueprintEvent)
// Parameters:
// EBubbleBonusType                        BonusType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBubble::SetVisivleBonusItemType(EBubbleBonusType BonusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBubble", "SetVisivleBonusItemType");

	Params::GimmickBubble_SetVisivleBonusItemType Parms{};

	Parms.BonusType = BonusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.EnemySquidDestination.EditorCalcDestination
// (Final, Native, Public, BlueprintCallable)

void AEnemySquidDestination::EditorCalcDestination()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySquidDestination", "EditorCalcDestination");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySquidDestination.EditorUpdatePathLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            SplineActor                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemySquidDestination::EditorUpdatePathLocation(TSoftObjectPtr<class AActor> SplineActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySquidDestination", "EditorUpdatePathLocation");

	Params::EnemySquidDestination_EditorUpdatePathLocation Parms{};

	Parms.SplineActor = SplineActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemySquidDestination.OnEditorCalcDestEvent
// (Event, Public, BlueprintEvent)

void AEnemySquidDestination::OnEditorCalcDestEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySquidDestination", "OnEditorCalcDestEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyStoneStatue.MovePositionUpdate
// (Final, Native, Private)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyStoneStatue::MovePositionUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyStoneStatue", "MovePositionUpdate");

	Params::EnemyStoneStatue_MovePositionUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyStoneStatue.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyStoneStatue::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyStoneStatue", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyStoneStatue.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemyStoneStatue::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyStoneStatue", "OnTriggerColliderConflict");

	Params::EnemyStoneStatue_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubAiming.InitParam
// (Final, Native, Public, BlueprintCallable)

void URaceUISubAiming::InitParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAiming", "InitParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubAiming.ReStartAimingUseBeforeSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubAiming::ReStartAimingUseBeforeSound(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAiming", "ReStartAimingUseBeforeSound");

	Params::RaceUISubAiming_ReStartAimingUseBeforeSound Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubAiming.SetRaceHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceUI*                     inRaceHud                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   localPlayerNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubAiming::SetRaceHUD(class UUnionRaceUI* inRaceHud, int32 localPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAiming", "SetRaceHUD");

	Params::RaceUISubAiming_SetRaceHUD Parms{};

	Parms.inRaceHud = inRaceHud;
	Parms.localPlayerNum = localPlayerNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubAiming.StopSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubAiming::StopSound(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAiming", "StopSound");

	Params::RaceUISubAiming_StopSound Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyTentacle.OnAttackBlink
// (Event, Public, BlueprintEvent)

void AEnemyTentacle::OnAttackBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTentacle", "OnAttackBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyTentacle.OnHitFramePrint
// (Event, Public, BlueprintEvent)

void AEnemyTentacle::OnHitFramePrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTentacle", "OnHitFramePrint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyTentacle.TimelineStep
// (Final, Native, Private)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEnemyTentacle::TimelineStep(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTentacle", "TimelineStep");

	Params::EnemyTentacle_TimelineStep Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyTrex.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AEnemyTrex::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTrex", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.EnemyTruck.OnPlayMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyTruck::OnPlayMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTruck", "OnPlayMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyTruck.OnStopMoveSound
// (Event, Public, BlueprintEvent)

void AEnemyTruck::OnStopMoveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTruck", "OnStopMoveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.EnemyTruck.OnUpdateMoveSoundLocation
// (Event, Public, BlueprintEvent)

void AEnemyTruck::OnUpdateMoveSoundLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemyTruck", "OnUpdateMoveSoundLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.Enemy_Extnd04_Enemy04001Anim.OnEnterWait
// (Final, Native, Public, BlueprintCallable)

void UEnemy_Extnd04_Enemy04001Anim::OnEnterWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd04_Enemy04001Anim", "OnEnterWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.Enemy_Extnd04_Enemy04001Anim.IsAnimState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEnemy04001State                        State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEnemy_Extnd04_Enemy04001Anim::IsAnimState(EEnemy04001State State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd04_Enemy04001Anim", "IsAnimState");

	Params::Enemy_Extnd04_Enemy04001Anim_IsAnimState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubGadget.IsNotEnableGadget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGadgetId                               gadgetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubGadget::IsNotEnableGadget(EGadgetId gadgetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubGadget", "IsNotEnableGadget");

	Params::RaceUISubGadget_IsNotEnableGadget Parms{};

	Parms.gadgetId = gadgetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickGandBell.PlayHitAnimation
// (Event, Public, BlueprintEvent)

void AGimmickGandBell::PlayHitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickGandBell", "PlayHitAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.Enemy_Extnd06_Object_06001.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AEnemy_Extnd06_Object_06001::OnTriggerColliderConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd06_Object_06001", "OnTriggerColliderConflict");

	Params::Enemy_Extnd06_Object_06001_OnTriggerColliderConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.Enemy_Extnd09_Enemy09001_Attack.IsAttacking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEnemy_Extnd09_Enemy09001_Attack::IsAttacking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd09_Enemy09001_Attack", "IsAttacking");

	Params::Enemy_Extnd09_Enemy09001_Attack_IsAttacking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.Enemy_Extnd09_Enemy09001_Attack.IsDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEnemy_Extnd09_Enemy09001_Attack::IsDamaged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd09_Enemy09001_Attack", "IsDamaged");

	Params::Enemy_Extnd09_Enemy09001_Attack_IsDamaged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.Enemy_Extnd09_Enemy09002.IsDefensive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEnemy_Extnd09_Enemy09002::IsDefensive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Enemy_Extnd09_Enemy09002", "IsDefensive");

	Params::Enemy_Extnd09_Enemy09002_IsDefensive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickBakubaku.OnFlinch
// (Event, Public, BlueprintEvent)

void AGimmickBakubaku::OnFlinch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBakubaku", "OnFlinch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickBakubaku.OnFlinchEnd
// (Event, Public, BlueprintEvent)

void AGimmickBakubaku::OnFlinchEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBakubaku", "OnFlinchEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickBakubaku.GetIsFlinching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickBakubaku::GetIsFlinching() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBakubaku", "GetIsFlinching");

	Params::GimmickBakubaku_GetIsFlinching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickManipulatedVehicle.DebugUpdateIdleMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickManipulatedVehicle::DebugUpdateIdleMove(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickManipulatedVehicle", "DebugUpdateIdleMove");

	Params::GimmickManipulatedVehicle_DebugUpdateIdleMove Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FlowerTentacleAnimInstance.GetIIsAppear
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlowerTentacleAnimInstance::GetIIsAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "GetIIsAppear");

	Params::FlowerTentacleAnimInstance_GetIIsAppear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.FlowerTentacleAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlowerTentacleAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "GetIsAttack");

	Params::FlowerTentacleAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.FlowerTentacleAnimInstance.GetIsDisappear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFlowerTentacleAnimInstance::GetIsDisappear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "GetIsDisappear");

	Params::FlowerTentacleAnimInstance_GetIsDisappear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.FlowerTentacleAnimInstance.SetIsAppear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlowerTentacleAnimInstance::SetIsAppear(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "SetIsAppear");

	Params::FlowerTentacleAnimInstance_SetIsAppear Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FlowerTentacleAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlowerTentacleAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "SetIsAttack");

	Params::FlowerTentacleAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FlowerTentacleAnimInstance.SetIsDisappear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFlowerTentacleAnimInstance::SetIsDisappear(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FlowerTentacleAnimInstance", "SetIsDisappear");

	Params::FlowerTentacleAnimInstance_SetIsDisappear Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FossilTrexAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFossilTrexAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FossilTrexAnimInstance", "GetIsAttack");

	Params::FossilTrexAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.FossilTrexAnimInstance.GetIsTYpeB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFossilTrexAnimInstance::GetIsTYpeB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FossilTrexAnimInstance", "GetIsTYpeB");

	Params::FossilTrexAnimInstance_GetIsTYpeB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.FossilTrexAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFossilTrexAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FossilTrexAnimInstance", "SetIsAttack");

	Params::FossilTrexAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FossilTrexAnimInstance.SetIsDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFossilTrexAnimInstance::SetIsDamage(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FossilTrexAnimInstance", "SetIsDamage");

	Params::FossilTrexAnimInstance_SetIsDamage Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.FossilTrexAnimInstance.SetIsTypeB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFossilTrexAnimInstance::SetIsTypeB(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FossilTrexAnimInstance", "SetIsTypeB");

	Params::FossilTrexAnimInstance_SetIsTypeB Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.VATBreakObjectBase.OnPlayBreakEvent
// (Event, Public, BlueprintEvent)

void AVATBreakObjectBase::OnPlayBreakEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VATBreakObjectBase", "OnPlayBreakEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.VATBreakObjectBase.OnPlayClashSound
// (Event, Public, BlueprintEvent)

void AVATBreakObjectBase::OnPlayClashSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VATBreakObjectBase", "OnPlayClashSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.VATBreakObjectBase.OnVATUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UUnionVATMeshComponent*           VATComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionVATSequenceInfo&     SequenceInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AVATBreakObjectBase::OnVATUpdate(class UUnionVATMeshComponent* VATComponent, const struct FUnionVATSequenceInfo& SequenceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VATBreakObjectBase", "OnVATUpdate");

	Params::VATBreakObjectBase_OnVATUpdate Parms{};

	Parms.VATComponent = VATComponent;
	Parms.SequenceInfo = std::move(SequenceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.VATBreakObjectBase.GetBreakSpeedType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBreakSpeedType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBreakSpeedType AVATBreakObjectBase::GetBreakSpeedType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VATBreakObjectBase", "GetBreakSpeedType");

	Params::VATBreakObjectBase_GetBreakSpeedType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GadgetBoatJumpSplashPeformance.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AGadgetBoatJumpSplashPeformance::OnTriggerColliderConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GadgetBoatJumpSplashPeformance", "OnTriggerColliderConflict");

	Params::GadgetBoatJumpSplashPeformance_OnTriggerColliderConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemWhiteBoostObject.OnPlayUsedItemSound
// (Event, Public, BlueprintEvent)

void AItemWhiteBoostObject::OnPlayUsedItemSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemWhiteBoostObject", "OnPlayUsedItemSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickTriggerMotionBase.GetPlayRate
// (Final, Native, Public, Const)
// Parameters:
// ETriggerMotionState                     State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGimmickTriggerMotionBase::GetPlayRate(ETriggerMotionState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionBase", "GetPlayRate");

	Params::GimmickTriggerMotionBase_GetPlayRate Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickTriggerMotionBase.GetTriggerMotionType
// (Final, Native, Public, Const)
// Parameters:
// ETriggerMotionType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETriggerMotionType AGimmickTriggerMotionBase::GetTriggerMotionType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionBase", "GetTriggerMotionType");

	Params::GimmickTriggerMotionBase_GetTriggerMotionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickTriggerMotionBase.IsPlayIdle
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickTriggerMotionBase::IsPlayIdle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionBase", "IsPlayIdle");

	Params::GimmickTriggerMotionBase_IsPlayIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickTriggerMotionBase.IsPlayOneShot
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickTriggerMotionBase::IsPlayOneShot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionBase", "IsPlayOneShot");

	Params::GimmickTriggerMotionBase_IsPlayOneShot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickTriggerMotionBase.IsTriggered
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickTriggerMotionBase::IsTriggered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionBase", "IsTriggered");

	Params::GimmickTriggerMotionBase_IsTriggered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickTriggerMotionVAT.OnVATSequence
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UUnionVATMeshComponent*           VATMeshComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionVATSequenceInfo&     SequenceInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AGimmickTriggerMotionVAT::OnVATSequence(class UUnionVATMeshComponent* VATMeshComponent, const struct FUnionVATSequenceInfo& SequenceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionVAT", "OnVATSequence");

	Params::GimmickTriggerMotionVAT_OnVATSequence Parms{};

	Parms.VATMeshComponent = VATMeshComponent;
	Parms.SequenceInfo = std::move(SequenceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickTriggerMotionVAT.UpdateState
// (Final, Native, Private)

void AGimmickTriggerMotionVAT::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionVAT", "UpdateState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemSystemManager.DbgDrawSwitch
// (Final, Native, Public, BlueprintCallable)

void UUnionItemSystemManager::DbgDrawSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionItemSystemManager", "DbgDrawSwitch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.NalAnimInstance.IsTakeDamageMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNalAnimInstance::IsTakeDamageMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NalAnimInstance", "IsTakeDamageMotion");

	Params::NalAnimInstance_IsTakeDamageMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionFlightCourseDebugDisp.SetUseAssistLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionFlightCourseDebugDisp::SetUseAssistLength(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFlightCourseDebugDisp", "SetUseAssistLength");

	Params::UnionFlightCourseDebugDisp_SetUseAssistLength Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionFlightCourseDebugDisp.UpdateDispMesh
// (Final, Native, Public, BlueprintCallable)

void AUnionFlightCourseDebugDisp::UpdateDispMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionFlightCourseDebugDisp", "UpdateDispMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionDroneInfoInterface.NotifyCallDroneEvent
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FCallDroneInfo&            Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IUnionDroneInfoInterface::NotifyCallDroneEvent(const struct FCallDroneInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionDroneInfoInterface", "NotifyCallDroneEvent");

	Params::UnionDroneInfoInterface_NotifyCallDroneEvent Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionDroneInfoInterface.NotifyDroneVisibilityEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visibility                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionDroneInfoInterface::NotifyDroneVisibilityEvent(bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionDroneInfoInterface", "NotifyDroneVisibilityEvent");

	Params::UnionDroneInfoInterface_NotifyDroneVisibilityEvent Parms{};

	Parms.Visibility = Visibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemSplashProjectile.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemSplashProjectile::OnTriggerColliderConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemSplashProjectile", "OnTriggerColliderConflict");

	Params::ItemSplashProjectile_OnTriggerColliderConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStatueBeam.SetAttackEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickStatueBeam::SetAttackEnable(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStatueBeam", "SetAttackEnable");

	Params::GimmickStatueBeam_SetAttackEnable Parms{};

	Parms.IsEnable = IsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStatueBeam.StartBeamScaleTimer
// (Final, Native, Public, BlueprintCallable)

void AGimmickStatueBeam::StartBeamScaleTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStatueBeam", "StartBeamScaleTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GadgetMessageInterface.GadgetNotifyAttack
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGadgetNotifyAttackInfo&   Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IGadgetMessageInterface::GadgetNotifyAttack(const struct FGadgetNotifyAttackInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GadgetMessageInterface", "GadgetNotifyAttack");

	Params::GadgetMessageInterface_GadgetNotifyAttack Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GadgetMessageInterface.GadgetNotifyMessage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName                       Message                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IGadgetMessageInterface::GadgetNotifyMessage(const class FName Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GadgetMessageInterface", "GadgetNotifyMessage");

	Params::GadgetMessageInterface_GadgetNotifyMessage Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickWhale.OnTremorEvent
// (Final, Native, Public, BlueprintCallable)

void AGimmickWhale::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickWhale", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickWhale.StartWaveObject
// (Final, Native, Public, BlueprintCallable)

void AGimmickWhale::StartWaveObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickWhale", "StartWaveObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickFlyingBounceObject.OnHitAnim
// (Event, Public, BlueprintEvent)

void AGimmickFlyingBounceObject::OnHitAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickFlyingBounceObject", "OnHitAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemRocketPunchObject.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemRocketPunchObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemRocketPunchObject", "OnTriggerColliderConflict");

	Params::ItemRocketPunchObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetCameraId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetCameraId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetCameraId");

	Params::GimmickStaticBodyComponent_SetCameraId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetIgnoreItemInvincibleWall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetIgnoreItemInvincibleWall(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetIgnoreItemInvincibleWall");

	Params::GimmickStaticBodyComponent_SetIgnoreItemInvincibleWall Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetParamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetParamId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetParamId");

	Params::GimmickStaticBodyComponent_SetParamId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetPostProcessEffectType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionRacePostProcessEffectType         Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetPostProcessEffectType(EUnionRacePostProcessEffectType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetPostProcessEffectType");

	Params::GimmickStaticBodyComponent_SetPostProcessEffectType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetResultCameraType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EResultCameraProductionType             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetResultCameraType(EResultCameraProductionType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetResultCameraType");

	Params::GimmickStaticBodyComponent_SetResultCameraType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetSurfaceFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FUnionSurfaceFlag&         flag                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetSurfaceFlag(const struct FUnionSurfaceFlag& flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetSurfaceFlag");

	Params::GimmickStaticBodyComponent_SetSurfaceFlag Parms{};

	Parms.flag = std::move(flag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickStaticBodyComponent.SetSurfaceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionSurfaceType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickStaticBodyComponent::SetSurfaceType(EUnionSurfaceType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickStaticBodyComponent", "SetSurfaceType");

	Params::GimmickStaticBodyComponent_SetSurfaceType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBingoBall.SetCollisionSocketName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickBingoBall::SetCollisionSocketName(class FName NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBingoBall", "SetCollisionSocketName");

	Params::GimmickBingoBall_SetCollisionSocketName Parms{};

	Parms.NewName = NewName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickBollard.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AGimmickBollard::OnTriggerColliderConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickBollard", "OnTriggerColliderConflict");

	Params::GimmickBollard_OnTriggerColliderConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickCannonBoo.OnVATFrameFunction
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UUnionVATMeshComponent*           VATMeshComponent                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionVATSequenceInfo&     SequenceInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AGimmickCannonBoo::OnVATFrameFunction(class UUnionVATMeshComponent* VATMeshComponent, const struct FUnionVATSequenceInfo& SequenceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickCannonBoo", "OnVATFrameFunction");

	Params::GimmickCannonBoo_OnVATFrameFunction Parms{};

	Parms.VATMeshComponent = VATMeshComponent;
	Parms.SequenceInfo = std::move(SequenceInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickCrab.IsMovingLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickCrab::IsMovingLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickCrab", "IsMovingLeft");

	Params::GimmickCrab_IsMovingLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickEggChaserController.ActivateChaser
// (Event, Public, BlueprintEvent)

void AGimmickEggChaserController::ActivateChaser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickEggChaserController", "ActivateChaser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickEggChaserController.StartAttack
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    isRightObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickEggChaserController::StartAttack(bool isRightObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickEggChaserController", "StartAttack");

	Params::GimmickEggChaserController_StartAttack Parms{};

	Parms.isRightObject = isRightObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.GimmickFracturedRock.OnPlayAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   displayFram                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   globalPieceScaleMultiplier                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickFracturedRock::OnPlayAnimation(float displayFram, float globalPieceScaleMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickFracturedRock", "OnPlayAnimation");

	Params::GimmickFracturedRock_OnPlayAnimation Parms{};

	Parms.displayFram = displayFram;
	Parms.globalPieceScaleMultiplier = globalPieceScaleMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.GimmickGoalglow.OnPlaySound
// (Event, Protected, BlueprintEvent)

void AGimmickGoalglow::OnPlaySound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickGoalglow", "OnPlaySound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickGUNHunter.StartMove
// (Final, Native, Public, BlueprintCallable)

void AGimmickGUNHunter::StartMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickGUNHunter", "StartMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickGUNHunter.StopMove
// (Final, Native, Public, BlueprintCallable)

void AGimmickGUNHunter::StopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickGUNHunter", "StopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickLightBall.RayIdleMoveFinished
// (Final, Native, Public)

void AGimmickLightBall::RayIdleMoveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickLightBall", "RayIdleMoveFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickLightBall.RayIdleMoveUpdate
// (Final, Native, Public)
// Parameters:
// float                                   Ratio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickLightBall::RayIdleMoveUpdate(float Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickLightBall", "RayIdleMoveUpdate");

	Params::GimmickLightBall_RayIdleMoveUpdate Parms{};

	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickMessageInterface.NotifyStartGimmick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IGimmickMessageInterface::NotifyStartGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GimmickMessageInterface", "NotifyStartGimmick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickMessageInterface.NotifyStartGimmickEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStageId                                StageId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IGimmickMessageInterface::NotifyStartGimmickEvent(EStageId StageId, int32 EventId, int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GimmickMessageInterface", "NotifyStartGimmickEvent");

	Params::GimmickMessageInterface_NotifyStartGimmickEvent Parms{};

	Parms.StageId = StageId;
	Parms.EventId = EventId;
	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickRingCircle.OnHitAnim
// (Event, Public, BlueprintEvent)

void AGimmickRingCircle::OnHitAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickRingCircle", "OnHitAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickRollingRock.InitStaticBodyComponent
// (Final, Native, Private)
// Parameters:
// class UStaticBodyComponent*             StaticBodyComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGimmickRollingRock::InitStaticBodyComponent(class UStaticBodyComponent* StaticBodyComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickRollingRock", "InitStaticBodyComponent");

	Params::GimmickRollingRock_InitStaticBodyComponent Parms{};

	Parms.StaticBodyComponent = StaticBodyComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickRollingRock.OnTremorEvent
// (Final, Native, Private)

void AGimmickRollingRock::OnTremorEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickRollingRock", "OnTremorEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickRollingRock.UpdateRotation
// (Final, Native, Private)
// Parameters:
// const float                             DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickRollingRock::UpdateRotation(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickRollingRock", "UpdateRotation");

	Params::GimmickRollingRock_UpdateRotation Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickSwingBall.UpdateRotation
// (Final, Native, Private)

void AGimmickSwingBall::UpdateRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickSwingBall", "UpdateRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickSwingBall.CalcBaseSwingRotation
// (Final, Native, Private, HasDefaults, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SwingPeriod                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SwingInitialPhase                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat AGimmickSwingBall::CalcBaseSwingRotation(float Time, float SwingPeriod, float SwingInitialPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickSwingBall", "CalcBaseSwingRotation");

	Params::GimmickSwingBall_CalcBaseSwingRotation Parms{};

	Parms.Time = Time;
	Parms.SwingPeriod = SwingPeriod;
	Parms.SwingInitialPhase = SwingInitialPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickSwingBall.CalcHitSwingRotation
// (Final, Native, Private, HasDefaults, Const)
// Parameters:
// float                                   HitSwingAmplitude                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HitSwingPhase                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FQuat AGimmickSwingBall::CalcHitSwingRotation(float HitSwingAmplitude, float HitSwingPhase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickSwingBall", "CalcHitSwingRotation");

	Params::GimmickSwingBall_CalcHitSwingRotation Parms{};

	Parms.HitSwingAmplitude = HitSwingAmplitude;
	Parms.HitSwingPhase = HitSwingPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickSwingBall.CalcNewHitSwingPhase
// (Final, Native, Private, Const)
// Parameters:
// float                                   OldPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OldAmplitude                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewAmplitude                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGimmickSwingBall::CalcNewHitSwingPhase(float OldPhase, float OldAmplitude, float NewAmplitude) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickSwingBall", "CalcNewHitSwingPhase");

	Params::GimmickSwingBall_CalcNewHitSwingPhase Parms{};

	Parms.OldPhase = OldPhase;
	Parms.OldAmplitude = OldAmplitude;
	Parms.NewAmplitude = NewAmplitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickThornBall.GetHitSpeedRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGimmickThornBall::GetHitSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickThornBall", "GetHitSpeedRatio");

	Params::GimmickThornBall_GetHitSpeedRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.GimmickThornBall.OnPlayBreakEffect
// (Event, Public, BlueprintEvent)

void AGimmickThornBall::OnPlayBreakEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickThornBall", "OnPlayBreakEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.GimmickTriggerMotionAnimInstance.NativeBeginPlay
// (Final, Native, Public)

void UGimmickTriggerMotionAnimInstance::NativeBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionAnimInstance", "NativeBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickTriggerMotionAnimInstance.NativeUpdateAnimation
// (Final, Native, Public)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGimmickTriggerMotionAnimInstance::NativeUpdateAnimation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickTriggerMotionAnimInstance", "NativeUpdateAnimation");

	Params::GimmickTriggerMotionAnimInstance_NativeUpdateAnimation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.GimmickWaterfall.OnCarHitEvent
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   HitLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGimmickWaterfall::OnCarHitEvent(const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GimmickWaterfall", "OnCarHitEvent");

	Params::GimmickWaterfall_OnCarHitEvent Parms{};

	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.Gimmick_Extnd04_Character04003.OnExplosionEvent
// (Event, Protected, BlueprintEvent)

void AGimmick_Extnd04_Character04003::OnExplosionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gimmick_Extnd04_Character04003", "OnExplosionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.HeadButtTrexAnimInstance.GetIsAppear
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeadButtTrexAnimInstance::GetIsAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "GetIsAppear");

	Params::HeadButtTrexAnimInstance_GetIsAppear Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.HeadButtTrexAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeadButtTrexAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "GetIsAttack");

	Params::HeadButtTrexAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.HeadButtTrexAnimInstance.GetIsDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeadButtTrexAnimInstance::GetIsDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "GetIsDamage");

	Params::HeadButtTrexAnimInstance_GetIsDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.HeadButtTrexAnimInstance.GetIsMirror
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHeadButtTrexAnimInstance::GetIsMirror()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "GetIsMirror");

	Params::HeadButtTrexAnimInstance_GetIsMirror Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.HeadButtTrexAnimInstance.SetIsAppear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeadButtTrexAnimInstance::SetIsAppear(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "SetIsAppear");

	Params::HeadButtTrexAnimInstance_SetIsAppear Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.HeadButtTrexAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeadButtTrexAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "SetIsAttack");

	Params::HeadButtTrexAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.HeadButtTrexAnimInstance.SetIsDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeadButtTrexAnimInstance::SetIsDamage(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "SetIsDamage");

	Params::HeadButtTrexAnimInstance_SetIsDamage Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.HeadButtTrexAnimInstance.SetIsMirror
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeadButtTrexAnimInstance::SetIsMirror(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeadButtTrexAnimInstance", "SetIsMirror");

	Params::HeadButtTrexAnimInstance_SetIsMirror Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionMiscFunction.ContainsLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LevelName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionMiscFunction::ContainsLevel(const class UObject* WorldContextObject, const class FString& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "ContainsLevel");

	Params::UnionMiscFunction_ContainsLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = std::move(LevelName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.GetCourseEditorStageAssetDir
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionMiscFunction::GetCourseEditorStageAssetDir(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "GetCourseEditorStageAssetDir");

	Params::UnionMiscFunction_GetCourseEditorStageAssetDir Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.GetStageAssetDir
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionMiscFunction::GetStageAssetDir(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "GetStageAssetDir");

	Params::UnionMiscFunction_GetStageAssetDir Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.GetStageAssetFilenameTrunk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUnionMiscFunction::GetStageAssetFilenameTrunk(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "GetStageAssetFilenameTrunk");

	Params::UnionMiscFunction_GetStageAssetFilenameTrunk Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.LoadComPathAssetByFilePath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionComPathBinaryDataAsset*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionComPathBinaryDataAsset* UUnionMiscFunction::LoadComPathAssetByFilePath(const class UObject* WorldContextObject, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "LoadComPathAssetByFilePath");

	Params::UnionMiscFunction_LoadComPathAssetByFilePath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.LoadCourseCollisionAssetByFilePath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionBtCollisionBinaryAsset*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionBtCollisionBinaryAsset* UUnionMiscFunction::LoadCourseCollisionAssetByFilePath(const class UObject* WorldContextObject, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "LoadCourseCollisionAssetByFilePath");

	Params::UnionMiscFunction_LoadCourseCollisionAssetByFilePath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.LoadCourseNavigationAssetByFilePath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionNavigationBinaryDataAsset*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionNavigationBinaryDataAsset* UUnionMiscFunction::LoadCourseNavigationAssetByFilePath(const class UObject* WorldContextObject, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "LoadCourseNavigationAssetByFilePath");

	Params::UnionMiscFunction_LoadCourseNavigationAssetByFilePath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionMiscFunction.LoadRunPathAssetByFilePath
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRunPathBinaryDataAsset*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRunPathBinaryDataAsset* UUnionMiscFunction::LoadRunPathAssetByFilePath(const class UObject* WorldContextObject, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionMiscFunction", "LoadRunPathAssetByFilePath");

	Params::UnionMiscFunction_LoadRunPathAssetByFilePath Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SnakeAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USnakeAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "GetIsAttack");

	Params::SnakeAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SnakeAnimInstance.GetIsDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USnakeAnimInstance::GetIsDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "GetIsDamage");

	Params::SnakeAnimInstance_GetIsDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SnakeAnimInstance.GetIsIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USnakeAnimInstance::GetIsIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "GetIsIdle");

	Params::SnakeAnimInstance_GetIsIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SnakeAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnakeAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "SetIsAttack");

	Params::SnakeAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SnakeAnimInstance.SetIsDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnakeAnimInstance::SetIsDamage(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "SetIsDamage");

	Params::SnakeAnimInstance_SetIsDamage Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SnakeAnimInstance.SetIsIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USnakeAnimInstance::SetIsIdle(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SnakeAnimInstance", "SetIsIdle");

	Params::SnakeAnimInstance_SetIsIdle Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemBodyCutObject.OnTriggerConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemBodyCutObject::OnTriggerConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBodyCutObject", "OnTriggerConflict");

	Params::ItemBodyCutObject_OnTriggerConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SummonRingAnimInstance.GetIsExit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USummonRingAnimInstance::GetIsExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SummonRingAnimInstance", "GetIsExit");

	Params::SummonRingAnimInstance_GetIsExit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SummonRingAnimInstance.GetIsStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USummonRingAnimInstance::GetIsStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SummonRingAnimInstance", "GetIsStart");

	Params::SummonRingAnimInstance_GetIsStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SummonRingAnimInstance.SetIsExit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USummonRingAnimInstance::SetIsExit(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SummonRingAnimInstance", "SetIsExit");

	Params::SummonRingAnimInstance_SetIsExit Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.SummonRingAnimInstance.SetIsStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USummonRingAnimInstance::SetIsStart(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SummonRingAnimInstance", "SetIsStart");

	Params::SummonRingAnimInstance_SetIsStart Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrainAnimInstance.GetIsDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrainAnimInstance::GetIsDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainAnimInstance", "GetIsDamage");

	Params::TrainAnimInstance_GetIsDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrainAnimInstance.GetIsMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrainAnimInstance::GetIsMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainAnimInstance", "GetIsMove");

	Params::TrainAnimInstance_GetIsMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrainAnimInstance.SetIsDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrainAnimInstance::SetIsDamage(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainAnimInstance", "SetIsDamage");

	Params::TrainAnimInstance_SetIsDamage Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrainAnimInstance.SetIsMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrainAnimInstance::SetIsMove(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainAnimInstance", "SetIsMove");

	Params::TrainAnimInstance_SetIsMove Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemCountDownComponent.InitializeCountDown
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemCountDownComponent::InitializeCountDown(class UActorComponent* Component, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCountDownComponent", "InitializeCountDown");

	Params::ItemCountDownComponent_InitializeCountDown Parms{};

	Parms.Component = Component;
	Parms.bReset = bReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemCountDownComponent.ResetTargetParameter
// (Final, Native, Protected)
// Parameters:
// class UActorComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemCountDownComponent::ResetTargetParameter(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCountDownComponent", "ResetTargetParameter");

	Params::ItemCountDownComponent_ResetTargetParameter Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsGift
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsGift()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsGift");

	Params::ItemDarkChaoAnimInstance_GetIsGift Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsIdle");

	Params::ItemDarkChaoAnimInstance_GetIsIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsSteal
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsSteal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsSteal");

	Params::ItemDarkChaoAnimInstance_GetIsSteal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsThrow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsThrow");

	Params::ItemDarkChaoAnimInstance_GetIsThrow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsThrowHit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsThrowHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsThrowHit");

	Params::ItemDarkChaoAnimInstance_GetIsThrowHit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsThrowMissBound
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsThrowMissBound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsThrowMissBound");

	Params::ItemDarkChaoAnimInstance_GetIsThrowMissBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsThrowMissFall
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsThrowMissFall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsThrowMissFall");

	Params::ItemDarkChaoAnimInstance_GetIsThrowMissFall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetIsUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemDarkChaoAnimInstance::GetIsUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetIsUse");

	Params::ItemDarkChaoAnimInstance_GetIsUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.GetThrowAnimController
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UItemDarkChaoAnimInstance::GetThrowAnimController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "GetThrowAnimController");

	Params::ItemDarkChaoAnimInstance_GetThrowAnimController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsGift
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsGift(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsGift");

	Params::ItemDarkChaoAnimInstance_SetIsGift Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsIdle(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsIdle");

	Params::ItemDarkChaoAnimInstance_SetIsIdle Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsSteal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsSteal(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsSteal");

	Params::ItemDarkChaoAnimInstance_SetIsSteal Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsThrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsThrow(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsThrow");

	Params::ItemDarkChaoAnimInstance_SetIsThrow Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsThrowHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsThrowHit(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsThrowHit");

	Params::ItemDarkChaoAnimInstance_SetIsThrowHit Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsThrowMissBound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsThrowMissBound(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsThrowMissBound");

	Params::ItemDarkChaoAnimInstance_SetIsThrowMissBound Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsThrowMissFall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsThrowMissFall(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsThrowMissFall");

	Params::ItemDarkChaoAnimInstance_SetIsThrowMissFall Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetIsUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetIsUse(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetIsUse");

	Params::ItemDarkChaoAnimInstance_SetIsUse Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoAnimInstance.SetThrowAnimController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemDarkChaoAnimInstance::SetThrowAnimController(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoAnimInstance", "SetThrowAnimController");

	Params::ItemDarkChaoAnimInstance_SetThrowAnimController Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoObject.PlayLeaveSound
// (Final, Native, Public, BlueprintCallable)

void AItemDarkChaoObject::PlayLeaveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoObject", "PlayLeaveSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemDarkChaoObject.PlayThrowSound
// (Final, Native, Public, BlueprintCallable)

void AItemDarkChaoObject::PlayThrowSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemDarkChaoObject", "PlayThrowSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrexAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrexAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "GetIsAttack");

	Params::TrexAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrexAnimInstance.GetIsDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrexAnimInstance::GetIsDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "GetIsDamage");

	Params::TrexAnimInstance_GetIsDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrexAnimInstance.GetIsMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrexAnimInstance::GetIsMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "GetIsMove");

	Params::TrexAnimInstance_GetIsMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrexAnimInstance.GetIsTurn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrexAnimInstance::GetIsTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "GetIsTurn");

	Params::TrexAnimInstance_GetIsTurn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrexAnimInstance.GetIsTurnEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTrexAnimInstance::GetIsTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "GetIsTurnEnd");

	Params::TrexAnimInstance_GetIsTurnEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TrexAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrexAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "SetIsAttack");

	Params::TrexAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrexAnimInstance.SetIsDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrexAnimInstance::SetIsDamage(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "SetIsDamage");

	Params::TrexAnimInstance_SetIsDamage Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrexAnimInstance.SetIsMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrexAnimInstance::SetIsMove(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "SetIsMove");

	Params::TrexAnimInstance_SetIsMove Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrexAnimInstance.SetIsTurn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrexAnimInstance::SetIsTurn(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "SetIsTurn");

	Params::TrexAnimInstance_SetIsTurn Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TrexAnimInstance.SetIsTurnEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTrexAnimInstance::SetIsTurnEnd(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrexAnimInstance", "SetIsTurnEnd");

	Params::TrexAnimInstance_SetIsTurnEnd Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemExtnd09Projectile.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemExtnd09Projectile::OnTriggerColliderConflict(const struct FHitTriggerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemExtnd09Projectile", "OnTriggerColliderConflict");

	Params::ItemExtnd09Projectile_OnTriggerColliderConflict Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TireMark.AddPoint3D
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Normal                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Side                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Density                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FColor&                    Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 OffsetUV                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTireMark::AddPoint3D(const struct FVector& Position, const struct FVector& Normal, const struct FVector& Side, float Density, const struct FColor& Color, const struct FVector2D& OffsetUV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TireMark", "AddPoint3D");

	Params::TireMark_AddPoint3D Parms{};

	Parms.Position = std::move(Position);
	Parms.Normal = std::move(Normal);
	Parms.Side = std::move(Side);
	Parms.Density = Density;
	Parms.Color = std::move(Color);
	Parms.OffsetUV = std::move(OffsetUV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TireMark.GetTireMarkMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UTireMark::GetTireMarkMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TireMark", "GetTireMarkMaterial");

	Params::TireMark_GetTireMarkMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TireMark.SetTireMarkMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               MaterialInterface                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTireMark::SetTireMarkMaterial(class UMaterialInterface* MaterialInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TireMark", "SetTireMarkMaterial");

	Params::TireMark_SetTireMarkMaterial Parms{};

	Parms.MaterialInterface = MaterialInterface;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemHomingPunchObject.EventHitRacer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   HitRacerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemHomingPunchObject::EventHitRacer(int32 HitRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemHomingPunchObject", "EventHitRacer");

	Params::ItemHomingPunchObject_EventHitRacer Parms{};

	Parms.HitRacerIndex = HitRacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemHomingPunchObject.OnPlayDamegeSound
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemHomingPunchObject::OnPlayDamegeSound(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemHomingPunchObject", "OnPlayDamegeSound");

	Params::ItemHomingPunchObject_OnPlayDamegeSound Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemHomingPunchObject.OnPlayImpactSound
// (Event, Public, BlueprintEvent)

void AItemHomingPunchObject::OnPlayImpactSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemHomingPunchObject", "OnPlayImpactSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemHomingPunchObject.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemHomingPunchObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemHomingPunchObject", "OnTriggerColliderConflict");

	Params::ItemHomingPunchObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMagnetObject.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemMagnetObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemMagnetObject", "OnTriggerColliderConflict");

	Params::ItemMagnetObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMessageInterface.CalIsInWithinPlaneArea
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::CalIsInWithinPlaneArea(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "CalIsInWithinPlaneArea");

	Params::ItemMessageInterface_CalIsInWithinPlaneArea Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.ConfirmAbsorbOject
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAbsorbedObjectInfo&       Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::ConfirmAbsorbOject(const struct FAbsorbedObjectInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "ConfirmAbsorbOject");

	Params::ItemMessageInterface_ConfirmAbsorbOject Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemActiveTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IItemMessageInterface::GetItemActiveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemActiveTime");

	Params::ItemMessageInterface_GetItemActiveTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemDomainNumber
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDomainNumber                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDomainNumber IItemMessageInterface::GetItemDomainNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemDomainNumber");

	Params::ItemMessageInterface_GetItemDomainNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemHolderRacerIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IItemMessageInterface::GetItemHolderRacerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemHolderRacerIndex");

	Params::ItemMessageInterface_GetItemHolderRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemPathTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform IItemMessageInterface::GetItemPathTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemPathTransform");

	Params::ItemMessageInterface_GetItemPathTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemThrowDirection
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemThrowDirection                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemThrowDirection IItemMessageInterface::GetItemThrowDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemThrowDirection");

	Params::ItemMessageInterface_GetItemThrowDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemId                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemId IItemMessageInterface::GetItemType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemType");

	Params::ItemMessageInterface_GetItemType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetItemUniqueID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IItemMessageInterface::GetItemUniqueID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetItemUniqueID");

	Params::ItemMessageInterface_GetItemUniqueID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.GetTrapItemOnGroundTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IItemMessageInterface::GetTrapItemOnGroundTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "GetTrapItemOnGroundTime");

	Params::ItemMessageInterface_GetTrapItemOnGroundTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.IsItemPathRouteForm
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::IsItemPathRouteForm(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "IsItemPathRouteForm");

	Params::ItemMessageInterface_IsItemPathRouteForm Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.IsItemPathType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::IsItemPathType(int32 Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "IsItemPathType");

	Params::ItemMessageInterface_IsItemPathType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.IsWarpTarget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WarpRingAttacRacerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::IsWarpTarget(int32 WarpRingAttacRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "IsWarpTarget");

	Params::ItemMessageInterface_IsWarpTarget Parms{};

	Parms.WarpRingAttacRacerIndex = WarpRingAttacRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.NotifyAbsorbFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IItemMessageInterface::NotifyAbsorbFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyAbsorbFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMessageInterface.NotifyAbsorbOject
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAbsorberInfo&             Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void IItemMessageInterface::NotifyAbsorbOject(const struct FAbsorberInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyAbsorbOject");

	Params::ItemMessageInterface_NotifyAbsorbOject Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMessageInterface.NotifyCyanLaserMoveInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FCyanLaserMoveInfo&        Info                                                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void IItemMessageInterface::NotifyCyanLaserMoveInfo(const struct FCyanLaserMoveInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyCyanLaserMoveInfo");

	Params::ItemMessageInterface_NotifyCyanLaserMoveInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMessageInterface.NotifyWarpRingMoveInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FWarpRingMoveInfo&         Info                                                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void IItemMessageInterface::NotifyWarpRingMoveInfo(const struct FWarpRingMoveInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyWarpRingMoveInfo");

	Params::ItemMessageInterface_NotifyWarpRingMoveInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemMessageInterface.NotifyWarpTargetBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WarpRingAttacRacerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemMessageInterface::NotifyWarpTargetBegin(int32 WarpRingAttacRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyWarpTargetBegin");

	Params::ItemMessageInterface_NotifyWarpTargetBegin Parms{};

	Parms.WarpRingAttacRacerIndex = WarpRingAttacRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemMessageInterface.NotifyWarpTargetEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WarpRingAttacRacerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IItemMessageInterface::NotifyWarpTargetEnd(int32 WarpRingAttacRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemMessageInterface", "NotifyWarpTargetEnd");

	Params::ItemMessageInterface_NotifyWarpTargetEnd Parms{};

	Parms.WarpRingAttacRacerIndex = WarpRingAttacRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemOmochaoObject.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemOmochaoObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemOmochaoObject", "OnTriggerColliderConflict");

	Params::ItemOmochaoObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemPerformanceInterface.GetAttachedRacerIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IItemPerformanceInterface::GetAttachedRacerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemPerformanceInterface", "GetAttachedRacerIndex");

	Params::ItemPerformanceInterface_GetAttachedRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemPerformanceInterface.GetPerformanceObjectType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPerformanceObjectType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPerformanceObjectType IItemPerformanceInterface::GetPerformanceObjectType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemPerformanceInterface", "GetPerformanceObjectType");

	Params::ItemPerformanceInterface_GetPerformanceObjectType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemPerformanceInterface.GetStatusInfoID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName IItemPerformanceInterface::GetStatusInfoID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemPerformanceInterface", "GetStatusInfoID");

	Params::ItemPerformanceInterface_GetStatusInfoID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemPerformanceInterface.IsPerformanceObjectInAlart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IItemPerformanceInterface::IsPerformanceObjectInAlart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ItemPerformanceInterface", "IsPerformanceObjectInAlart");

	Params::ItemPerformanceInterface_IsPerformanceObjectInAlart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemSlicerObject.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemSlicerObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemSlicerObject", "OnTriggerColliderConflict");

	Params::ItemSlicerObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemThornBallObject.GetHitSpeedRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AItemThornBallObject::GetHitSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "GetHitSpeedRatio");

	Params::ItemThornBallObject_GetHitSpeedRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ItemThornBallObject.OnDeactiveBreakEffect
// (Event, Public, BlueprintEvent)

void AItemThornBallObject::OnDeactiveBreakEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnDeactiveBreakEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemThornBallObject.OnPlayBreakEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemThornBallObject::OnPlayBreakEffect(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnPlayBreakEffect");

	Params::ItemThornBallObject_OnPlayBreakEffect Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemThornBallObject.OnPlayBreakSound
// (Event, Public, BlueprintEvent)

void AItemThornBallObject::OnPlayBreakSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnPlayBreakSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.ItemThornBallObject.OnPlayDamegeSound
// (Event, Public, BlueprintEvent)
// Parameters:
// ESoundPan                               SoundPan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemThornBallObject::OnPlayDamegeSound(ESoundPan SoundPan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnPlayDamegeSound");

	Params::ItemThornBallObject_OnPlayDamegeSound Parms{};

	Parms.SoundPan = SoundPan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemThornBallObject.OnPlayLandingSound
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    waterFlag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemThornBallObject::OnPlayLandingSound(bool waterFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnPlayLandingSound");

	Params::ItemThornBallObject_OnPlayLandingSound Parms{};

	Parms.waterFlag = waterFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemThornBallObject.OnTriggerColliderConflict
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemThornBallObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemThornBallObject", "OnTriggerColliderConflict");

	Params::ItemThornBallObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemTripleWhiteBoostObject.OnPlayUsedItemSound
// (Event, Public, BlueprintEvent)

void AItemTripleWhiteBoostObject::OnPlayUsedItemSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemTripleWhiteBoostObject", "OnPlayUsedItemSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionGroupInfoInterface.NoticeCompletedChargeGroupEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamBoostType                          TeamBoostType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionGroupInfoInterface::NoticeCompletedChargeGroupEvent(int32 RacerIndex, ETeamBoostType TeamBoostType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionGroupInfoInterface", "NoticeCompletedChargeGroupEvent");

	Params::UnionGroupInfoInterface_NoticeCompletedChargeGroupEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.TeamBoostType = TeamBoostType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemVioletVoidObject.IsMeshAnimEating
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AItemVioletVoidObject::IsMeshAnimEating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemVioletVoidObject", "IsMeshAnimEating");

	Params::ItemVioletVoidObject_IsMeshAnimEating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.ItemVioletVoidObject.IsMeshAnimInSleep
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AItemVioletVoidObject::IsMeshAnimInSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemVioletVoidObject", "IsMeshAnimInSleep");

	Params::ItemVioletVoidObject_IsMeshAnimInSleep Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.ItemVioletVoidObject.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemVioletVoidObject::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemVioletVoidObject", "OnTriggerColliderConflict");

	Params::ItemVioletVoidObject_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemVioletVoidObject.PlaySE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SEName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemVioletVoidObject::PlaySE(class FName SEName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemVioletVoidObject", "PlaySE");

	Params::ItemVioletVoidObject_PlaySE Parms{};

	Parms.SEName = SEName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemVioletVoidObject.RequestMeshAnimAppearance
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAppearance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemVioletVoidObject::RequestMeshAnimAppearance(bool bAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemVioletVoidObject", "RequestMeshAnimAppearance");

	Params::ItemVioletVoidObject_RequestMeshAnimAppearance Parms{};

	Parms.bAppearance = bAppearance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ItemWarpRingObject.OnHitTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AItemWarpRingObject::OnHitTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemWarpRingObject", "OnHitTriggerColliderConflict");

	Params::ItemWarpRingObject_OnHitTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ItemYellowDrillObject.OnPlaySound
// (Event, Public, BlueprintEvent)

void AItemYellowDrillObject::OnPlaySound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemYellowDrillObject", "OnPlaySound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.KingBoomBooProjectile.OnTriggerColliderConflict
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitTriggerInfo&           HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AKingBoomBooProjectile::OnTriggerColliderConflict(const struct FHitTriggerInfo& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KingBoomBooProjectile", "OnTriggerColliderConflict");

	Params::KingBoomBooProjectile_OnTriggerColliderConflict Parms{};

	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.LapChangeObject.OnFinalLapEvent
// (Event, Public, BlueprintEvent)

void ALapChangeObject::OnFinalLapEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LapChangeObject", "OnFinalLapEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.LineGuideDataAsset.ClearData
// (Final, Native, Public, BlueprintCallable)

void ULineGuideDataAsset::ClearData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LineGuideDataAsset", "ClearData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeChangeThrowDirectionEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemThrowDirection                     ThrowType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeChangeThrowDirectionEvent(int32 RacerIndex, EItemId ItemId, EItemThrowDirection ThrowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeChangeThrowDirectionEvent");

	Params::UnionItemInfoInterface_NoticeChangeThrowDirectionEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;
	Parms.ThrowType = ThrowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeClearItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeClearItemEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeClearItemEvent");

	Params::UnionItemInfoInterface_NoticeClearItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeDecreaseUsableTimesEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeDecreaseUsableTimesEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeDecreaseUsableTimesEvent");

	Params::UnionItemInfoInterface_NoticeDecreaseUsableTimesEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeEndIrregularCharging
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeEndIrregularCharging(int32 RacerIndex, EItemId ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeEndIrregularCharging");

	Params::UnionItemInfoInterface_NoticeEndIrregularCharging Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeEndItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeEndItemEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeEndItemEvent");

	Params::UnionItemInfoInterface_NoticeEndItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeEndLostItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeEndLostItemEvent(int32 RacerIndex, EItemId ItemId, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeEndLostItemEvent");

	Params::UnionItemInfoInterface_NoticeEndLostItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeExchangeIrregularHoldItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeExchangeIrregularHoldItem(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeExchangeIrregularHoldItem");

	Params::UnionItemInfoInterface_NoticeExchangeIrregularHoldItem Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeHoldItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemThrowDirection                     DefaultThrowDirection                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGadgetLuckyItem                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeHoldItemEvent(int32 RacerIndex, EItemId ItemId, EItemThrowDirection DefaultThrowDirection, bool bGadgetLuckyItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeHoldItemEvent");

	Params::UnionItemInfoInterface_NoticeHoldItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;
	Parms.DefaultThrowDirection = DefaultThrowDirection;
	Parms.bGadgetLuckyItem = bGadgetLuckyItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeItemStockTradeEvent
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FItemSet&                  PrevItemSet                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FItemSet&                  NewItemSet                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeItemStockTradeEvent(int32 RacerIndex, const struct FItemSet& PrevItemSet, const struct FItemSet& NewItemSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeItemStockTradeEvent");

	Params::UnionItemInfoInterface_NoticeItemStockTradeEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.PrevItemSet = std::move(PrevItemSet);
	Parms.NewItemSet = std::move(NewItemSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeRefreshEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeRefreshEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeRefreshEvent");

	Params::UnionItemInfoInterface_NoticeRefreshEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeResultLotteryItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeResultLotteryItemEvent(int32 RacerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeResultLotteryItemEvent");

	Params::UnionItemInfoInterface_NoticeResultLotteryItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeStartIrregularCharging
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeStartIrregularCharging(int32 RacerIndex, EItemId ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeStartIrregularCharging");

	Params::UnionItemInfoInterface_NoticeStartIrregularCharging Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeStartLostItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LostItemCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeStartLostItemEvent(int32 RacerIndex, EItemId ItemId, EItemInfoType ItemInfoType, int32 LostItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeStartLostItemEvent");

	Params::UnionItemInfoInterface_NoticeStartLostItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;
	Parms.ItemInfoType = ItemInfoType;
	Parms.LostItemCount = LostItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeStartLotteryItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeStartLotteryItemEvent(int32 RacerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeStartLotteryItemEvent");

	Params::UnionItemInfoInterface_NoticeStartLotteryItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeStartShuffleItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeStartShuffleItemEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeStartShuffleItemEvent");

	Params::UnionItemInfoInterface_NoticeStartShuffleItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeTakePackageRingEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRingNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeTakePackageRingEvent(int32 RacerIndex, int32 InRingNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeTakePackageRingEvent");

	Params::UnionItemInfoInterface_NoticeTakePackageRingEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InRingNum = InRingNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeUpgradeEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeUpgradeEvent(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeUpgradeEvent");

	Params::UnionItemInfoInterface_NoticeUpgradeEvent Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemInfoInterface.NoticeUseItemEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemThrowDirection                     ThrowType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionItemInfoInterface::NoticeUseItemEvent(int32 RacerIndex, EItemId ItemId, EItemThrowDirection ThrowType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionItemInfoInterface", "NoticeUseItemEvent");

	Params::UnionItemInfoInterface_NoticeUseItemEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ItemId = ItemId;
	Parms.ThrowType = ThrowType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ObakeAnimInstance.GetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObakeAnimInstance::GetIsAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObakeAnimInstance", "GetIsAttack");

	Params::ObakeAnimInstance_GetIsAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ObakeAnimInstance.GetIsIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UObakeAnimInstance::GetIsIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObakeAnimInstance", "GetIsIdle");

	Params::ObakeAnimInstance_GetIsIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ObakeAnimInstance.SetIsAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObakeAnimInstance::SetIsAttack(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObakeAnimInstance", "SetIsAttack");

	Params::ObakeAnimInstance_SetIsAttack Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ObakeAnimInstance.SetIsIdle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObakeAnimInstance::SetIsIdle(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObakeAnimInstance", "SetIsIdle");

	Params::ObakeAnimInstance_SetIsIdle Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PackageRingEffect.OnPlayTakeRingSound
// (Event, Public, BlueprintEvent)

void APackageRingEffect::OnPlayTakeRingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PackageRingEffect", "OnPlayTakeRingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.PackageRingObject.HitRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APackageRingObject::HitRacer(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PackageRingObject", "HitRacer");

	Params::PackageRingObject_HitRacer Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.PackageRingObject.SetRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPackageRingType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APackageRingObject::SetRingType(EPackageRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PackageRingObject", "SetRingType");

	Params::PackageRingObject_SetRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceActionTutorialData.LoadStageId
// (Final, Native, Public, BlueprintCallable)

void URaceActionTutorialData::LoadStageId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceActionTutorialData", "LoadStageId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.ApplyPauseInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacer::ApplyPauseInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "ApplyPauseInput");

	Params::UnionRacer_ApplyPauseInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.ApplyVehicleInput
// (Final, Native, Public, BlueprintCallable)

void UUnionRacer::ApplyVehicleInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "ApplyVehicleInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.ChangeVehicleDisplayMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVehicleDisplayMode                     InVehicleDisplayMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::ChangeVehicleDisplayMode(EVehicleDisplayMode InVehicleDisplayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "ChangeVehicleDisplayMode");

	Params::UnionRacer_ChangeVehicleDisplayMode Parms{};

	Parms.InVehicleDisplayMode = InVehicleDisplayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.ClearVehicle
// (Final, Native, Public, BlueprintCallable)

void UUnionRacer::ClearVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "ClearVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.Destroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacer::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "Destroy");

	Params::UnionRacer_Destroy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.ExecTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::ExecTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "ExecTick");

	Params::UnionRacer_ExecTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRacer.GetPlayerControllerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutPlayerControllerIndex                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::GetPlayerControllerIndex(int32* OutPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetPlayerControllerIndex");

	Params::UnionRacer_GetPlayerControllerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerControllerIndex != nullptr)
		*OutPlayerControllerIndex = Parms.OutPlayerControllerIndex;
}


// Function UnionRun.UnionRacer.GetRaceLapInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceLapInfo*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceLapInfo* UUnionRacer::GetRaceLapInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetRaceLapInfo");

	Params::UnionRacer_GetRaceLapInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.GetRacerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutRacerIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::GetRacerIndex(int32* OutRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetRacerIndex");

	Params::UnionRacer_GetRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRacerIndex != nullptr)
		*OutRacerIndex = Parms.OutRacerIndex;
}


// Function UnionRun.UnionRacer.GetRacerSituationObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceSituationObject*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceSituationObject* UUnionRacer::GetRacerSituationObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetRacerSituationObject");

	Params::UnionRacer_GetRacerSituationObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.GetRacerStatusObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacerStatusObject*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRacerStatusObject* UUnionRacer::GetRacerStatusObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetRacerStatusObject");

	Params::UnionRacer_GetRacerStatusObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.GetTestRaceCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacer::GetTestRaceCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetTestRaceCount");

	Params::UnionRacer_GetTestRaceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.SetPlayerControllerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetPlayerControllerIndex(int32 InPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetPlayerControllerIndex");

	Params::UnionRacer_SetPlayerControllerIndex Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.SetRaceLapInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceLapInfo*                InRaceLapInfo                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetRaceLapInfo(class UUnionRaceLapInfo* InRaceLapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetRaceLapInfo");

	Params::UnionRacer_SetRaceLapInfo Parms{};

	Parms.InRaceLapInfo = InRaceLapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.SetRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetRacerIndex(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetRacerIndex");

	Params::UnionRacer_SetRacerIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.SetTickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTickable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetTickable(bool bTickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetTickable");

	Params::UnionRacer_SetTickable Parms{};

	Parms.bTickable = bTickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.SetVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            InVehicle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetVehicle(class APawn* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetVehicle");

	Params::UnionRacer_SetVehicle Parms{};

	Parms.InVehicle = InVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.SetViewSplitId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewSplitId                            InViewSplitId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::SetViewSplitId(EViewSplitId InViewSplitId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "SetViewSplitId");

	Params::UnionRacer_SetViewSplitId Parms{};

	Parms.InViewSplitId = InViewSplitId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.UnionRacer_SetTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle UUnionRacer::UnionRacer_SetTimerDelegate(TDelegate<void()> Delegate, float Time, bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "UnionRacer_SetTimerDelegate");

	Params::UnionRacer_UnionRacer_SetTimerDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.Time = Time;
	Parms.bLooping = bLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacer.UpdateTestRace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::UpdateTestRace(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "UpdateTestRace");

	Params::UnionRacer_UpdateTestRace Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.UpdateVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacer::UpdateVehicle(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "UpdateVehicle");

	Params::UnionRacer_UpdateVehicle Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.UpdateVehicleInput
// (Final, Native, Public, BlueprintCallable)

void UUnionRacer::UpdateVehicleInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "UpdateVehicleInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacer.GetViewSplitId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EViewSplitId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EViewSplitId UUnionRacer::GetViewSplitId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacer", "GetViewSplitId");

	Params::UnionRacer_GetViewSplitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceObjectSkeletal.SetBodySkeletalMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    NewSkeletalMesh                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARaceObjectSkeletal::SetBodySkeletalMesh(class USkeletalMesh* NewSkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceObjectSkeletal", "SetBodySkeletalMesh");

	Params::RaceObjectSkeletal_SetBodySkeletalMesh Parms{};

	Parms.NewSkeletalMesh = NewSkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RacerReactionManager.ForcePlayVoice
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FRacerReactionVoice&       ReactionVoice                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumCoolTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URacerReactionManager::ForcePlayVoice(const struct FRacerReactionVoice& ReactionVoice, int32 RacerIndex, float MinimumCoolTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacerReactionManager", "ForcePlayVoice");

	Params::RacerReactionManager_ForcePlayVoice Parms{};

	Parms.ReactionVoice = std::move(ReactionVoice);
	Parms.RacerIndex = RacerIndex;
	Parms.MinimumCoolTime = MinimumCoolTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RacerReactionManager.SoundPlayIrregularInfoDod
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FRacerReactionVoice&       ReactionVoice                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumCoolTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URacerReactionManager::SoundPlayIrregularInfoDod(const struct FRacerReactionVoice& ReactionVoice, int32 RacerIndex, float MinimumCoolTime, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacerReactionManager", "SoundPlayIrregularInfoDod");

	Params::RacerReactionManager_SoundPlayIrregularInfoDod Parms{};

	Parms.ReactionVoice = std::move(ReactionVoice);
	Parms.RacerIndex = RacerIndex;
	Parms.MinimumCoolTime = MinimumCoolTime;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.GetUseSplineActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class AActor> AUnionNavMarker::GetUseSplineActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetUseSplineActor");

	Params::UnionNavMarker_GetUseSplineActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.IsFinalLapOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionNavMarker::IsFinalLapOnly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "IsFinalLapOnly");

	Params::UnionNavMarker_IsFinalLapOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.SetIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetIndex");

	Params::UnionNavMarker_SetIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetIsAnother
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetIsAnother(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetIsAnother");

	Params::UnionNavMarker_SetIsAnother Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetLapType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ENavMarkerLapType                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetLapType(ENavMarkerLapType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetLapType");

	Params::UnionNavMarker_SetLapType Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetSplineOnPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetSplineOnPosition(int32 InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetSplineOnPosition");

	Params::UnionNavMarker_SetSplineOnPosition Parms{};

	Parms.InPosition = InPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetTransformRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETransformRingType                      TransformType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetTransformRingType(ETransformRingType TransformType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetTransformRingType");

	Params::UnionNavMarker_SetTransformRingType Parms{};

	Parms.TransformType = TransformType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionNavMarkerType                     NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetType(EUnionNavMarkerType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetType");

	Params::UnionNavMarker_SetType Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetUseSplineActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class AActor>            InUseSplineActor                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetUseSplineActor(TSoftObjectPtr<class AActor> InUseSplineActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetUseSplineActor");

	Params::UnionNavMarker_SetUseSplineActor Parms{};

	Parms.InUseSplineActor = InUseSplineActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.SetUseSplineLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AUnionNavMarker::SetUseSplineLength(float InLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "SetUseSplineLength");

	Params::UnionNavMarker_SetUseSplineLength Parms{};

	Parms.InLength = InLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.UpdateSplineOnPosition
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AUnionNavMarker::UpdateSplineOnPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "UpdateSplineOnPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionNavMarker.GetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AUnionNavMarker::GetIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetIndex");

	Params::UnionNavMarker_GetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetLapType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ENavMarkerLapType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENavMarkerLapType AUnionNavMarker::GetLapType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetLapType");

	Params::UnionNavMarker_GetLapType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetSplineOnPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AUnionNavMarker::GetSplineOnPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetSplineOnPosition");

	Params::UnionNavMarker_GetSplineOnPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetTransformRingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETransformRingType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETransformRingType AUnionNavMarker::GetTransformRingType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetTransformRingType");

	Params::UnionNavMarker_GetTransformRingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUnionNavMarkerType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionNavMarkerType AUnionNavMarker::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetType");

	Params::UnionNavMarker_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetUnionSplineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUnionSplineComponent*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionSplineComponent* AUnionNavMarker::GetUnionSplineComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetUnionSplineComponent");

	Params::UnionNavMarker_GetUnionSplineComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.GetUseSplineLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AUnionNavMarker::GetUseSplineLength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "GetUseSplineLength");

	Params::UnionNavMarker_GetUseSplineLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.IsAnother
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionNavMarker::IsAnother() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "IsAnother");

	Params::UnionNavMarker_IsAnother Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionNavMarker.IsInvalid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AUnionNavMarker::IsInvalid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionNavMarker", "IsInvalid");

	Params::UnionNavMarker_IsInvalid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceInfoInterface.NoticeChangeCountDownEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InOldValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceInfoInterface::NoticeChangeCountDownEvent(int32 InNewValue, int32 InOldValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceInfoInterface", "NoticeChangeCountDownEvent");

	Params::UnionRaceInfoInterface_NoticeChangeCountDownEvent Parms{};

	Parms.InNewValue = InNewValue;
	Parms.InOldValue = InOldValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceInfoInterface.NoticeChangeRaceStateEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERaceInfoStateType                      InNewState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERaceInfoStateType                      InOldState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceInfoInterface::NoticeChangeRaceStateEvent(ERaceInfoStateType InNewState, ERaceInfoStateType InOldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceInfoInterface", "NoticeChangeRaceStateEvent");

	Params::UnionRaceInfoInterface_NoticeChangeRaceStateEvent Parms{};

	Parms.InNewState = InNewState;
	Parms.InOldState = InOldState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceInfoInterface.NoticeRaceFinishEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionRaceInfoInterface::NoticeRaceFinishEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceInfoInterface", "NoticeRaceFinishEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceInfoInterface.SetRaceInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRaceInfo*                   InRaceInfo                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceInfoInterface::SetRaceInfo(class UUnionRaceInfo* InRaceInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceInfoInterface", "SetRaceInfo");

	Params::UnionRaceInfoInterface_SetRaceInfo Parms{};

	Parms.InRaceInfo = InRaceInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.AssignFixedFpsForRaceLoadTest
// (Final, Native, Static, Public, BlueprintCallable)

void URaceTestUtils::AssignFixedFpsForRaceLoadTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "AssignFixedFpsForRaceLoadTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndAutoCsvProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndAutoCsvProfile(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndAutoCsvProfile");

	Params::RaceTestUtils_EndAutoCsvProfile Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndAutoKibana
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndAutoKibana(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndAutoKibana");

	Params::RaceTestUtils_EndAutoKibana Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndAutoProfileGpu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndAutoProfileGpu(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndAutoProfileGpu");

	Params::RaceTestUtils_EndAutoProfileGpu Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndAutoUnrealInsights
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndAutoUnrealInsights(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndAutoUnrealInsights");

	Params::RaceTestUtils_EndAutoUnrealInsights Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndRaceLoadTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndRaceLoadTest(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndRaceLoadTest");

	Params::RaceTestUtils_EndRaceLoadTest Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.EndRaceTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::EndRaceTest(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "EndRaceTest");

	Params::RaceTestUtils_EndRaceTest Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.GetAutoCsvProfileModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoCsvProfileModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoCsvProfileModeFlag");

	Params::RaceTestUtils_GetAutoCsvProfileModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetAutoDebugKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoDebugKibanaModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoDebugKibanaModeFlag");

	Params::RaceTestUtils_GetAutoDebugKibanaModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetAutoDetailKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoDetailKibanaModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoDetailKibanaModeFlag");

	Params::RaceTestUtils_GetAutoDetailKibanaModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetAutoKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoKibanaModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoKibanaModeFlag");

	Params::RaceTestUtils_GetAutoKibanaModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetAutoProfileGpuModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoProfileGpuModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoProfileGpuModeFlag");

	Params::RaceTestUtils_GetAutoProfileGpuModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetAutoUnrealInsightsModeFlag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetAutoUnrealInsightsModeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetAutoUnrealInsightsModeFlag");

	Params::RaceTestUtils_GetAutoUnrealInsightsModeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetCumstomRaceTestConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URaceTestUtils::GetCumstomRaceTestConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetCumstomRaceTestConfig");

	Params::RaceTestUtils_GetCumstomRaceTestConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetNoHitItemPhysiceLayerMask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceTestUtils::GetNoHitItemPhysiceLayerMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetNoHitItemPhysiceLayerMask");

	Params::RaceTestUtils_GetNoHitItemPhysiceLayerMask Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCamera
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCamera");

	Params::RaceTestUtils_GetOverrideCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCameraElevation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Elevation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCameraElevation(float* Elevation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCameraElevation");

	Params::RaceTestUtils_GetOverrideCameraElevation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Elevation != nullptr)
		*Elevation = Parms.Elevation;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCameraOffset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCameraOffset(float* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCameraOffset");

	Params::RaceTestUtils_GetOverrideCameraOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Offset != nullptr)
		*Offset = Parms.Offset;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCameraTargetY
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCameraTargetY(float* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCameraTargetY");

	Params::RaceTestUtils_GetOverrideCameraTargetY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Target != nullptr)
		*Target = Parms.Target;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCameraTargetZ
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCameraTargetZ(float* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCameraTargetZ");

	Params::RaceTestUtils_GetOverrideCameraTargetZ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Target != nullptr)
		*Target = Parms.Target;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverrideCameraVFov
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  VFov                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverrideCameraVFov(float* VFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverrideCameraVFov");

	Params::RaceTestUtils_GetOverrideCameraVFov Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VFov != nullptr)
		*VFov = Parms.VFov;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCamera
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCamera");

	Params::RaceTestUtils_GetOverridePathCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCameraElevation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Elevation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCameraElevation(float* Elevation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCameraElevation");

	Params::RaceTestUtils_GetOverridePathCameraElevation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Elevation != nullptr)
		*Elevation = Parms.Elevation;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCameraOffset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCameraOffset(float* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCameraOffset");

	Params::RaceTestUtils_GetOverridePathCameraOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Offset != nullptr)
		*Offset = Parms.Offset;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCameraTargetY
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCameraTargetY(float* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCameraTargetY");

	Params::RaceTestUtils_GetOverridePathCameraTargetY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Target != nullptr)
		*Target = Parms.Target;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCameraTargetZ
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCameraTargetZ(float* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCameraTargetZ");

	Params::RaceTestUtils_GetOverridePathCameraTargetZ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Target != nullptr)
		*Target = Parms.Target;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetOverridePathCameraVFov
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  VFov                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetOverridePathCameraVFov(float* VFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetOverridePathCameraVFov");

	Params::RaceTestUtils_GetOverridePathCameraVFov Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VFov != nullptr)
		*VFov = Parms.VFov;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetRaceLoadTestMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERaceLoadTestMode                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERaceLoadTestMode URaceTestUtils::GetRaceLoadTestMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetRaceLoadTestMode");

	Params::RaceTestUtils_GetRaceLoadTestMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetRacerSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRaceTestRacerSetting*           Setting                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::GetRacerSetting(int32 RacerIndex, struct FRaceTestRacerSetting* Setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetRacerSetting");

	Params::RaceTestUtils_GetRacerSetting Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Setting != nullptr)
		*Setting = std::move(Parms.Setting);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetRaceTestConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class URaceTestConfig*            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class URaceTestConfig* URaceTestUtils::GetRaceTestConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetRaceTestConfig");

	Params::RaceTestUtils_GetRaceTestConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetRaceTestConfigAccess
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class URaceTestConfig*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URaceTestConfig* URaceTestUtils::GetRaceTestConfigAccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetRaceTestConfigAccess");

	Params::RaceTestUtils_GetRaceTestConfigAccess Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetRaceTestItemTableAsset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UDataTable*                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UDataTable* URaceTestUtils::GetRaceTestItemTableAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetRaceTestItemTableAsset");

	Params::RaceTestUtils_GetRaceTestItemTableAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetScreenNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceTestUtils::GetScreenNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetScreenNum");

	Params::RaceTestUtils_GetScreenNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.GetTagNameToDestroyActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString URaceTestUtils::GetTagNameToDestroyActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "GetTagNameToDestroyActor");

	Params::RaceTestUtils_GetTagNameToDestroyActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoCsvProfileMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoCsvProfileMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoCsvProfileMode");

	Params::RaceTestUtils_IsAutoCsvProfileMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoDebugKibanaMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoDebugKibanaMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoDebugKibanaMode");

	Params::RaceTestUtils_IsAutoDebugKibanaMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoDetailKibanaMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoDetailKibanaMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoDetailKibanaMode");

	Params::RaceTestUtils_IsAutoDetailKibanaMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoKibanaMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoKibanaMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoKibanaMode");

	Params::RaceTestUtils_IsAutoKibanaMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoProfileGpuMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoProfileGpuMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoProfileGpuMode");

	Params::RaceTestUtils_IsAutoProfileGpuMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsAutoUnrealInsightsMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsAutoUnrealInsightsMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsAutoUnrealInsightsMode");

	Params::RaceTestUtils_IsAutoUnrealInsightsMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsDisabledGameHighLoading
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsDisabledGameHighLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsDisabledGameHighLoading");

	Params::RaceTestUtils_IsDisabledGameHighLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsEnableItemTableSynchro
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsEnableItemTableSynchro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsEnableItemTableSynchro");

	Params::RaceTestUtils_IsEnableItemTableSynchro Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsFinalRaceLoadTest
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsFinalRaceLoadTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsFinalRaceLoadTest");

	Params::RaceTestUtils_IsFinalRaceLoadTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsForceComRun
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsForceComRun(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsForceComRun");

	Params::RaceTestUtils_IsForceComRun Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsNoBgmMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsNoBgmMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsNoBgmMode");

	Params::RaceTestUtils_IsNoBgmMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsNoCourseObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsNoCourseObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsNoCourseObject");

	Params::RaceTestUtils_IsNoCourseObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsNoGimmickObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsNoGimmickObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsNoGimmickObject");

	Params::RaceTestUtils_IsNoGimmickObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsNoHudMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsNoHudMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsNoHudMode");

	Params::RaceTestUtils_IsNoHudMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsPathCameraPawnMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsPathCameraPawnMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsPathCameraPawnMode");

	Params::RaceTestUtils_IsPathCameraPawnMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsPerformanceTestRun
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsPerformanceTestRun(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsPerformanceTestRun");

	Params::RaceTestUtils_IsPerformanceTestRun Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsRaceLoadAutoTestMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsRaceLoadAutoTestMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsRaceLoadAutoTestMode");

	Params::RaceTestUtils_IsRaceLoadAutoTestMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsRaceTestMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsRaceTestMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsRaceTestMode");

	Params::RaceTestUtils_IsRaceTestMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsUseItemTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsUseItemTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "IsUseItemTable");

	Params::RaceTestUtils_IsUseItemTable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.OverrideDebugMenuRaceLoadTestMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::OverrideDebugMenuRaceLoadTestMode(int32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "OverrideDebugMenuRaceLoadTestMode");

	Params::RaceTestUtils_OverrideDebugMenuRaceLoadTestMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.ResetRaceLoadTestCount
// (Final, Native, Static, Public, BlueprintCallable)

void URaceTestUtils::ResetRaceLoadTestCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "ResetRaceLoadTestCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SaveRaceLoadAutoTestResult
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::SaveRaceLoadAutoTestResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SaveRaceLoadAutoTestResult");

	Params::RaceTestUtils_SaveRaceLoadAutoTestResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.SetAutoCsvProfileModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoCsvProfileModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoCsvProfileModeFlag");

	Params::RaceTestUtils_SetAutoCsvProfileModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetAutoDebugKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoDebugKibanaModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoDebugKibanaModeFlag");

	Params::RaceTestUtils_SetAutoDebugKibanaModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetAutoDetailKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoDetailKibanaModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoDetailKibanaModeFlag");

	Params::RaceTestUtils_SetAutoDetailKibanaModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetAutoKibanaModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoKibanaModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoKibanaModeFlag");

	Params::RaceTestUtils_SetAutoKibanaModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetAutoProfileGpuModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoProfileGpuModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoProfileGpuModeFlag");

	Params::RaceTestUtils_SetAutoProfileGpuModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetAutoUnrealInsightsModeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetAutoUnrealInsightsModeFlag(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetAutoUnrealInsightsModeFlag");

	Params::RaceTestUtils_SetAutoUnrealInsightsModeFlag Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetCustomRaceTestConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    RaceTestConfig                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetCustomRaceTestConfig(const class FString& RaceTestConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetCustomRaceTestConfig");

	Params::RaceTestUtils_SetCustomRaceTestConfig Parms{};

	Parms.RaceTestConfig = std::move(RaceTestConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetDrivingCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   DrivingCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetDrivingCount(int32 DrivingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetDrivingCount");

	Params::RaceTestUtils_SetDrivingCount Parms{};

	Parms.DrivingCount = DrivingCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetLoadingTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   LoadingTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetLoadingTime(float LoadingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetLoadingTime");

	Params::RaceTestUtils_SetLoadingTime Parms{};

	Parms.LoadingTime = LoadingTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCamera(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCamera");

	Params::RaceTestUtils_SetOverrideCamera Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCameraElevation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Elevation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCameraElevation(float Elevation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCameraElevation");

	Params::RaceTestUtils_SetOverrideCameraElevation Parms{};

	Parms.Elevation = Elevation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCameraOffset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCameraOffset(float Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCameraOffset");

	Params::RaceTestUtils_SetOverrideCameraOffset Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCameraTargetY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCameraTargetY(float Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCameraTargetY");

	Params::RaceTestUtils_SetOverrideCameraTargetY Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCameraTargetZ
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCameraTargetZ(float Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCameraTargetZ");

	Params::RaceTestUtils_SetOverrideCameraTargetZ Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverrideCameraVFov
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   VFov                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverrideCameraVFov(float VFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverrideCameraVFov");

	Params::RaceTestUtils_SetOverrideCameraVFov Parms{};

	Parms.VFov = VFov;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCamera(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCamera");

	Params::RaceTestUtils_SetOverridePathCamera Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCameraElevation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Elevation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCameraElevation(float Elevation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCameraElevation");

	Params::RaceTestUtils_SetOverridePathCameraElevation Parms{};

	Parms.Elevation = Elevation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCameraOffset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCameraOffset(float Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCameraOffset");

	Params::RaceTestUtils_SetOverridePathCameraOffset Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCameraTargetY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCameraTargetY(float Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCameraTargetY");

	Params::RaceTestUtils_SetOverridePathCameraTargetY Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCameraTargetZ
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCameraTargetZ(float Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCameraTargetZ");

	Params::RaceTestUtils_SetOverridePathCameraTargetZ Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetOverridePathCameraVFov
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   VFov                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetOverridePathCameraVFov(float VFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetOverridePathCameraVFov");

	Params::RaceTestUtils_SetOverridePathCameraVFov Parms{};

	Parms.VFov = VFov;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetPathCameraPawnMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetPathCameraPawnMode(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetPathCameraPawnMode");

	Params::RaceTestUtils_SetPathCameraPawnMode Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetRaceLoadTestCountMax
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetRaceLoadTestCountMax(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetRaceLoadTestCountMax");

	Params::RaceTestUtils_SetRaceLoadTestCountMax Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.SetTagNameToDestroyActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TagName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::SetTagNameToDestroyActor(const class FString& TagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "SetTagNameToDestroyActor");

	Params::RaceTestUtils_SetTagNameToDestroyActor Parms{};

	Parms.TagName = std::move(TagName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartAutoCsvProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartAutoCsvProfile(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartAutoCsvProfile");

	Params::RaceTestUtils_StartAutoCsvProfile Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartAutoKibana
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartAutoKibana(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartAutoKibana");

	Params::RaceTestUtils_StartAutoKibana Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartAutoProfileGpu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartAutoProfileGpu(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartAutoProfileGpu");

	Params::RaceTestUtils_StartAutoProfileGpu Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartAutoUnrealInsights
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartAutoUnrealInsights(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartAutoUnrealInsights");

	Params::RaceTestUtils_StartAutoUnrealInsights Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartRaceLoadTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartRaceLoadTest(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartRaceLoadTest");

	Params::RaceTestUtils_StartRaceLoadTest Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.StartRaceTest
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::StartRaceTest(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "StartRaceTest");

	Params::RaceTestUtils_StartRaceTest Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.TickProfileGpuAndScreenshot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PC                                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceTestUtils::TickProfileGpuAndScreenshot(float DeltaTime, class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "TickProfileGpuAndScreenshot");

	Params::RaceTestUtils_TickProfileGpuAndScreenshot Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.UpdateCameraByDebConst
// (Final, Native, Static, Public, BlueprintCallable)

void URaceTestUtils::UpdateCameraByDebConst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "UpdateCameraByDebConst");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceTestUtils.UpdateRaceLoadAutoTest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<EStageId>&                 OpenStageIDs                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::UpdateRaceLoadAutoTest(const TArray<EStageId>& OpenStageIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RaceTestUtils", "UpdateRaceLoadAutoTest");

	Params::RaceTestUtils_UpdateRaceLoadAutoTest Parms{};

	Parms.OpenStageIDs = std::move(OpenStageIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceTestUtils.IsCustomRaceTestAutoConfigMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceTestUtils::IsCustomRaceTestAutoConfigMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceTestUtils", "IsCustomRaceTestAutoConfigMode");

	Params::RaceTestUtils_IsCustomRaceTestAutoConfigMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.AddRaceCustomParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionRaceCustomParam&     InRaceCustomParam                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::AddRaceCustomParam(const struct FUnionRaceCustomParam& InRaceCustomParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "AddRaceCustomParam");

	Params::UnionRacerStatusObject_AddRaceCustomParam Parms{};

	Parms.InRaceCustomParam = std::move(InRaceCustomParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.AddRunningDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   dist                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::AddRunningDistance(float dist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "AddRunningDistance");

	Params::UnionRacerStatusObject_AddRunningDistance Parms{};

	Parms.dist = dist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.GetAppCurrentDomainPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutAppCurrentDomainPosition                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetAppCurrentDomainPosition(struct FVector* OutAppCurrentDomainPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppCurrentDomainPosition");

	Params::UnionRacerStatusObject_GetAppCurrentDomainPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppCurrentDomainPosition != nullptr)
		*OutAppCurrentDomainPosition = std::move(Parms.OutAppCurrentDomainPosition);
}


// Function UnionRun.UnionRacerStatusObject.GetAppDomainGameCameraInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UUnionGameCameraInfo*>*    OutAppDomainGameCameraInfos                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetAppDomainGameCameraInfos(TArray<class UUnionGameCameraInfo*>* OutAppDomainGameCameraInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppDomainGameCameraInfos");

	Params::UnionRacerStatusObject_GetAppDomainGameCameraInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppDomainGameCameraInfos != nullptr)
		*OutAppDomainGameCameraInfos = std::move(Parms.OutAppDomainGameCameraInfos);
}


// Function UnionRun.UnionRacerStatusObject.GetAppDomainVehicleModelInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UUnionVehicleModelInfo*>*  OutAppDomainVehicleModelInfos                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetAppDomainVehicleModelInfos(TArray<class UUnionVehicleModelInfo*>* OutAppDomainVehicleModelInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppDomainVehicleModelInfos");

	Params::UnionRacerStatusObject_GetAppDomainVehicleModelInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppDomainVehicleModelInfos != nullptr)
		*OutAppDomainVehicleModelInfos = std::move(Parms.OutAppDomainVehicleModelInfos);
}


// Function UnionRun.UnionRacerStatusObject.GetAppLastDomainPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutAppLastDomainPosition                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetAppLastDomainPosition(struct FVector* OutAppLastDomainPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppLastDomainPosition");

	Params::UnionRacerStatusObject_GetAppLastDomainPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppLastDomainPosition != nullptr)
		*OutAppLastDomainPosition = std::move(Parms.OutAppLastDomainPosition);
}


// Function UnionRun.UnionRacerStatusObject.GetCurrentDomainIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutCurrentDomainIndex                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetCurrentDomainIndex(int32* OutCurrentDomainIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetCurrentDomainIndex");

	Params::UnionRacerStatusObject_GetCurrentDomainIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurrentDomainIndex != nullptr)
		*OutCurrentDomainIndex = Parms.OutCurrentDomainIndex;
}


// Function UnionRun.UnionRacerStatusObject.GetCurrentDomainNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutCurrentDomainNumber                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetCurrentDomainNumber(int32* OutCurrentDomainNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetCurrentDomainNumber");

	Params::UnionRacerStatusObject_GetCurrentDomainNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurrentDomainNumber != nullptr)
		*OutCurrentDomainNumber = Parms.OutCurrentDomainNumber;
}


// Function UnionRun.UnionRacerStatusObject.GetCurrentElapsedRatio
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  OutElapsedRatio                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetCurrentElapsedRatio(float* OutElapsedRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetCurrentElapsedRatio");

	Params::UnionRacerStatusObject_GetCurrentElapsedRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutElapsedRatio != nullptr)
		*OutElapsedRatio = Parms.OutElapsedRatio;
}


// Function UnionRun.UnionRacerStatusObject.GetCurrentLapCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutCurrentLapCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetCurrentLapCount(int32* OutCurrentLapCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetCurrentLapCount");

	Params::UnionRacerStatusObject_GetCurrentLapCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurrentLapCount != nullptr)
		*OutCurrentLapCount = Parms.OutCurrentLapCount;
}


// Function UnionRun.UnionRacerStatusObject.GetCurrentWorldOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                         OutWorldOffset                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetCurrentWorldOffset(struct FVector* OutWorldOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetCurrentWorldOffset");

	Params::UnionRacerStatusObject_GetCurrentWorldOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldOffset != nullptr)
		*OutWorldOffset = std::move(Parms.OutWorldOffset);
}


// Function UnionRun.UnionRacerStatusObject.GetEngineStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  EngineRPM                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  EngineMaxRPM                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetEngineStatus(float* EngineRPM, float* EngineMaxRPM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetEngineStatus");

	Params::UnionRacerStatusObject_GetEngineStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (EngineRPM != nullptr)
		*EngineRPM = Parms.EngineRPM;

	if (EngineMaxRPM != nullptr)
		*EngineMaxRPM = Parms.EngineMaxRPM;
}


// Function UnionRun.UnionRacerStatusObject.GetPlayerControllerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutPlayerControllerIndex                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetPlayerControllerIndex(int32* OutPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetPlayerControllerIndex");

	Params::UnionRacerStatusObject_GetPlayerControllerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayerControllerIndex != nullptr)
		*OutPlayerControllerIndex = Parms.OutPlayerControllerIndex;
}


// Function UnionRun.UnionRacerStatusObject.GetRacePlayerStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacePlayerStatus*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRacePlayerStatus* UUnionRacerStatusObject::GetRacePlayerStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRacePlayerStatus");

	Params::UnionRacerStatusObject_GetRacePlayerStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetRacerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutRacerIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetRacerIndex(int32* OutRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRacerIndex");

	Params::UnionRacerStatusObject_GetRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRacerIndex != nullptr)
		*OutRacerIndex = Parms.OutRacerIndex;
}


// Function UnionRun.UnionRacerStatusObject.GetRacerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionRacerStatusObject::GetRacerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRacerName");

	Params::UnionRacerStatusObject_GetRacerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetRingCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutRingCount                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetRingCount(int32* OutRingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRingCount");

	Params::UnionRacerStatusObject_GetRingCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRingCount != nullptr)
		*OutRingCount = Parms.OutRingCount;
}


// Function UnionRun.UnionRacerStatusObject.GetRivalRacerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32*                                  OutRacerIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetRivalRacerIndex(int32* OutRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRivalRacerIndex");

	Params::UnionRacerStatusObject_GetRivalRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRacerIndex != nullptr)
		*OutRacerIndex = Parms.OutRacerIndex;
}


// Function UnionRun.UnionRacerStatusObject.GetRivalRacersIndexArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>*                          OutRacersIndexArray                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetRivalRacersIndexArray(TArray<int32>* OutRacersIndexArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRivalRacersIndexArray");

	Params::UnionRacerStatusObject_GetRivalRacersIndexArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRacersIndexArray != nullptr)
		*OutRacersIndexArray = std::move(Parms.OutRacersIndexArray);
}


// Function UnionRun.UnionRacerStatusObject.GetTestParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerStatusObject::GetTestParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetTestParam");

	Params::UnionRacerStatusObject_GetTestParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetVehicleBodyGStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  BodyG                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  BodyGd                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  BodyGr                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetVehicleBodyGStatus(float* BodyG, float* BodyGd, float* BodyGr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetVehicleBodyGStatus");

	Params::UnionRacerStatusObject_GetVehicleBodyGStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BodyG != nullptr)
		*BodyG = Parms.BodyG;

	if (BodyGd != nullptr)
		*BodyGd = Parms.BodyGd;

	if (BodyGr != nullptr)
		*BodyGr = Parms.BodyGr;
}


// Function UnionRun.UnionRacerStatusObject.GetVehicleMoveSpeedStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                                  SpeedMPH                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  SpeedKPH                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetVehicleMoveSpeedStatus(float* SpeedMPH, float* SpeedKPH)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetVehicleMoveSpeedStatus");

	Params::UnionRacerStatusObject_GetVehicleMoveSpeedStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpeedMPH != nullptr)
		*SpeedMPH = Parms.SpeedMPH;

	if (SpeedKPH != nullptr)
		*SpeedKPH = Parms.SpeedKPH;
}


// Function UnionRun.UnionRacerStatusObject.RemoveDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERacerDamageType                        DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::RemoveDamage(ERacerDamageType DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "RemoveDamage");

	Params::UnionRacerStatusObject_RemoveDamage Parms{};

	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.RequestBackCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::RequestBackCamera(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "RequestBackCamera");

	Params::UnionRacerStatusObject_RequestBackCamera Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.ResetTakeDamage
// (Final, Native, Public, BlueprintCallable)

void UUnionRacerStatusObject::ResetTakeDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "ResetTakeDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetAirTrickAssistEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInNewValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetAirTrickAssistEnabled(bool bInNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetAirTrickAssistEnabled");

	Params::UnionRacerStatusObject_SetAirTrickAssistEnabled Parms{};

	Parms.bInNewValue = bInNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetAutoAcceleratorEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInNewValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetAutoAcceleratorEnabled(bool bInNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetAutoAcceleratorEnabled");

	Params::UnionRacerStatusObject_SetAutoAcceleratorEnabled Parms{};

	Parms.bInNewValue = bInNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetClushGimmick
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAttackedInfo&             AttackedInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetClushGimmick(const struct FAttackedInfo& AttackedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetClushGimmick");

	Params::UnionRacerStatusObject_SetClushGimmick Parms{};

	Parms.AttackedInfo = std::move(AttackedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetCrossplayPlatform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECrossplayPlatform                      InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetCrossplayPlatform(ECrossplayPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetCrossplayPlatform");

	Params::UnionRacerStatusObject_SetCrossplayPlatform Parms{};

	Parms.InPlatform = InPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetCurrentDomainIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDomainIndex                            InCurrentDomainIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetCurrentDomainIndex(EDomainIndex InCurrentDomainIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetCurrentDomainIndex");

	Params::UnionRacerStatusObject_SetCurrentDomainIndex Parms{};

	Parms.InCurrentDomainIndex = InCurrentDomainIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetCurrentDomainNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDomainNumber                           InCurrentDomainNumber                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetCurrentDomainNumber(EDomainNumber InCurrentDomainNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetCurrentDomainNumber");

	Params::UnionRacerStatusObject_SetCurrentDomainNumber Parms{};

	Parms.InCurrentDomainNumber = InCurrentDomainNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetCurrentLapCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InCurrentLapCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetCurrentLapCount(int32 InCurrentLapCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetCurrentLapCount");

	Params::UnionRacerStatusObject_SetCurrentLapCount Parms{};

	Parms.InCurrentLapCount = InCurrentLapCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetCurrentWorldOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InWorldOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetCurrentWorldOffset(const struct FVector& InWorldOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetCurrentWorldOffset");

	Params::UnionRacerStatusObject_SetCurrentWorldOffset Parms{};

	Parms.InWorldOffset = std::move(InWorldOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetDriverId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetDriverId(EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetDriverId");

	Params::UnionRacerStatusObject_SetDriverId Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetDriverType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDriverType                             InDriverType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetDriverType(EDriverType InDriverType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetDriverType");

	Params::UnionRacerStatusObject_SetDriverType Parms{};

	Parms.InDriverType = InDriverType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetDroneRemainDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EDroneRemainDistance                    InDroneRemainDistance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetDroneRemainDistance(EDroneRemainDistance InDroneRemainDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetDroneRemainDistance");

	Params::UnionRacerStatusObject_SetDroneRemainDistance Parms{};

	Parms.InDroneRemainDistance = InDroneRemainDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetGroupIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InGroupIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetGroupIndex(int32 InGroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetGroupIndex");

	Params::UnionRacerStatusObject_SetGroupIndex Parms{};

	Parms.InGroupIndex = InGroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetHandleAssistEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInNewValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetHandleAssistEnabled(bool bInNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetHandleAssistEnabled");

	Params::UnionRacerStatusObject_SetHandleAssistEnabled Parms{};

	Parms.bInNewValue = bInNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetMachineBehaviorID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMachineBehaviorID                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetMachineBehaviorID(int32 InMachineBehaviorID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetMachineBehaviorID");

	Params::UnionRacerStatusObject_SetMachineBehaviorID Parms{};

	Parms.InMachineBehaviorID = InMachineBehaviorID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetMachineCustomizeData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUserMachineCustomizeData& InMachineCustomizeData                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetMachineCustomizeData(const struct FUserMachineCustomizeData& InMachineCustomizeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetMachineCustomizeData");

	Params::UnionRacerStatusObject_SetMachineCustomizeData Parms{};

	Parms.InMachineCustomizeData = std::move(InMachineCustomizeData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetMachineID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMachineID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetMachineID(int32 InMachineID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetMachineID");

	Params::UnionRacerStatusObject_SetMachineID Parms{};

	Parms.InMachineID = InMachineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetMachineStatusType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECarStatusType                          NewStatus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetMachineStatusType(ECarStatusType NewStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetMachineStatusType");

	Params::UnionRacerStatusObject_SetMachineStatusType Parms{};

	Parms.NewStatus = NewStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetPlayable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InPlayable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetPlayable(bool InPlayable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetPlayable");

	Params::UnionRacerStatusObject_SetPlayable Parms{};

	Parms.InPlayable = InPlayable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetPlayerControllerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerControllerIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetPlayerControllerIndex(int32 InPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetPlayerControllerIndex");

	Params::UnionRacerStatusObject_SetPlayerControllerIndex Parms{};

	Parms.InPlayerControllerIndex = InPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRaceCustomParam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionRaceCustomParam&     InRaceCustomParam                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRaceCustomParam(const struct FUnionRaceCustomParam& InRaceCustomParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRaceCustomParam");

	Params::UnionRacerStatusObject_SetRaceCustomParam Parms{};

	Parms.InRaceCustomParam = std::move(InRaceCustomParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRacerComControlType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InComControlType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRacerComControlType(int32 InComControlType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRacerComControlType");

	Params::UnionRacerStatusObject_SetRacerComControlType Parms{};

	Parms.InComControlType = InComControlType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRacerComLv
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InComLv                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRacerComLv(int32 InComLv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRacerComLv");

	Params::UnionRacerStatusObject_SetRacerComLv Parms{};

	Parms.InComLv = InComLv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRacerControlType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERacerControlType                       InRacerControlType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRacerControlType(ERacerControlType InRacerControlType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRacerControlType");

	Params::UnionRacerStatusObject_SetRacerControlType Parms{};

	Parms.InRacerControlType = InRacerControlType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRacerIndex(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRacerIndex");

	Params::UnionRacerStatusObject_SetRacerIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRacerName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRacerName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRacerName");

	Params::UnionRacerStatusObject_SetRacerName Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRingCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRingCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRingCount(int32 InRingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRingCount");

	Params::UnionRacerStatusObject_SetRingCount Parms{};

	Parms.InRingCount = InRingCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRivalRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRivalRacerIndex(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRivalRacerIndex");

	Params::UnionRacerStatusObject_SetRivalRacerIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetRivalRacersIndexArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    InRacersIndex                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetRivalRacersIndexArray(const TArray<int32>& InRacersIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetRivalRacersIndexArray");

	Params::UnionRacerStatusObject_SetRivalRacersIndexArray Parms{};

	Parms.InRacersIndex = std::move(InRacersIndex);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetTakeDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FAttackedInfo&             AttackedInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetTakeDamage(const struct FAttackedInfo& AttackedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetTakeDamage");

	Params::UnionRacerStatusObject_SetTakeDamage Parms{};

	Parms.AttackedInfo = std::move(AttackedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetTestParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InNewParam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetTestParam(int32 InNewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetTestParam");

	Params::UnionRacerStatusObject_SetTestParam Parms{};

	Parms.InNewParam = InNewParam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetTSRKeyAssignEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInNewValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetTSRKeyAssignEnabled(bool bInNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetTSRKeyAssignEnabled");

	Params::UnionRacerStatusObject_SetTSRKeyAssignEnabled Parms{};

	Parms.bInNewValue = bInNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.SetViewSplitId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewSplitId                            InViewSplitId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::SetViewSplitId(EViewSplitId InViewSplitId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "SetViewSplitId");

	Params::UnionRacerStatusObject_SetViewSplitId Parms{};

	Parms.InViewSplitId = InViewSplitId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerStatusObject.GetAppearanceCounterYaw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerStatusObject::GetAppearanceCounterYaw() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppearanceCounterYaw");

	Params::UnionRacerStatusObject_GetAppearanceCounterYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetAppearanceSteer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerStatusObject::GetAppearanceSteer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetAppearanceSteer");

	Params::UnionRacerStatusObject_GetAppearanceSteer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetDroneRemainDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDroneRemainDistance                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDroneRemainDistance UUnionRacerStatusObject::GetDroneRemainDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetDroneRemainDistance");

	Params::UnionRacerStatusObject_GetDroneRemainDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetGroupIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerStatusObject::GetGroupIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetGroupIndex");

	Params::UnionRacerStatusObject_GetGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetInfiniteItemGauge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    IsMain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerStatusObject::GetInfiniteItemGauge(bool IsMain) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetInfiniteItemGauge");

	Params::UnionRacerStatusObject_GetInfiniteItemGauge Parms{};

	Parms.IsMain = IsMain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetInfiniteItemGauge_New
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerStatusObject::GetInfiniteItemGauge_New(EItemInfoType ItemInfoType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetInfiniteItemGauge_New");

	Params::UnionRacerStatusObject_GetInfiniteItemGauge_New Parms{};

	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetMachineCustomizeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserMachineCustomizeData  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUserMachineCustomizeData UUnionRacerStatusObject::GetMachineCustomizeData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetMachineCustomizeData");

	Params::UnionRacerStatusObject_GetMachineCustomizeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetPanSplitValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESoundPan                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESoundPan UUnionRacerStatusObject::GetPanSplitValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetPanSplitValue");

	Params::UnionRacerStatusObject_GetPanSplitValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetRaceCustomParam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUnionRaceCustomParam*           OutRaceCustomParam                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUnionRacerStatusObject::GetRaceCustomParam(struct FUnionRaceCustomParam* OutRaceCustomParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRaceCustomParam");

	Params::UnionRacerStatusObject_GetRaceCustomParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRaceCustomParam != nullptr)
		*OutRaceCustomParam = std::move(Parms.OutRaceCustomParam);
}


// Function UnionRun.UnionRacerStatusObject.GetRacerComLv
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerStatusObject::GetRacerComLv() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRacerComLv");

	Params::UnionRacerStatusObject_GetRacerComLv Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetRacerControlType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERacerControlType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERacerControlType UUnionRacerStatusObject::GetRacerControlType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetRacerControlType");

	Params::UnionRacerStatusObject_GetRacerControlType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetVehicleDisplayMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVehicleDisplayMode                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EVehicleDisplayMode UUnionRacerStatusObject::GetVehicleDisplayMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetVehicleDisplayMode");

	Params::UnionRacerStatusObject_GetVehicleDisplayMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.GetViewSplitId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EViewSplitId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EViewSplitId UUnionRacerStatusObject::GetViewSplitId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "GetViewSplitId");

	Params::UnionRacerStatusObject_GetViewSplitId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsAirTrickAssistEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsAirTrickAssistEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsAirTrickAssistEnabled");

	Params::UnionRacerStatusObject_IsAirTrickAssistEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsAnyDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsAnyDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsAnyDamage");

	Params::UnionRacerStatusObject_IsAnyDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsAutoAcceleratorEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsAutoAcceleratorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsAutoAcceleratorEnabled");

	Params::UnionRacerStatusObject_IsAutoAcceleratorEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsClushGimmickObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsClushGimmickObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsClushGimmickObject");

	Params::UnionRacerStatusObject_IsClushGimmickObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsCom");

	Params::UnionRacerStatusObject_IsCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsGhostGoal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsGhostGoal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsGhostGoal");

	Params::UnionRacerStatusObject_IsGhostGoal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsGhostHiddenInGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsGhostHiddenInGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsGhostHiddenInGame");

	Params::UnionRacerStatusObject_IsGhostHiddenInGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsGhostMachineEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsGhostMachineEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsGhostMachineEnabled");

	Params::UnionRacerStatusObject_IsGhostMachineEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsHandleAssistEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsHandleAssistEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsHandleAssistEnabled");

	Params::UnionRacerStatusObject_IsHandleAssistEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsItemIrregular
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    IsMain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsItemIrregular(bool IsMain) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsItemIrregular");

	Params::UnionRacerStatusObject_IsItemIrregular Parms{};

	Parms.IsMain = IsMain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsItemIrregular_New
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsItemIrregular_New(EItemInfoType ItemInfoType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsItemIrregular_New");

	Params::UnionRacerStatusObject_IsItemIrregular_New Parms{};

	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsLocalPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsLocalPlayer");

	Params::UnionRacerStatusObject_IsLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsLocalRacer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsLocalRacer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsLocalRacer");

	Params::UnionRacerStatusObject_IsLocalRacer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsMachineCameraAssigned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsMachineCameraAssigned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsMachineCameraAssigned");

	Params::UnionRacerStatusObject_IsMachineCameraAssigned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsOnlineCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsOnlineCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsOnlineCom");

	Params::UnionRacerStatusObject_IsOnlineCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsOnlinePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsOnlinePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsOnlinePlayer");

	Params::UnionRacerStatusObject_IsOnlinePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsRaceParkRivalRacerSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsRaceParkRivalRacerSkin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsRaceParkRivalRacerSkin");

	Params::UnionRacerStatusObject_IsRaceParkRivalRacerSkin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsRemoteRacer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsRemoteRacer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsRemoteRacer");

	Params::UnionRacerStatusObject_IsRemoteRacer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsRivalCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsRivalCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsRivalCom");

	Params::UnionRacerStatusObject_IsRivalCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsRivalPowerful
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsRivalPowerful() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsRivalPowerful");

	Params::UnionRacerStatusObject_IsRivalPowerful Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsSomeonesCom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsSomeonesCom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsSomeonesCom");

	Params::UnionRacerStatusObject_IsSomeonesCom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsTakeDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERacerDamageType                        DamageType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsTakeDamage(ERacerDamageType DamageType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsTakeDamage");

	Params::UnionRacerStatusObject_IsTakeDamage Parms{};

	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsTakeSquashedDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsTakeSquashedDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsTakeSquashedDamage");

	Params::UnionRacerStatusObject_IsTakeSquashedDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerStatusObject.IsTSRKeyAssignEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerStatusObject::IsTSRKeyAssignEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacerStatusObject", "IsTSRKeyAssignEnabled");

	Params::UnionRacerStatusObject_IsTSRKeyAssignEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubAirTrickInfo.SetAirTrickInfoAndFireAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuccessBonusCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsGhostView                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubAirTrickInfo::SetAirTrickInfoAndFireAnimation(int32 SuccessCount, int32 SuccessBonusCount, bool IsGhostView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAirTrickInfo", "SetAirTrickInfoAndFireAnimation");

	Params::RaceUISubAirTrickInfo_SetAirTrickInfoAndFireAnimation Parms{};

	Parms.SuccessCount = SuccessCount;
	Parms.SuccessBonusCount = SuccessBonusCount;
	Parms.IsGhostView = IsGhostView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubAirTrickInfo.SetAirTrickTextInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Tex_1000                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Tex_0100                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Tex_0010                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Tex_0001                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           Tex_Unit                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubAirTrickInfo::SetAirTrickTextInfo(int32 SuccessCount, class UImage* Tex_1000, class UImage* Tex_0100, class UImage* Tex_0010, class UImage* Tex_0001, class UImage* Tex_Unit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAirTrickInfo", "SetAirTrickTextInfo");

	Params::RaceUISubAirTrickInfo_SetAirTrickTextInfo Parms{};

	Parms.SuccessCount = SuccessCount;
	Parms.Tex_1000 = Tex_1000;
	Parms.Tex_0100 = Tex_0100;
	Parms.Tex_0010 = Tex_0010;
	Parms.Tex_0001 = Tex_0001;
	Parms.Tex_Unit = Tex_Unit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubAirTrickInfo.GetAirTrickBonusValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubAirTrickInfo::GetAirTrickBonusValue(int32 SuccessCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAirTrickInfo", "GetAirTrickBonusValue");

	Params::RaceUISubAirTrickInfo_GetAirTrickBonusValue Parms{};

	Parms.SuccessCount = SuccessCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubAirTrickInfo.GetAirTrickValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubAirTrickInfo::GetAirTrickValue(int32 SuccessCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubAirTrickInfo", "GetAirTrickValue");

	Params::RaceUISubAirTrickInfo_GetAirTrickValue Parms{};

	Parms.SuccessCount = SuccessCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubApproachWarning.InitItemEnemyApproachSetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            InMaxScale                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionAttackItemInfoType                AttackItemInfoType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8&                            AttackItemId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::InitItemEnemyApproachSetting(const float& InMaxScale, EUnionAttackItemInfoType AttackItemInfoType, const uint8& AttackItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "InitItemEnemyApproachSetting");

	Params::RaceUISubApproachWarning_InitItemEnemyApproachSetting Parms{};

	Parms.InMaxScale = InMaxScale;
	Parms.AttackItemInfoType = AttackItemInfoType;
	Parms.AttackItemId = AttackItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.InitRacerApproachSetting
// (Final, Native, Public, BlueprintCallable)

void URaceUISubApproachWarning::InitRacerApproachSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "InitRacerApproachSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.OnPause
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPause                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::OnPause(bool bInPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "OnPause");

	Params::RaceUISubApproachWarning_OnPause Parms{};

	Parms.bInPause = bInPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.OnRemoveApproachWidget
// (Final, Native, Public, BlueprintCallable)

void URaceUISubApproachWarning::OnRemoveApproachWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "OnRemoveApproachWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.SetAttackTypeandId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EUnionAttackItemInfoType&         InAttackType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::SetAttackTypeandId(const EUnionAttackItemInfoType& InAttackType, const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "SetAttackTypeandId");

	Params::RaceUISubApproachWarning_SetAttackTypeandId Parms{};

	Parms.InAttackType = InAttackType;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.SetDriverId
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::SetDriverId(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "SetDriverId");

	Params::RaceUISubApproachWarning_SetDriverId Parms{};

	Parms.DriverId = DriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubApproachWarning.SetItemId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::SetItemId(const int32& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "SetItemId");

	Params::RaceUISubApproachWarning_SetItemId Parms{};

	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.UpdateItemEnemyApproach
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            ValueCM                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::UpdateItemEnemyApproach(const float& ValueCM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "UpdateItemEnemyApproach");

	Params::RaceUISubApproachWarning_UpdateItemEnemyApproach Parms{};

	Parms.ValueCM = ValueCM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubApproachWarning.UpdateRacerApproach
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            ValueCM                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubApproachWarning::UpdateRacerApproach(const float& ValueCM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubApproachWarning", "UpdateRacerApproach");

	Params::RaceUISubApproachWarning_UpdateRacerApproach Parms{};

	Parms.ValueCM = ValueCM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacerFunction.GetDistance
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Pos1                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Pos2                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerFunction::GetDistance(const struct FVector& Pos1, const struct FVector& Pos2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetDistance");

	Params::UnionRacerFunction_GetDistance Parms{};

	Parms.Pos1 = std::move(Pos1);
	Parms.Pos2 = std::move(Pos2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetRacerGroupIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerFunction::GetRacerGroupIndex(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetRacerGroupIndex");

	Params::UnionRacerFunction_GetRacerGroupIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetRacerIndexByDriverID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerFunction::GetRacerIndexByDriverID(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetRacerIndexByDriverID");

	Params::UnionRacerFunction_GetRacerIndexByDriverID Parms{};

	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetRacerIndexByPlayerID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacerFunction::GetRacerIndexByPlayerID(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetRacerIndexByPlayerID");

	Params::UnionRacerFunction_GetRacerIndexByPlayerID Parms{};

	Parms.PlayerId = PlayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetRankingSkipInterval
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerFunction::GetRankingSkipInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetRankingSkipInterval");

	Params::UnionRacerFunction_GetRankingSkipInterval Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetRankUpGaugeSpeed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRacerFunction::GetRankUpGaugeSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetRankUpGaugeSpeed");

	Params::UnionRacerFunction_GetRankUpGaugeSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.GetUnionRacers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUnionRacers*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRacers* UUnionRacerFunction::GetUnionRacers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "GetUnionRacers");

	Params::UnionRacerFunction_GetUnionRacers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.IsInScreen
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const class APlayerController*          PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Position                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerFunction::IsInScreen(const class APlayerController* PlayerController, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "IsInScreen");

	Params::UnionRacerFunction_IsInScreen Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacerFunction.IsSameGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndexA                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRacerIndexB                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacerFunction::IsSameGroup(int32 InRacerIndexA, int32 InRacerIndexB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacerFunction", "IsSameGroup");

	Params::UnionRacerFunction_IsSameGroup Parms{};

	Parms.InRacerIndexA = InRacerIndexA;
	Parms.InRacerIndexB = InRacerIndexB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBasicOperation.IsKeyboard
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBasicOperation::IsKeyboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBasicOperation", "IsKeyboard");

	Params::RaceUISubBasicOperation_IsKeyboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceHitInfoGroup.SetItemIdIndex_Impl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InItemIdIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceHitInfoGroup::SetItemIdIndex_Impl(int32 InItemIdIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceHitInfoGroup", "SetItemIdIndex_Impl");

	Params::UnionRaceHitInfoGroup_SetItemIdIndex_Impl Parms{};

	Parms.InItemIdIndex = InItemIdIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceHitInfoGroup.UpdateHitInfoGroup
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceHitInfoGroup::UpdateHitInfoGroup(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceHitInfoGroup", "UpdateHitInfoGroup");

	Params::UnionRaceHitInfoGroup_UpdateHitInfoGroup Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubBtnGuide.GetControllerType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsNotSetKey                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBtnGuidePlatFormController             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBtnGuidePlatFormController URaceUISubBtnGuide::GetControllerType(int32 PlayerControllerIndex, bool IsNotSetKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetControllerType");

	Params::RaceUISubBtnGuide_GetControllerType Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.IsNotSetKey = IsNotSetKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetUseItemKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBtnGuide::GetUseItemKey(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetUseItemKey");

	Params::RaceUISubBtnGuide_GetUseItemKey Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubBtnGuide.SetUseItemKey
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      UseItemKey                                             (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubBtnGuide::SetUseItemKey(const struct FKey& UseItemKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "SetUseItemKey");

	Params::RaceUISubBtnGuide_SetUseItemKey Parms{};

	Parms.UseItemKey = std::move(UseItemKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubBtnGuide.GetFlightGuideKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuggestUpInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey URaceUISubBtnGuide::GetFlightGuideKey(int32 PlayerControllerIndex, bool bSuggestUpInput) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetFlightGuideKey");

	Params::RaceUISubBtnGuide_GetFlightGuideKey Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bSuggestUpInput = bSuggestUpInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetKeyDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText URaceUISubBtnGuide::GetKeyDisplayName(const struct FKey& InKey, int32 PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetKeyDisplayName");

	Params::RaceUISubBtnGuide_GetKeyDisplayName Parms{};

	Parms.InKey = std::move(InKey);
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetMouseButtonIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FKey&                      InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubBtnGuide::GetMouseButtonIndex(const struct FKey& InKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetMouseButtonIndex");

	Params::RaceUISubBtnGuide_GetMouseButtonIndex Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetReleaseEffectKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey URaceUISubBtnGuide::GetReleaseEffectKey(int32 PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetReleaseEffectKey");

	Params::RaceUISubBtnGuide_GetReleaseEffectKey Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetSteerKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SteerNo                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey URaceUISubBtnGuide::GetSteerKey(int32 PlayerControllerIndex, int32 SteerNo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetSteerKey");

	Params::RaceUISubBtnGuide_GetSteerKey Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.SteerNo = SteerNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.GetUseItemKeyPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey URaceUISubBtnGuide::GetUseItemKeyPC(int32 PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "GetUseItemKeyPC");

	Params::RaceUISubBtnGuide_GetUseItemKeyPC Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubBtnGuide.IsKeyboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubBtnGuide::IsKeyboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubBtnGuide", "IsKeyboard");

	Params::RaceUISubBtnGuide_IsKeyboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RacerReactionTextDataAsset.Import
// (Final, Native, Public)

void URacerReactionTextDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacerReactionTextDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubCourseMapIcon.SetReaderFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InReader                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubCourseMapIcon::SetReaderFlag(bool InReader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubCourseMapIcon", "SetReaderFlag");

	Params::RaceUISubCourseMapIcon_SetReaderFlag Parms{};

	Parms.InReader = InReader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubGadgetIcon.SetGadgetId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGadgetId                               InGadgetId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubGadgetIcon::SetGadgetId(EGadgetId InGadgetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubGadgetIcon", "SetGadgetId");

	Params::RaceUISubGadgetIcon_SetGadgetId Parms{};

	Parms.InGadgetId = InGadgetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubGadgetIcon.SetIconMaterial
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IconIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubGadgetIcon::SetIconMaterial(int32 IconIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubGadgetIcon", "SetIconMaterial");

	Params::RaceUISubGadgetIcon_SetIconMaterial Parms{};

	Parms.IconIndex = IconIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubGadgetIcon.GetGadgetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGadgetId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGadgetId URaceUISubGadgetIcon::GetGadgetId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubGadgetIcon", "GetGadgetId");

	Params::RaceUISubGadgetIcon_GetGadgetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubRing.SetCurrentRingCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            NewRingCount                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubRing::SetCurrentRingCount(const int32& NewRingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRing", "SetCurrentRingCount");

	Params::RaceUISubRing_SetCurrentRingCount Parms{};

	Parms.NewRingCount = NewRingCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubRing.SetParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubRing::SetParams(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRing", "SetParams");

	Params::RaceUISubRing_SetParams Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubRing.SetRingBackColor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocalMulti                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubRing::SetRingBackColor(int32 Index_0, bool IsGroup, bool IsLocalMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRing", "SetRingBackColor");

	Params::RaceUISubRing_SetRingBackColor Parms{};

	Parms.Index_0 = Index_0;
	Parms.IsGroup = IsGroup;
	Parms.IsLocalMulti = IsLocalMulti;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceSituationObject.IsFootCutting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceSituationObject::IsFootCutting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "IsFootCutting");

	Params::UnionRaceSituationObject_IsFootCutting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.IsTeamEnergyCharging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceSituationObject::IsTeamEnergyCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "IsTeamEnergyCharging");

	Params::UnionRaceSituationObject_IsTeamEnergyCharging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.SetFollowingDistDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   followingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetFollowingDistDiff(float followingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetFollowingDistDiff");

	Params::UnionRaceSituationObject_SetFollowingDistDiff Parms{};

	Parms.followingDistance = followingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetFollowingRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetFollowingRacerIndex(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetFollowingRacerIndex");

	Params::UnionRaceSituationObject_SetFollowingRacerIndex Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetFollowingRatioDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   followingDistance                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetFollowingRatioDiff(float followingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetFollowingRatioDiff");

	Params::UnionRaceSituationObject_SetFollowingRatioDiff Parms{};

	Parms.followingDistance = followingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetLeadingDistDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   leadingDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetLeadingDistDiff(float leadingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetLeadingDistDiff");

	Params::UnionRaceSituationObject_SetLeadingDistDiff Parms{};

	Parms.leadingDistance = leadingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetLeadingRacerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetLeadingRacerIndex(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetLeadingRacerIndex");

	Params::UnionRaceSituationObject_SetLeadingRacerIndex Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetLeadingRatioDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   leadingDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetLeadingRatioDiff(float leadingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetLeadingRatioDiff");

	Params::UnionRaceSituationObject_SetLeadingRatioDiff Parms{};

	Parms.leadingDistance = leadingDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetOddNumRankSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   oddNumRankSeconds_0                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetOddNumRankSeconds(float oddNumRankSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetOddNumRankSeconds");

	Params::UnionRaceSituationObject_SetOddNumRankSeconds Parms{};

	Parms.oddNumRankSeconds_0 = oddNumRankSeconds_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetPrevRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Rank_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetPrevRank(int32 Rank_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetPrevRank");

	Params::UnionRaceSituationObject_SetPrevRank Parms{};

	Parms.Rank_0 = Rank_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Rank_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetRank(int32 Rank_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetRank");

	Params::UnionRaceSituationObject_SetRank Parms{};

	Parms.Rank_0 = Rank_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetRivalDistDiff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   rivalDistDiff_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetRivalDistDiff(float rivalDistDiff_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetRivalDistDiff");

	Params::UnionRaceSituationObject_SetRivalDistDiff Parms{};

	Parms.rivalDistDiff_0 = rivalDistDiff_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.SetTeamEnergyCharging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bCharging                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceSituationObject::SetTeamEnergyCharging(bool bCharging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "SetTeamEnergyCharging");

	Params::UnionRaceSituationObject_SetTeamEnergyCharging Parms{};

	Parms.bCharging = bCharging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceSituationObject.GetFollowingDistDiff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetFollowingDistDiff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetFollowingDistDiff");

	Params::UnionRaceSituationObject_GetFollowingDistDiff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetFollowingRacerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceSituationObject::GetFollowingRacerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetFollowingRacerIndex");

	Params::UnionRaceSituationObject_GetFollowingRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetFollowingRatioDiff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetFollowingRatioDiff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetFollowingRatioDiff");

	Params::UnionRaceSituationObject_GetFollowingRatioDiff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetLeadingDistDiff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetLeadingDistDiff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetLeadingDistDiff");

	Params::UnionRaceSituationObject_GetLeadingDistDiff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetLeadingRacerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceSituationObject::GetLeadingRacerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetLeadingRacerIndex");

	Params::UnionRaceSituationObject_GetLeadingRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetLeadingRatioDiff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetLeadingRatioDiff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetLeadingRatioDiff");

	Params::UnionRaceSituationObject_GetLeadingRatioDiff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetOddNumRankSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetOddNumRankSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetOddNumRankSeconds");

	Params::UnionRaceSituationObject_GetOddNumRankSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetPrevRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceSituationObject::GetPrevRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetPrevRank");

	Params::UnionRaceSituationObject_GetPrevRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceSituationObject::GetRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetRank");

	Params::UnionRaceSituationObject_GetRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceSituationObject.GetRivalDistDiff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceSituationObject::GetRivalDistDiff() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceSituationObject", "GetRivalDistDiff");

	Params::UnionRaceSituationObject_GetRivalDistDiff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubGroupRing.SetRingCharaIcon
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubGroupRing::SetRingCharaIcon(EDriverId DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubGroupRing", "SetRingCharaIcon");

	Params::RaceUISubGroupRing_SetRingCharaIcon Parms{};

	Parms.DriverId = DriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubHitInfo.SetCharaIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsRival                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SetCharaIndex(int32 Index_0, bool IsRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetCharaIndex");

	Params::RaceUISubHitInfo_SetCharaIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.IsRival = IsRival;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubHitInfo.SetCOMBackColor
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubHitInfo::SetCOMBackColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetCOMBackColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.RaceUISubHitInfo.SetGroupColorMaterial
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SetGroupColorMaterial(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetGroupColorMaterial");

	Params::RaceUISubHitInfo_SetGroupColorMaterial Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubHitInfo.SetLocalPlayerColorMaterial
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SetLocalPlayerColorMaterial(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetLocalPlayerColorMaterial");

	Params::RaceUISubHitInfo_SetLocalPlayerColorMaterial Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubHitInfo.SetLostItemIdIndex_Implement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InItemIdIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SetLostItemIdIndex_Implement(int32 InItemIdIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetLostItemIdIndex_Implement");

	Params::RaceUISubHitInfo_SetLostItemIdIndex_Implement Parms{};

	Parms.InItemIdIndex = InItemIdIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubHitInfo.SetPlatformIcon
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECrossplayPlatform                      Platform                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SetPlatformIcon(ECrossplayPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SetPlatformIcon");

	Params::RaceUISubHitInfo_SetPlatformIcon Parms{};

	Parms.Platform = Platform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubHitInfo.SwitchBaseUI
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRival                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPowerRival                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubHitInfo::SwitchBaseUI(bool IsRival, bool IsPowerRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubHitInfo", "SwitchBaseUI");

	Params::RaceUISubHitInfo_SwitchBaseUI Parms{};

	Parms.IsRival = IsRival;
	Parms.IsPowerRival = IsPowerRival;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RacerReactionDataAsset.Import
// (Final, Native, Public)

void URacerReactionDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacerReactionDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.CloseLottery
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::CloseLottery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "CloseLottery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.DisplayHideAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Display                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::DisplayHideAnim(bool Display)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "DisplayHideAnim");

	Params::RaceUISubItemIcon_DisplayHideAnim Parms{};

	Parms.Display = Display;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.FireUseAnim
// (Final, Native, Public, BlueprintCallable)

void URaceUISubItemIcon::FireUseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "FireUseAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.GetRandomLotteryDisplayItemId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 URaceUISubItemIcon::GetRandomLotteryDisplayItemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "GetRandomLotteryDisplayItemId");

	Params::RaceUISubItemIcon_GetRandomLotteryDisplayItemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubItemIcon.ItemLostAnimStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHideIcon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::ItemLostAnimStart(bool bHideIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "ItemLostAnimStart");

	Params::RaceUISubItemIcon_ItemLostAnimStart Parms{};

	Parms.bHideIcon = bHideIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.LotteryAnimEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::LotteryAnimEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "LotteryAnimEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.LotteryAnimStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::LotteryAnimStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "LotteryAnimStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.LotteryDecideFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::LotteryDecideFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "LotteryDecideFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.LotterySeqStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LotterySound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::LotterySeqStart(bool LotterySound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "LotterySeqStart");

	Params::RaceUISubItemIcon_LotterySeqStart Parms{};

	Parms.LotterySound = LotterySound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.OnFinishedDecide
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::OnFinishedDecide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "OnFinishedDecide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.OnFinishedInAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::OnFinishedInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "OnFinishedInAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.OnFinishedOutAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::OnFinishedOutAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "OnFinishedOutAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.PlayLoopAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::PlayLoopAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "PlayLoopAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetAttributeColorIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InAttributeIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetAttributeColorIndex(int32 InAttributeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetAttributeColorIndex");

	Params::RaceUISubItemIcon_SetAttributeColorIndex Parms{};

	Parms.InAttributeIndex = InAttributeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetGaugeType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRemainCountGauge                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetGaugeType(bool bRemainCountGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetGaugeType");

	Params::RaceUISubItemIcon_SetGaugeType Parms{};

	Parms.bRemainCountGauge = bRemainCountGauge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetItemIdIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InItemIdIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRemainCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreAttribute                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnLottery                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetItemIdIndex(int32 InItemIdIndex, int32 InRemainCount, bool bIgnoreAttribute, bool bOnLottery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetItemIdIndex");

	Params::RaceUISubItemIcon_SetItemIdIndex Parms{};

	Parms.InItemIdIndex = InItemIdIndex;
	Parms.InRemainCount = InRemainCount;
	Parms.bIgnoreAttribute = bIgnoreAttribute;
	Parms.bOnLottery = bOnLottery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetItemIdTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<EItemId, class UTexture2D*>& InItemId_TextureMap                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetItemIdTexture(const TMap<EItemId, class UTexture2D*>& InItemId_TextureMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetItemIdTexture");

	Params::RaceUISubItemIcon_SetItemIdTexture Parms{};

	Parms.InItemId_TextureMap = std::move(InItemId_TextureMap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetLotteryDisplayItemIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<uint8>&                    ItemIds                                                (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetLotteryDisplayItemIds(const TArray<uint8>& ItemIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetLotteryDisplayItemIds");

	Params::RaceUISubItemIcon_SetLotteryDisplayItemIds Parms{};

	Parms.ItemIds = std::move(ItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetRemainCountGauge
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetRemainCountGauge(int32 Count, int32 MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetRemainCountGauge");

	Params::RaceUISubItemIcon_SetRemainCountGauge Parms{};

	Parms.Count = Count;
	Parms.MaxCount = MaxCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetRingNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRingCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetRingNum(int32 InRingCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetRingNum");

	Params::RaceUISubItemIcon_SetRingNum Parms{};

	Parms.InRingCount = InRingCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetRingNumVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemIcon::SetRingNumVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetRingNumVisible");

	Params::RaceUISubItemIcon_SetRingNumVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.SetupPackageRing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::SetupPackageRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "SetupPackageRing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.StartCountDownBlink
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::StartCountDownBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "StartCountDownBlink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemIcon.StopCountDownBlink
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void URaceUISubItemIcon::StopCountDownBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemIcon", "StopCountDownBlink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubItemSummonButton.SetSummonInputKey
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsKeyboard                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubItemSummonButton::SetSummonInputKey(const struct FKey& Key, bool IsKeyboard, int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubItemSummonButton", "SetSummonInputKey");

	Params::RaceUISubItemSummonButton_SetSummonInputKey Parms{};

	Parms.Key = std::move(Key);
	Parms.IsKeyboard = IsKeyboard;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubLap.InitializeLapCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::InitializeLapCount(class UTextureRenderTarget2D* InRenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "InitializeLapCount");

	Params::RaceUISubLap_InitializeLapCount Parms{};

	Parms.InRenderTarget = InRenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubLap.SetCurrentLap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::SetCurrentLap(int32 Lap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "SetCurrentLap");

	Params::RaceUISubLap_SetCurrentLap Parms{};

	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubLap.SetCurrentLapMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::SetCurrentLapMID(class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "SetCurrentLapMID");

	Params::RaceUISubLap_SetCurrentLapMID Parms{};

	Parms.Mid = Mid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubLap.SetMaxLap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::SetMaxLap(int32 Lap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "SetMaxLap");

	Params::RaceUISubLap_SetMaxLap Parms{};

	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubLap.SetMaxLapMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::SetMaxLapMID(class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "SetMaxLapMID");

	Params::RaceUISubLap_SetMaxLapMID Parms{};

	Parms.Mid = Mid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubLap.UpdateLapCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDelta                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubLap::UpdateLapCount(float InDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubLap", "UpdateLapCount");

	Params::RaceUISubLap_UpdateLapCount Parms{};

	Parms.InDelta = InDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubReturnDashGauge.GetButtonWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* URaceUISubReturnDashGauge::GetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubReturnDashGauge", "GetButtonWidget");

	Params::RaceUISubReturnDashGauge_GetButtonWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubReturnDashGauge.SetDashInputKey
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubReturnDashGauge::SetDashInputKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubReturnDashGauge", "SetDashInputKey");

	Params::RaceUISubReturnDashGauge_SetDashInputKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubReturnDashGauge.SetGaugeParcent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubReturnDashGauge::SetGaugeParcent(float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubReturnDashGauge", "SetGaugeParcent");

	Params::RaceUISubReturnDashGauge_SetGaugeParcent Parms{};

	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubReturnDashGauge.SetGaugePivotAndRange
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ImageRef                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PivotRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRateRange                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubReturnDashGauge::SetGaugePivotAndRange(class UImage* ImageRef, float PivotRate, float GaugeRateRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubReturnDashGauge", "SetGaugePivotAndRange");

	Params::RaceUISubReturnDashGauge_SetGaugePivotAndRange Parms{};

	Parms.ImageRef = ImageRef;
	Parms.PivotRate = PivotRate;
	Parms.GaugeRateRange = GaugeRateRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubReturnDashGauge.SetReturnDashSetting
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float&                            Pivot                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Range                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubReturnDashGauge::SetReturnDashSetting(const float& Pivot, const float& Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubReturnDashGauge", "SetReturnDashSetting");

	Params::RaceUISubReturnDashGauge_SetReturnDashSetting Parms{};

	Parms.Pivot = Pivot;
	Parms.Range = Range;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubRuleCount.GetCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubRuleCount::GetCount(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRuleCount", "GetCount");

	Params::RaceUISubRuleCount_GetCount Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubRuleCount.GetGroupRaceBonusData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FMenuGroupRaceBonusData    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FMenuGroupRaceBonusData URaceUISubRuleCount::GetGroupRaceBonusData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRuleCount", "GetGroupRaceBonusData");

	Params::RaceUISubRuleCount_GetGroupRaceBonusData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubRuleCount.SetNewCount
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCuont                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubRuleCount::SetNewCount(int32 NewCuont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRuleCount", "SetNewCount");

	Params::RaceUISubRuleCount_SetNewCount Parms{};

	Parms.NewCuont = NewCuont;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubRuleCount.UpdateRuleCountImpl
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubRuleCount::UpdateRuleCountImpl(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubRuleCount", "UpdateRuleCountImpl");

	Params::RaceUISubRuleCount_UpdateRuleCountImpl Parms{};

	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubStartGauge.GetButtonWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* URaceUISubStartGauge::GetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "GetButtonWidget");

	Params::RaceUISubStartGauge_GetButtonWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubStartGauge.GetKeyAccel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FKey URaceUISubStartGauge::GetKeyAccel(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "GetKeyAccel");

	Params::RaceUISubStartGauge_GetKeyAccel Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubStartGauge.IsPlayControlKeyboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubStartGauge::IsPlayControlKeyboard(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "IsPlayControlKeyboard");

	Params::RaceUISubStartGauge_IsPlayControlKeyboard Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubStartGauge.SetDashInputKey
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetDashInputKey(const struct FKey& Key, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetDashInputKey");

	Params::RaceUISubStartGauge_SetDashInputKey Parms{};

	Parms.Key = std::move(Key);
	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubStartGauge.SetGaugeParcent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetGaugeParcent(float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetGaugeParcent");

	Params::RaceUISubStartGauge_SetGaugeParcent Parms{};

	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubStartGauge.SetGaugeParcentTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetGaugeParcentTrigger(float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetGaugeParcentTrigger");

	Params::RaceUISubStartGauge_SetGaugeParcentTrigger Parms{};

	Parms.GaugeRate = GaugeRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubStartGauge.SetGaugePivotAndRange
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           ImageRef                                               (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PivotRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRateRange                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetGaugePivotAndRange(class UImage* ImageRef, float PivotRate, float GaugeRateRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetGaugePivotAndRange");

	Params::RaceUISubStartGauge_SetGaugePivotAndRange Parms{};

	Parms.ImageRef = ImageRef;
	Parms.PivotRate = PivotRate;
	Parms.GaugeRateRange = GaugeRateRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubStartGauge.SetStartDashParamSetting
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FUnionRaceStartDashParam&  InStartDashParam                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetStartDashParamSetting(const struct FUnionRaceStartDashParam& InStartDashParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetStartDashParamSetting");

	Params::RaceUISubStartGauge_SetStartDashParamSetting Parms{};

	Parms.InStartDashParam = std::move(InStartDashParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubStartGauge.SetStartDashSetting
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const float&                            LV3_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV3_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV2_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV2_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG1_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG1_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG2_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG2_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubStartGauge::SetStartDashSetting(const float& LV3_PIVOT, const float& LV3_RANGE, const float& LV2_PIVOT, const float& LV2_RANGE, const float& NG1_PIVOT, const float& NG1_RANGE, const float& NG2_PIVOT, const float& NG2_RANGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubStartGauge", "SetStartDashSetting");

	Params::RaceUISubStartGauge_SetStartDashSetting Parms{};

	Parms.LV3_PIVOT = LV3_PIVOT;
	Parms.LV3_RANGE = LV3_RANGE;
	Parms.LV2_PIVOT = LV2_PIVOT;
	Parms.LV2_RANGE = LV2_RANGE;
	Parms.NG1_PIVOT = NG1_PIVOT;
	Parms.NG1_RANGE = NG1_RANGE;
	Parms.NG2_PIVOT = NG2_PIVOT;
	Parms.NG2_RANGE = NG2_RANGE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubTeamGroup.SetCharaIconNative
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       IconTex                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTeamGroup::SetCharaIconNative(class UTexture2D* IconTex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamGroup", "SetCharaIconNative");

	Params::RaceUISubTeamGroup_SetCharaIconNative Parms{};

	Parms.IconTex = IconTex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTeamGroup.SetDispTextYou
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsDisp                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTeamGroup::SetDispTextYou(bool IsDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamGroup", "SetDispTextYou");

	Params::RaceUISubTeamGroup_SetDispTextYou Parms{};

	Parms.IsDisp = IsDisp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTeamGroup.SetRankNative
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTeamGroup::SetRankNative(int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamGroup", "SetRankNative");

	Params::RaceUISubTeamGroup_SetRankNative Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTeamHUD.ExecChangeRank
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PanelIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDispPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubTeamHUD::ExecChangeRank(int32 PanelIndex, EDriverId DriverId, bool IsDispPlayer, int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "ExecChangeRank");

	Params::RaceUISubTeamHUD_ExecChangeRank Parms{};

	Parms.PanelIndex = PanelIndex;
	Parms.DriverId = DriverId;
	Parms.IsDispPlayer = IsDispPlayer;
	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTeamHUD.ExecPlayChangeRank
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PanelIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDispPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubTeamHUD::ExecPlayChangeRank(int32 PanelIndex, EDriverId DriverId, bool IsDispPlayer, int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "ExecPlayChangeRank");

	Params::RaceUISubTeamHUD_ExecPlayChangeRank Parms{};

	Parms.PanelIndex = PanelIndex;
	Parms.DriverId = DriverId;
	Parms.IsDispPlayer = IsDispPlayer;
	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTeamHUD.ExecSetRankOnly
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PanelIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URaceUISubTeamHUD::ExecSetRankOnly(int32 PanelIndex, int32 Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "ExecSetRankOnly");

	Params::RaceUISubTeamHUD_ExecSetRankOnly Parms{};

	Parms.PanelIndex = PanelIndex;
	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTeamHUD.GetTeamRankRough
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URaceUISubTeamHUD::GetTeamRankRough()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "GetTeamRankRough");

	Params::RaceUISubTeamHUD_GetTeamRankRough Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTeamHUD.SetTeamRank
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamRank                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTeamHUD::SetTeamRank(int32 TeamRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "SetTeamRank");

	Params::RaceUISubTeamHUD_SetTeamRank Parms{};

	Parms.TeamRank = TeamRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUISubTeamHUD.UpdateCharaRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTeamHUD::UpdateCharaRank(bool IsForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTeamHUD", "UpdateCharaRank");

	Params::RaceUISubTeamHUD_UpdateCharaRank Parms{};

	Parms.IsForce = IsForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTime.SetBestTime
// (Final, Native, Public, BlueprintCallable)

void URaceUISubTimeTrialTime::SetBestTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "SetBestTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTime.SetTargetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URichTextBlock*                   TargetTextBlock                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      TargetName                                             (Parm, NativeAccessSpecifierPublic)
// int32                                   TargetTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsClockCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTime::SetTargetTime(class URichTextBlock* TargetTextBlock, const class FText& TargetName, int32 TargetTime, bool IsClockCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "SetTargetTime");

	Params::RaceUISubTimeTrialTime_SetTargetTime Parms{};

	Parms.TargetTextBlock = TargetTextBlock;
	Parms.TargetName = std::move(TargetName);
	Parms.TargetTime = TargetTime;
	Parms.IsClockCount = IsClockCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTime.SetTargetTime4Best
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class URichTextBlock*                   TargetTextBlock                                        (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUISubTimeTrialTime::SetTargetTime4Best(class URichTextBlock* TargetTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "SetTargetTime4Best");

	Params::RaceUISubTimeTrialTime_SetTargetTime4Best Parms{};

	Parms.TargetTextBlock = TargetTextBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTime.SetVisibilityTime
// (Final, Native, Public, BlueprintCallable)

void URaceUISubTimeTrialTime::SetVisibilityTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "SetVisibilityTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUISubTimeTrialTime.UpdateLapTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Lap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   IsBestLap                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRaceUITimeTrialTime             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FRaceUITimeTrialTime URaceUISubTimeTrialTime::UpdateLapTime(int32 Lap, bool* IsBestLap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "UpdateLapTime");

	Params::RaceUISubTimeTrialTime_UpdateLapTime Parms{};

	Parms.Lap = Lap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsBestLap != nullptr)
		*IsBestLap = Parms.IsBestLap;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUISubTimeTrialTime.UpdateTime
// (Final, Native, Public, BlueprintCallable)

void URaceUISubTimeTrialTime::UpdateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUISubTimeTrialTime", "UpdateTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RaceUITutorialControllerKey.GetTutorialKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETutorialAction                         tutorialAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKey                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FKey URaceUITutorialControllerKey::GetTutorialKey(ETutorialAction tutorialAction, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUITutorialControllerKey", "GetTutorialKey");

	Params::RaceUITutorialControllerKey_GetTutorialKey Parms{};

	Parms.tutorialAction = tutorialAction;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RaceUITutorialControllerKey.UpdateHintIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUITutorialControllerKey::UpdateHintIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUITutorialControllerKey", "UpdateHintIndex");

	Params::RaceUITutorialControllerKey_UpdateHintIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.RaceUITutorialControllerKey.UpdateTutorialIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URaceUITutorialControllerKey::UpdateTutorialIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RaceUITutorialControllerKey", "UpdateTutorialIndex");

	Params::RaceUITutorialControllerKey_UpdateTutorialIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.ReplayFixedCameraCollision.CreateCameraObject
// (Final, Native, Private)

void AReplayFixedCameraCollision::CreateCameraObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReplayFixedCameraCollision", "CreateCameraObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ReplayFixedCameraCollision.OnCollisionBaseHit
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FCollisionHitInfo&         Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AReplayFixedCameraCollision::OnCollisionBaseHit(const struct FCollisionHitInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReplayFixedCameraCollision", "OnCollisionBaseHit");

	Params::ReplayFixedCameraCollision_OnCollisionBaseHit Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ReplayFixedCameraCollision.SetCameraData
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewBoxSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AReplayFixedCameraCollision::SetCameraData(const struct FVector& NewBoxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReplayFixedCameraCollision", "SetCameraData");

	Params::ReplayFixedCameraCollision_SetCameraData Parms{};

	Parms.NewBoxSize = std::move(NewBoxSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ReplayMoveCameraCollision.OnCollisionBaseHit
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FCollisionHitInfo&         Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AReplayMoveCameraCollision::OnCollisionBaseHit(const struct FCollisionHitInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReplayMoveCameraCollision", "OnCollisionBaseHit");

	Params::ReplayMoveCameraCollision_OnCollisionBaseHit Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ReplayMoveCameraCollision.SetCameraData
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   NewBoxSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AReplayMoveCameraCollision::SetCameraData(const struct FVector& NewBoxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReplayMoveCameraCollision", "SetCameraData");

	Params::ReplayMoveCameraCollision_SetCameraData Parms{};

	Parms.NewBoxSize = std::move(NewBoxSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RingObject.GetFinalLapRingNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ARingObject::GetFinalLapRingNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RingObject", "GetFinalLapRingNum");

	Params::RingObject_GetFinalLapRingNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RingObject.GetFinalLapRingOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ARingObject::GetFinalLapRingOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RingObject", "GetFinalLapRingOffset");

	Params::RingObject_GetFinalLapRingOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RingObject.IsFinalLapChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ARingObject::IsFinalLapChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RingObject", "IsFinalLapChange");

	Params::RingObject_IsFinalLapChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.RingObject.SetIsFinalLapChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARingObject::SetIsFinalLapChange(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RingObject", "SetIsFinalLapChange");

	Params::RingObject_SetIsFinalLapChange Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RingObject.SetRingType
// (Final, Native, Public, BlueprintCallable)

void ARingObject::SetRingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RingObject", "SetRingType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.GetOverrideCollisionScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float AShortcutRingObject::GetOverrideCollisionScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetOverrideCollisionScale");

	Params::ShortcutRingObject_GetOverrideCollisionScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.GetRingScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float AShortcutRingObject::GetRingScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetRingScale");

	Params::ShortcutRingObject_GetRingScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.GetShortcutId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 AShortcutRingObject::GetShortcutId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetShortcutId");

	Params::ShortcutRingObject_GetShortcutId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.GetShortcutRingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EShortcutRingType                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EShortcutRingType AShortcutRingObject::GetShortcutRingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetShortcutRingType");

	Params::ShortcutRingObject_GetShortcutRingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.GetStageId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const EStageId                          ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EStageId AShortcutRingObject::GetStageId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetStageId");

	Params::ShortcutRingObject_GetStageId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.IsHalfRing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool AShortcutRingObject::IsHalfRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "IsHalfRing");

	Params::ShortcutRingObject_IsHalfRing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.IsUseOverrideCollisionScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool AShortcutRingObject::IsUseOverrideCollisionScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "IsUseOverrideCollisionScale");

	Params::ShortcutRingObject_IsUseOverrideCollisionScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.SetHalfRing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHalf                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShortcutRingObject::SetHalfRing(bool bHalf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetHalfRing");

	Params::ShortcutRingObject_SetHalfRing Parms{};

	Parms.bHalf = bHalf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.SetRingScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShortcutRingObject::SetRingScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetRingScale");

	Params::ShortcutRingObject_SetRingScale Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.SetShortcutId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShortcutRingObject::SetShortcutId(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetShortcutId");

	Params::ShortcutRingObject_SetShortcutId Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.SetShortcutRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EShortcutRingType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShortcutRingObject::SetShortcutRingType(EShortcutRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetShortcutRingType");

	Params::ShortcutRingObject_SetShortcutRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.SetTravelRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETravelRingType                         Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AShortcutRingObject::SetTravelRingType(ETravelRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetTravelRingType");

	Params::ShortcutRingObject_SetTravelRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.SetupShortcutRing
// (Final, Native, Public, BlueprintCallable)

void AShortcutRingObject::SetupShortcutRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "SetupShortcutRing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.ShortcutRingObject.GetTravelRingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETravelRingType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETravelRingType AShortcutRingObject::GetTravelRingType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "GetTravelRingType");

	Params::ShortcutRingObject_GetTravelRingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.ShortcutRingObject.IsUseAnotherGate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AShortcutRingObject::IsUseAnotherGate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShortcutRingObject", "IsUseAnotherGate");

	Params::ShortcutRingObject_IsUseAnotherGate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.SquidAnimInstance.IsSquidState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESquidState                             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USquidAnimInstance::IsSquidState(ESquidState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SquidAnimInstance", "IsSquidState");

	Params::SquidAnimInstance_IsSquidState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TowerAnimInstance.OnEnterBreakLoop
// (Final, Native, Public, BlueprintCallable)

void UTowerAnimInstance::OnEnterBreakLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TowerAnimInstance", "OnEnterBreakLoop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TowerAnimInstance.OnEnterWait
// (Final, Native, Public, BlueprintCallable)

void UTowerAnimInstance::OnEnterWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TowerAnimInstance", "OnEnterWait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TowerAnimInstance.IsTowerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETowerState                             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTowerAnimInstance::IsTowerState(ETowerState State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TowerAnimInstance", "IsTowerState");

	Params::TowerAnimInstance_IsTowerState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TransformRingObject.GetRingScaleRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ATransformRingObject::GetRingScaleRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TransformRingObject", "GetRingScaleRate");

	Params::TransformRingObject_GetRingScaleRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.TransformRingObject.SetRingScaleRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATransformRingObject::SetRingScaleRate(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TransformRingObject", "SetRingScaleRate");

	Params::TransformRingObject_SetRingScaleRate Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TransformRingObject.SetTransformRingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETransformRingType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATransformRingObject::SetTransformRingType(ETransformRingType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TransformRingObject", "SetTransformRingType");

	Params::TransformRingObject_SetTransformRingType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TransformRingObject.UpdateParallelMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATransformRingObject::UpdateParallelMode(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TransformRingObject", "UpdateParallelMode");

	Params::TransformRingObject_UpdateParallelMode Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TriggerComponent.OnCollisionBaseHit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FCollisionHitInfo&         Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTriggerComponent::OnCollisionBaseHit(const struct FCollisionHitInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerComponent", "OnCollisionBaseHit");

	Params::TriggerComponent_OnCollisionBaseHit Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TriggerComponent.OnCollisionHitResult
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FCollisionHitResultInfo&   Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTriggerComponent::OnCollisionHitResult(const struct FCollisionHitResultInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerComponent", "OnCollisionHitResult");

	Params::TriggerComponent_OnCollisionHitResult Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TriggerComponent.SetSurfaceFlag
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const struct FUnionSurfaceFlag&         flag                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UTriggerComponent::SetSurfaceFlag(const struct FUnionSurfaceFlag& flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerComponent", "SetSurfaceFlag");

	Params::TriggerComponent_SetSurfaceFlag Parms{};

	Parms.flag = std::move(flag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.TriggerComponent.SetSurfaceType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EUnionSurfaceType                       Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTriggerComponent::SetSurfaceType(EUnionSurfaceType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerComponent", "SetSurfaceType");

	Params::TriggerComponent_SetSurfaceType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetAttackEnemyItemIdIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEnemyItemId                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEnemyItemId IUnionAttackItemInfoInterface::GetAttackEnemyItemIdIF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetAttackEnemyItemIdIF");

	Params::UnionAttackItemInfoInterface_GetAttackEnemyItemIdIF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetAttackItemIdIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemId                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemId IUnionAttackItemInfoInterface::GetAttackItemIdIF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetAttackItemIdIF");

	Params::UnionAttackItemInfoInterface_GetAttackItemIdIF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectDomainIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDomainIndex                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDomainIndex IUnionAttackItemInfoInterface::GetObjectDomainIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectDomainIndex");

	Params::UnionAttackItemInfoInterface_GetObjectDomainIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectDomainLocationUE
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IUnionAttackItemInfoInterface::GetObjectDomainLocationUE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectDomainLocationUE");

	Params::UnionAttackItemInfoInterface_GetObjectDomainLocationUE Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectDomainNumber
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDomainNumber                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDomainNumber IUnionAttackItemInfoInterface::GetObjectDomainNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectDomainNumber");

	Params::UnionAttackItemInfoInterface_GetObjectDomainNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectLapCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IUnionAttackItemInfoInterface::GetObjectLapCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectLapCount");

	Params::UnionAttackItemInfoInterface_GetObjectLapCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectPathIndexDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IUnionAttackItemInfoInterface::GetObjectPathIndexDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectPathIndexDistance");

	Params::UnionAttackItemInfoInterface_GetObjectPathIndexDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectRaceDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IUnionAttackItemInfoInterface::GetObjectRaceDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectRaceDistance");

	Params::UnionAttackItemInfoInterface_GetObjectRaceDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectRaceDomainElapsedRatio
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IUnionAttackItemInfoInterface::GetObjectRaceDomainElapsedRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectRaceDomainElapsedRatio");

	Params::UnionAttackItemInfoInterface_GetObjectRaceDomainElapsedRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetObjectWorldLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IUnionAttackItemInfoInterface::GetObjectWorldLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetObjectWorldLocation");

	Params::UnionAttackItemInfoInterface_GetObjectWorldLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetSameDomainOnlyFlag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionAttackItemInfoInterface::GetSameDomainOnlyFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetSameDomainOnlyFlag");

	Params::UnionAttackItemInfoInterface_GetSameDomainOnlyFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetUsingRacerIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IUnionAttackItemInfoInterface::GetUsingRacerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetUsingRacerIndex");

	Params::UnionAttackItemInfoInterface_GetUsingRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.IsAttackItemMoveToTargetIgnorePathIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionAttackItemInfoInterface::IsAttackItemMoveToTargetIgnorePathIF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "IsAttackItemMoveToTargetIgnorePathIF");

	Params::UnionAttackItemInfoInterface_IsAttackItemMoveToTargetIgnorePathIF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.IsAttackItemTargetIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   checkRacerIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionAttackItemInfoInterface::IsAttackItemTargetIF(int32 checkRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "IsAttackItemTargetIF");

	Params::UnionAttackItemInfoInterface_IsAttackItemTargetIF Parms{};

	Parms.checkRacerIndex = checkRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.IsAttackItemUsedForBackIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionAttackItemInfoInterface::IsAttackItemUsedForBackIF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "IsAttackItemUsedForBackIF");

	Params::UnionAttackItemInfoInterface_IsAttackItemUsedForBackIF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionAttackItemInfoInterface.GetAttackItemInfoTypeIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EUnionAttackItemInfoType                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionAttackItemInfoType IUnionAttackItemInfoInterface::GetAttackItemInfoTypeIF() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionAttackItemInfoInterface", "GetAttackItemInfoTypeIF");

	Params::UnionAttackItemInfoInterface_GetAttackItemInfoTypeIF Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionCameraModifierPostEffect.SetCameraPostEffectParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUnionCameraModifierPostEffectType      EffectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParameterName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionCameraModifierPostEffect::SetCameraPostEffectParameter(EUnionCameraModifierPostEffectType EffectType, class FName ParameterName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionCameraModifierPostEffect", "SetCameraPostEffectParameter");

	Params::UnionCameraModifierPostEffect_SetCameraPostEffectParameter Parms{};

	Parms.EffectType = EffectType;
	Parms.ParameterName = ParameterName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionDebugStringSubsystem.Draw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCanvas*                          InCanvas                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                InPC                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionDebugStringSubsystem::Draw(class UCanvas* InCanvas, class APlayerController* InPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionDebugStringSubsystem", "Draw");

	Params::UnionDebugStringSubsystem_Draw Parms{};

	Parms.InCanvas = InCanvas;
	Parms.InPC = InPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionDebugStringSubsystem.PrintDebugString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDebugPrintStringStruct&   DebugString                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionDebugStringSubsystem::PrintDebugString(const struct FDebugPrintStringStruct& DebugString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionDebugStringSubsystem", "PrintDebugString");

	Params::UnionDebugStringSubsystem_PrintDebugString Parms{};

	Parms.DebugString = std::move(DebugString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionDebugStringSubsystem.SetDebugStringVisibleFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionDebugStringSubsystem::SetDebugStringVisibleFlag(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionDebugStringSubsystem", "SetDebugStringVisibleFlag");

	Params::UnionDebugStringSubsystem_SetDebugStringVisibleFlag Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemSkeletalMeshContainer.OnBeginGame
// (Native, Public, BlueprintCallable)

void UUnionItemSkeletalMeshContainer::OnBeginGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionItemSkeletalMeshContainer", "OnBeginGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemSkeletalMeshContainer.OnBeginItem
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionItemSkeletalMeshContainer::OnBeginItem(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionItemSkeletalMeshContainer", "OnBeginItem");

	Params::UnionItemSkeletalMeshContainer_OnBeginItem Parms{};

	Parms.OwnerActor = OwnerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionItemSkeletalMeshContainer.OnEndItem
// (Native, Public, BlueprintCallable)

void UUnionItemSkeletalMeshContainer::OnEndItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionItemSkeletalMeshContainer", "OnEndItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionPhysicalMaterial.GetPhysicalSurfaceType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUnionSurfaceType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionSurfaceType UUnionPhysicalMaterial::GetPhysicalSurfaceType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "GetPhysicalSurfaceType");

	Params::UnionPhysicalMaterial_GetPhysicalSurfaceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.GetSurfaceFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUnionSurfaceFlag                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUnionSurfaceFlag UUnionPhysicalMaterial::GetSurfaceFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "GetSurfaceFlag");

	Params::UnionPhysicalMaterial_GetSurfaceFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsAssistWall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsAssistWall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsAssistWall");

	Params::UnionPhysicalMaterial_IsAssistWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsAssistWallItemIgnoret
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsAssistWallItemIgnoret() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsAssistWallItemIgnoret");

	Params::UnionPhysicalMaterial_IsAssistWallItemIgnoret Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsBouncy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsBouncy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsBouncy");

	Params::UnionPhysicalMaterial_IsBouncy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsBumpyHeavy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsBumpyHeavy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsBumpyHeavy");

	Params::UnionPhysicalMaterial_IsBumpyHeavy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsBumpyLight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsBumpyLight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsBumpyLight");

	Params::UnionPhysicalMaterial_IsBumpyLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsBumpyMedium
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsBumpyMedium() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsBumpyMedium");

	Params::UnionPhysicalMaterial_IsBumpyMedium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsCameraChange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsCameraChange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsCameraChange");

	Params::UnionPhysicalMaterial_IsCameraChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsCarDriveable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsCarDriveable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsCarDriveable");

	Params::UnionPhysicalMaterial_IsCarDriveable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsCylindrical
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsCylindrical() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsCylindrical");

	Params::UnionPhysicalMaterial_IsCylindrical Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsDash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsDash");

	Params::UnionPhysicalMaterial_IsDash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsGravitySwitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsGravitySwitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsGravitySwitch");

	Params::UnionPhysicalMaterial_IsGravitySwitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsGrindDash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsGrindDash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsGrindDash");

	Params::UnionPhysicalMaterial_IsGrindDash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsGuidedJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsGuidedJump() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsGuidedJump");

	Params::UnionPhysicalMaterial_IsGuidedJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsHitBouncyMidium
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsHitBouncyMidium() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsHitBouncyMidium");

	Params::UnionPhysicalMaterial_IsHitBouncyMidium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsHitLoseRing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsHitLoseRing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsHitLoseRing");

	Params::UnionPhysicalMaterial_IsHitLoseRing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsHitSlowdownLight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsHitSlowdownLight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsHitSlowdownLight");

	Params::UnionPhysicalMaterial_IsHitSlowdownLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsHitSlowdownMidium
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsHitSlowdownMidium() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsHitSlowdownMidium");

	Params::UnionPhysicalMaterial_IsHitSlowdownMidium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsIgnoreSticky
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsIgnoreSticky() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsIgnoreSticky");

	Params::UnionPhysicalMaterial_IsIgnoreSticky Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsItemOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsItemOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsItemOnly");

	Params::UnionPhysicalMaterial_IsItemOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsMachineOnlyWall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsMachineOnlyWall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsMachineOnlyWall");

	Params::UnionPhysicalMaterial_IsMachineOnlyWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsNoJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsNoJump() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsNoJump");

	Params::UnionPhysicalMaterial_IsNoJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsNrrow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsNrrow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsNrrow");

	Params::UnionPhysicalMaterial_IsNrrow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsPseudoPlane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsPseudoPlane() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsPseudoPlane");

	Params::UnionPhysicalMaterial_IsPseudoPlane Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsRespot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsRespot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsRespot");

	Params::UnionPhysicalMaterial_IsRespot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsSlide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsSlide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsSlide");

	Params::UnionPhysicalMaterial_IsSlide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsSlippy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsSlippy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsSlippy");

	Params::UnionPhysicalMaterial_IsSlippy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsSlowDownLight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsSlowDownLight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsSlowDownLight");

	Params::UnionPhysicalMaterial_IsSlowDownLight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsSlowDownMedium
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsSlowDownMedium() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsSlowDownMedium");

	Params::UnionPhysicalMaterial_IsSlowDownMedium Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsWall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsWall() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsWall");

	Params::UnionPhysicalMaterial_IsWall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPhysicalMaterial.IsYellowDrill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionPhysicalMaterial::IsYellowDrill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPhysicalMaterial", "IsYellowDrill");

	Params::UnionPhysicalMaterial_IsYellowDrill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionPlayerInfoBillboardUI.ChangeDriverInfo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const EDriverId&                        DriverId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionPlayerInfoBillboardUI::ChangeDriverInfo(const EDriverId& DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionPlayerInfoBillboardUI", "ChangeDriverInfo");

	Params::UnionPlayerInfoBillboardUI_ChangeDriverInfo Parms{};

	Parms.DriverId = DriverId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceGadgetUI.InitializeIconsByGadgetInfo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<EGadgetId>&                GadgetInfo                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceGadgetUI::InitializeIconsByGadgetInfo(const TArray<EGadgetId>& GadgetInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceGadgetUI", "InitializeIconsByGadgetInfo");

	Params::UnionRaceGadgetUI_InitializeIconsByGadgetInfo Parms{};

	Parms.GadgetInfo = std::move(GadgetInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceGadgetUI.InitializeIconsByRacerIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceGadgetUI::InitializeIconsByRacerIndex(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceGadgetUI", "InitializeIconsByRacerIndex");

	Params::UnionRaceGadgetUI_InitializeIconsByRacerIndex Parms{};

	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceInfoNotifier.RegisterRaceInfoListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InListener                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceInfoNotifier::RegisterRaceInfoListener(class UObject* InListener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceInfoNotifier", "RegisterRaceInfoListener");

	Params::UnionRaceInfoNotifier_RegisterRaceInfoListener Parms{};

	Parms.InListener = InListener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceInfoNotifier.Reset
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceInfoNotifier::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceInfoNotifier", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceInfoNotifier.UnregisterRaceInfoListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InListener                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceInfoNotifier::UnregisterRaceInfoListener(class UObject* InListener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceInfoNotifier", "UnregisterRaceInfoListener");

	Params::UnionRaceInfoNotifier_UnregisterRaceInfoListener Parms{};

	Parms.InListener = InListener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.AddCourseMapActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::AddCourseMapActor(class AActor* InAttackItem, EItemId InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "AddCourseMapActor");

	Params::UnionRaceMinimap_AddCourseMapActor Parms{};

	Parms.InAttackItem = InAttackItem;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.GetGroupColor
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GouupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UUnionRaceMinimap::GetGroupColor(int32 GouupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "GetGroupColor");

	Params::UnionRaceMinimap_GetGroupColor Parms{};

	Parms.GouupIndex = GouupIndex;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceMinimap.InitializeMinimap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::InitializeMinimap(class UTextureRenderTarget2D* InRenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "InitializeMinimap");

	Params::UnionRaceMinimap_InitializeMinimap Parms{};

	Parms.InRenderTarget = InRenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.InitializeRaceData
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceMinimap::InitializeRaceData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "InitializeRaceData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.RemoveCourseMapActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::RemoveCourseMapActor(class AActor* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "RemoveCourseMapActor");

	Params::UnionRaceMinimap_RemoveCourseMapActor Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetCourseMapCharaSpin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetCourseMapCharaSpin(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetCourseMapCharaSpin");

	Params::UnionRaceMinimap_SetCourseMapCharaSpin Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetCourseSetting
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UObject>&    CourseTexture                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOrthoRate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InOffset                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetCourseSetting(const TSoftObjectPtr<class UObject>& CourseTexture, float InOrthoRate, float InAngle, const struct FVector& InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetCourseSetting");

	Params::UnionRaceMinimap_SetCourseSetting Parms{};

	Parms.CourseTexture = CourseTexture;
	Parms.InOrthoRate = InOrthoRate;
	Parms.InAngle = InAngle;
	Parms.InOffset = std::move(InOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceMinimap.SetDomainIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDomainIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetDomainIndex(int32 InDomainIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetDomainIndex");

	Params::UnionRaceMinimap_SetDomainIndex Parms{};

	Parms.InDomainIndex = InDomainIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetDomainNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InDomainNumber                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetDomainNumber(int32 InDomainNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetDomainNumber");

	Params::UnionRaceMinimap_SetDomainNumber Parms{};

	Parms.InDomainNumber = InDomainNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetDriverId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetDriverId(int32 RacerIndex, int32 DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetDriverId");

	Params::UnionRaceMinimap_SetDriverId Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetGroupIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetGroupIndex(int32 RacerIndex, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetGroupIndex");

	Params::UnionRaceMinimap_SetGroupIndex Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetMinimapIconItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            RacerIndex                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetMinimapIconItem(const int32& RacerIndex, const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetMinimapIconItem");

	Params::UnionRaceMinimap_SetMinimapIconItem Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetMinimapIconType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            RacerIndex                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMinimapIconType&                 InMinimapIconType                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetMinimapIconType(const int32& RacerIndex, const EMinimapIconType& InMinimapIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetMinimapIconType");

	Params::UnionRaceMinimap_SetMinimapIconType Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InMinimapIconType = InMinimapIconType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocalMulti                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetPlayerIndex(int32 RacerIndex, int32 PlayerIndex, bool IsPlayer, bool IsLocalMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetPlayerIndex");

	Params::UnionRaceMinimap_SetPlayerIndex Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.PlayerIndex = PlayerIndex;
	Parms.IsPlayer = IsPlayer;
	Parms.IsLocalMulti = IsLocalMulti;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetPosition(int32 RacerIndex, const struct FVector& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetPosition");

	Params::UnionRaceMinimap_SetPosition Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InPosition = std::move(InPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetPositionAndZOrder
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8&                            InZOrder                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetPositionAndZOrder(int32 RacerIndex, const struct FVector& InPosition, const uint8& InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetPositionAndZOrder");

	Params::UnionRaceMinimap_SetPositionAndZOrder Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InPosition = std::move(InPosition);
	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetRacerCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerCount_0                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetRacerCount(int32 RacerCount_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetRacerCount");

	Params::UnionRaceMinimap_SetRacerCount Parms{};

	Parms.RacerCount_0 = RacerCount_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetRacerIconVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetRacerIconVisibility(int32 RacerIndex, ESlateVisibility NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetRacerIconVisibility");

	Params::UnionRaceMinimap_SetRacerIconVisibility Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetReaderFlag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool&                             InIsReader                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetReaderFlag(int32 RacerIndex, const bool& InIsReader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetReaderFlag");

	Params::UnionRaceMinimap_SetReaderFlag Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InIsReader = InIsReader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.SetRival
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsRival                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPowerRival                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::SetRival(int32 RacerIndex, bool IsRival, bool IsPowerRival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "SetRival");

	Params::UnionRaceMinimap_SetRival Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.IsRival = IsRival;
	Parms.IsPowerRival = IsPowerRival;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceMinimap.UpdateMinimap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDelta                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceMinimap::UpdateMinimap(float InDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceMinimap", "UpdateMinimap");

	Params::UnionRaceMinimap_UpdateMinimap Parms{};

	Parms.InDelta = InDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceReturnDashUI.GetButtonWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionRaceReturnDashUI::GetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceReturnDashUI", "GetButtonWidget");

	Params::UnionRaceReturnDashUI_GetButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceReturnDashUI.SetGaugeParcent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            GaugeRate                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceReturnDashUI::SetGaugeParcent(const float& GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceReturnDashUI", "SetGaugeParcent");

	Params::UnionRaceReturnDashUI_SetGaugeParcent Parms{};

	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceReturnDashUI.SetReturnDashSetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            Pivot                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            Range                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceReturnDashUI::SetReturnDashSetting(const float& Pivot, const float& Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceReturnDashUI", "SetReturnDashSetting");

	Params::UnionRaceReturnDashUI_SetReturnDashSetting Parms{};

	Parms.Pivot = Pivot;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.RacerReactionInfoDataAsset.Import
// (Final, Native, Public)

void URacerReactionInfoDataAsset::Import()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RacerReactionInfoDataAsset", "Import");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.GetDriverIdByRacerIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int32                             InRacerIndex                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDriverId UUnionRacers::GetDriverIdByRacerIndex(const int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRacers", "GetDriverIdByRacerIndex");

	Params::UnionRacers_GetDriverIdByRacerIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.ApplyPauseInputs
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::ApplyPauseInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "ApplyPauseInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.ApplyVehicleInputs
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::ApplyVehicleInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "ApplyVehicleInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.ChangeVehicleDisplayMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVehicleDisplayMode                     InVehicleDisplayMode                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::ChangeVehicleDisplayMode(int32 InRacerIndex, EVehicleDisplayMode InVehicleDisplayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "ChangeVehicleDisplayMode");

	Params::UnionRacers_ChangeVehicleDisplayMode Parms{};

	Parms.InRacerIndex = InRacerIndex;
	Parms.InVehicleDisplayMode = InVehicleDisplayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.ClearVehicles
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::ClearVehicles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "ClearVehicles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.Destroy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacers::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "Destroy");

	Params::UnionRacers_Destroy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.ExecTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::ExecTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "ExecTick");

	Params::UnionRacers_ExecTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRacers.GetLocalPlayers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UUnionRacer*>*             OutRacers                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRacers::GetLocalPlayers(TArray<class UUnionRacer*>* OutRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetLocalPlayers");

	Params::UnionRacers_GetLocalPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRacers != nullptr)
		*OutRacers = std::move(Parms.OutRacers);
}


// Function UnionRun.UnionRacers.GetPlayerRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetPlayerRank(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetPlayerRank");

	Params::UnionRacers_GetPlayerRank Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRaceHUDRef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceUI*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceUI* UUnionRacers::GetRaceHUDRef()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRaceHUDRef");

	Params::UnionRacers_GetRaceHUDRef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRaceLapInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InRacerIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRaceLapInfo*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceLapInfo* UUnionRacers::GetRaceLapInfo(const int32& InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRaceLapInfo");

	Params::UnionRacers_GetRaceLapInfo Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRacer*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRacer* UUnionRacers::GetRacer(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacer");

	Params::UnionRacers_GetRacer Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacer3DPositionAndDomainNumber
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDomainNumber*                          DomainNum                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector UUnionRacers::GetRacer3DPositionAndDomainNumber(int32 Index_0, EDomainNumber* DomainNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacer3DPositionAndDomainNumber");

	Params::UnionRacers_GetRacer3DPositionAndDomainNumber Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DomainNum != nullptr)
		*DomainNum = Parms.DomainNum;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacerIndexByRank
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InRank                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetRacerIndexByRank(const int32& InRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacerIndexByRank");

	Params::UnionRacers_GetRacerIndexByRank Parms{};

	Parms.InRank = InRank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacerRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetRacerRank(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacerRank");

	Params::UnionRacers_GetRacerRank Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacerSituationObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRaceSituationObject*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceSituationObject* UUnionRacers::GetRacerSituationObject(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacerSituationObject");

	Params::UnionRacers_GetRacerSituationObject Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacerStatusObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRacerStatusObject*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRacerStatusObject* UUnionRacers::GetRacerStatusObject(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacerStatusObject");

	Params::UnionRacers_GetRacerStatusObject Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetTestRaceCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetTestRaceCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetTestRaceCount");

	Params::UnionRacers_GetTestRaceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.HidePlayerNameHUD
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::HidePlayerNameHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "HidePlayerNameHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.InitTestRace
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::InitTestRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "InitTestRace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.IsOfflinePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacer*                      Racer                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacers::IsOfflinePlayer(class UUnionRacer* Racer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "IsOfflinePlayer");

	Params::UnionRacers_IsOfflinePlayer Parms{};

	Parms.Racer = Racer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.IsOnlineCom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacer*                      Racer                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacers::IsOnlineCom(class UUnionRacer* Racer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "IsOnlineCom");

	Params::UnionRacers_IsOnlineCom Parms{};

	Parms.Racer = Racer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.IsPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacer*                      Racer                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRacers::IsPlayer(class UUnionRacer* Racer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "IsPlayer");

	Params::UnionRacers_IsPlayer Parms{};

	Parms.Racer = Racer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.SetLinkPlayerControllerIndexToRacerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            InRacerIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::SetLinkPlayerControllerIndexToRacerIndex(const int32& PlayerControllerIndex, const int32& InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "SetLinkPlayerControllerIndexToRacerIndex");

	Params::UnionRacers_SetLinkPlayerControllerIndexToRacerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.SetRaceLapInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InRacerIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRaceLapInfo*                InRaceLapInfo                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::SetRaceLapInfo(const int32& InRacerIndex, class UUnionRaceLapInfo* InRaceLapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "SetRaceLapInfo");

	Params::UnionRacers_SetRaceLapInfo Parms{};

	Parms.InRacerIndex = InRacerIndex;
	Parms.InRaceLapInfo = InRaceLapInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.SetTickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTickable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::SetTickable(bool bTickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "SetTickable");

	Params::UnionRacers_SetTickable Parms{};

	Parms.bTickable = bTickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.SetVehicle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            InRacerIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            InVehicle                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::SetVehicle(const int32& InRacerIndex, class APawn* InVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "SetVehicle");

	Params::UnionRacers_SetVehicle Parms{};

	Parms.InRacerIndex = InRacerIndex;
	Parms.InVehicle = InVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UnionRacers_SetTimerDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimerHandle UUnionRacers::UnionRacers_SetTimerDelegate(TDelegate<void()> Delegate, float Time, bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UnionRacers_SetTimerDelegate");

	Params::UnionRacers_UnionRacers_SetTimerDelegate Parms{};

	Parms.Delegate = Delegate;
	Parms.Time = Time;
	Parms.bLooping = bLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.UpdateBaggage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::UpdateBaggage(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdateBaggage");

	Params::UnionRacers_UpdateBaggage Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UpdateDomain
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::UpdateDomain(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdateDomain");

	Params::UnionRacers_UpdateDomain Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UpdatePlayerNameHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::UpdatePlayerNameHUD(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdatePlayerNameHUD");

	Params::UnionRacers_UpdatePlayerNameHUD Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UpdateTestRace
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::UpdateTestRace(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdateTestRace");

	Params::UnionRacers_UpdateTestRace Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UpdateVehicleInputs
// (Final, Native, Public, BlueprintCallable)

void UUnionRacers::UpdateVehicleInputs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdateVehicleInputs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.UpdateVehicles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRacers::UpdateVehicles(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "UpdateVehicles");

	Params::UnionRacers_UpdateVehicles Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRacers.GetGamePauseOwnerPlayerControllerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetGamePauseOwnerPlayerControllerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetGamePauseOwnerPlayerControllerIndex");

	Params::UnionRacers_GetGamePauseOwnerPlayerControllerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetGamePauseOwnerRacerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetGamePauseOwnerRacerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetGamePauseOwnerRacerIndex");

	Params::UnionRacers_GetGamePauseOwnerRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetPlayerControllerIndexByRacerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32&                            InRacerIndex                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetPlayerControllerIndexByRacerIndex(const int32& InRacerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetPlayerControllerIndexByRacerIndex");

	Params::UnionRacers_GetPlayerControllerIndexByRacerIndex Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRacers.GetRacerIndexByPlayerControllerIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRacers::GetRacerIndexByPlayerControllerIndex(const int32& PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRacers", "GetRacerIndexByPlayerControllerIndex");

	Params::UnionRacers_GetRacerIndexByPlayerControllerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceStartUI.GetButtonWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionRaceStartUI::GetButtonWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceStartUI", "GetButtonWidget");

	Params::UnionRaceStartUI_GetButtonWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceStartUI.SetCount
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceStartUI::SetCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceStartUI", "SetCount");

	Params::UnionRaceStartUI_SetCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceStartUI.SetGaugeParcent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            GaugeRate                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceStartUI::SetGaugeParcent(const float& GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceStartUI", "SetGaugeParcent");

	Params::UnionRaceStartUI_SetGaugeParcent Parms{};

	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceStartUI.SetStartDashParamSetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FUnionRaceStartDashParam&  InStartDashParam                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UUnionRaceStartUI::SetStartDashParamSetting(const struct FUnionRaceStartDashParam& InStartDashParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceStartUI", "SetStartDashParamSetting");

	Params::UnionRaceStartUI_SetStartDashParamSetting Parms{};

	Parms.InStartDashParam = std::move(InStartDashParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceStartUI.SetStartDashSetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const float&                            LV3_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV3_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV2_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            LV2_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG1_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG1_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG2_PIVOT                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            NG2_RANGE                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceStartUI::SetStartDashSetting(const float& LV3_PIVOT, const float& LV3_RANGE, const float& LV2_PIVOT, const float& LV2_RANGE, const float& NG1_PIVOT, const float& NG1_RANGE, const float& NG2_PIVOT, const float& NG2_RANGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceStartUI", "SetStartDashSetting");

	Params::UnionRaceStartUI_SetStartDashSetting Parms{};

	Parms.LV3_PIVOT = LV3_PIVOT;
	Parms.LV3_RANGE = LV3_RANGE;
	Parms.LV2_PIVOT = LV2_PIVOT;
	Parms.LV2_RANGE = LV2_RANGE;
	Parms.NG1_PIVOT = NG1_PIVOT;
	Parms.NG1_RANGE = NG1_RANGE;
	Parms.NG2_PIVOT = NG2_PIVOT;
	Parms.NG2_RANGE = NG2_RANGE;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceLapInfo.GetLapTimeFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FUnionRaceTime&            Time                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionRaceLapInfo::GetLapTimeFloat(const struct FUnionRaceTime& Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceLapInfo", "GetLapTimeFloat");

	Params::UnionRaceLapInfo_GetLapTimeFloat Parms{};

	Parms.Time = std::move(Time);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceLapInfo.GetBestLapTimeValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  MinuteValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  SecondValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  MilliSecondValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceLapInfo::GetBestLapTimeValue(int32* MinuteValue, int32* SecondValue, int32* MilliSecondValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceLapInfo", "GetBestLapTimeValue");

	Params::UnionRaceLapInfo_GetBestLapTimeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MinuteValue != nullptr)
		*MinuteValue = Parms.MinuteValue;

	if (SecondValue != nullptr)
		*SecondValue = Parms.SecondValue;

	if (MilliSecondValue != nullptr)
		*MilliSecondValue = Parms.MilliSecondValue;
}


// Function UnionRun.UnionRaceLapInfo.GetCurentLapTimeValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  MinuteValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  SecondValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  MilliSecondValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceLapInfo::GetCurentLapTimeValue(int32* MinuteValue, int32* SecondValue, int32* MilliSecondValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceLapInfo", "GetCurentLapTimeValue");

	Params::UnionRaceLapInfo_GetCurentLapTimeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MinuteValue != nullptr)
		*MinuteValue = Parms.MinuteValue;

	if (SecondValue != nullptr)
		*SecondValue = Parms.SecondValue;

	if (MilliSecondValue != nullptr)
		*MilliSecondValue = Parms.MilliSecondValue;
}


// Function UnionRun.UnionRaceLapInfo.GetLastLapTimeValue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32*                                  MinuteValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  SecondValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  MilliSecondValue                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceLapInfo::GetLastLapTimeValue(int32* MinuteValue, int32* SecondValue, int32* MilliSecondValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceLapInfo", "GetLastLapTimeValue");

	Params::UnionRaceLapInfo_GetLastLapTimeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MinuteValue != nullptr)
		*MinuteValue = Parms.MinuteValue;

	if (SecondValue != nullptr)
		*SecondValue = Parms.SecondValue;

	if (MilliSecondValue != nullptr)
		*MilliSecondValue = Parms.MilliSecondValue;
}


// Function UnionRun.UnionRaceUI.AddAttackItemObject_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::AddAttackItemObject_Implementation(class UObject* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "AddAttackItemObject_Implementation");

	Params::UnionRaceUI_AddAttackItemObject_Implementation Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.ChangePlayerConntrollerForPauseMenu
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::ChangePlayerConntrollerForPauseMenu(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "ChangePlayerConntrollerForPauseMenu");

	Params::UnionRaceUI_ChangePlayerConntrollerForPauseMenu Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.DbgDrawTeamGaugeData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::DbgDrawTeamGaugeData(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "DbgDrawTeamGaugeData");

	Params::UnionRaceUI_DbgDrawTeamGaugeData Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.DbgDrawTeamGaugeRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransChargeRate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalChargeRate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugePercent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsForce                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsBoost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::DbgDrawTeamGaugeRate(int32 PlayerControllerIndex, float TransChargeRate, float LocalChargeRate, float GaugePercent, bool IsForce, bool IsBoost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "DbgDrawTeamGaugeRate");

	Params::UnionRaceUI_DbgDrawTeamGaugeRate Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.TransChargeRate = TransChargeRate;
	Parms.LocalChargeRate = LocalChargeRate;
	Parms.GaugePercent = GaugePercent;
	Parms.IsForce = IsForce;
	Parms.IsBoost = IsBoost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.FireAirTrickInfo_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuccessBonusCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::FireAirTrickInfo_Implementation(int32 PlayerControllerIndex, int32 SuccessCount, int32 SuccessBonusCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "FireAirTrickInfo_Implementation");

	Params::UnionRaceUI_FireAirTrickInfo_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.SuccessCount = SuccessCount;
	Parms.SuccessBonusCount = SuccessBonusCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.FireCourseMapCharaSpin_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::FireCourseMapCharaSpin_Implementation(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "FireCourseMapCharaSpin_Implementation");

	Params::UnionRaceUI_FireCourseMapCharaSpin_Implementation Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.FireInOutAnim
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bin                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                OnAnimationEndEvent                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::FireInOutAnim(bool bin, const TDelegate<void()>& OnAnimationEndEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "FireInOutAnim");

	Params::UnionRaceUI_FireInOutAnim Parms{};

	Parms.bin = bin;
	Parms.OnAnimationEndEvent = OnAnimationEndEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.GetItemHoldCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsMain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUI::GetItemHoldCount(int32 PlayerControllerIndex, bool IsMain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetItemHoldCount");

	Params::UnionRaceUI_GetItemHoldCount Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.IsMain = IsMain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetItemHoldCount_New
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUI::GetItemHoldCount_New(int32 PlayerControllerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetItemHoldCount_New");

	Params::UnionRaceUI_GetItemHoldCount_New Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetItemIconsState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionRaceHUDItemIconsState*            OutState                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::GetItemIconsState(int32 PlayerControllerIndex, EUnionRaceHUDItemIconsState* OutState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetItemIconsState");

	Params::UnionRaceUI_GetItemIconsState Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutState != nullptr)
		*OutState = Parms.OutState;
}


// Function UnionRun.UnionRaceUI.GetItemPackageRingCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsMain                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUI::GetItemPackageRingCount(int32 PlayerControllerIndex, bool IsMain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetItemPackageRingCount");

	Params::UnionRaceUI_GetItemPackageRingCount Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.IsMain = IsMain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetItemPackageRingCount_New
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUI::GetItemPackageRingCount_New(int32 PlayerControllerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetItemPackageRingCount_New");

	Params::UnionRaceUI_GetItemPackageRingCount_New Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetRedStarRings_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRaceUIResultRedStarRings*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceUIResultRedStarRings* UUnionRaceUI::GetRedStarRings_Implementation(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetRedStarRings_Implementation");

	Params::UnionRaceUI_GetRedStarRings_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetReturnDashButtonObject_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionRaceUI::GetReturnDashButtonObject_Implementation(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetReturnDashButtonObject_Implementation");

	Params::UnionRaceUI_GetReturnDashButtonObject_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetStartDashButtonObject_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUnionRaceUI::GetStartDashButtonObject_Implementation(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetStartDashButtonObject_Implementation");

	Params::UnionRaceUI_GetStartDashButtonObject_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetTimeTiralGadgetPresetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUserGadgetPresetData            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUserGadgetPresetData UUnionRaceUI::GetTimeTiralGadgetPresetData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetTimeTiralGadgetPresetData");

	Params::UnionRaceUI_GetTimeTiralGadgetPresetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.GetWarningBeltVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::GetWarningBeltVisible_Implementation(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "GetWarningBeltVisible_Implementation");

	Params::UnionRaceUI_GetWarningBeltVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.HiddenMainRaceUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUI::HiddenMainRaceUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "HiddenMainRaceUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUI.HiddenRaceUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUI::HiddenRaceUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "HiddenRaceUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUI.InitCpp
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUI::InitCpp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "InitCpp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.IsBehindCurrentCamera
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const int32                             PlayerControllerIndex                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   WorldLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsBehindCurrentCamera(const int32 PlayerControllerIndex, const struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsBehindCurrentCamera");

	Params::UnionRaceUI_IsBehindCurrentCamera Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.WorldLocation = std::move(WorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsDebugAimingHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsDebugAimingHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsDebugAimingHidden");

	Params::UnionRaceUI_IsDebugAimingHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsDebugBoostHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsDebugBoostHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsDebugBoostHidden");

	Params::UnionRaceUI_IsDebugBoostHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsDebugGuideButtonHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsDebugGuideButtonHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsDebugGuideButtonHidden");

	Params::UnionRaceUI_IsDebugGuideButtonHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsGhostOnline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsGhostOnline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsGhostOnline");

	Params::UnionRaceUI_IsGhostOnline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsPlayingReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsPlayingReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsPlayingReplay");

	Params::UnionRaceUI_IsPlayingReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsPubCameraPlayRace
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsPubCameraPlayRace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsPubCameraPlayRace");

	Params::UnionRaceUI_IsPubCameraPlayRace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.IsViewGhostReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsViewGhostReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsViewGhostReplay");

	Params::UnionRaceUI_IsViewGhostReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUI.NotifyIrregularInfiniteItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::NotifyIrregularInfiniteItem(int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "NotifyIrregularInfiniteItem");

	Params::UnionRaceUI_NotifyIrregularInfiniteItem Parms{};

	Parms.InRacerIndex = InRacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.OnPackageRingEffectFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APackageRingEffect*               EffectActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::OnPackageRingEffectFinished(class APackageRingEffect* EffectActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "OnPackageRingEffectFinished");

	Params::UnionRaceUI_OnPackageRingEffectFinished Parms{};

	Parms.EffectActor = EffectActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.OnPackageRingEffectSoundStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APackageRingEffect*               EffectActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::OnPackageRingEffectSoundStart(class APackageRingEffect* EffectActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "OnPackageRingEffectSoundStart");

	Params::UnionRaceUI_OnPackageRingEffectSoundStart Parms{};

	Parms.EffectActor = EffectActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.OnReadyBeforeCountDown
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUI::OnReadyBeforeCountDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "OnReadyBeforeCountDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUI.RemoveAttackInfoWidget_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::RemoveAttackInfoWidget_Implementation(class UObject* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "RemoveAttackInfoWidget_Implementation");

	Params::UnionRaceUI_RemoveAttackInfoWidget_Implementation Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetAfterHomingAimTargetedUIVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetAfterHomingAimTargetedUIVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetAfterHomingAimTargetedUIVisible_Implementation");

	Params::UnionRaceUI_SetAfterHomingAimTargetedUIVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetAfterHomingAimUIVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetAfterHomingAimUIVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetAfterHomingAimUIVisible_Implementation");

	Params::UnionRaceUI_SetAfterHomingAimUIVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetAimingUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetAimingUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetAimingUIVisible");

	Params::UnionRaceUI_SetAimingUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetAirTrickUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetAirTrickUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetAirTrickUIVisible");

	Params::UnionRaceUI_SetAirTrickUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetBeforeHomingAimTargetedUIVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetBeforeHomingAimTargetedUIVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetBeforeHomingAimTargetedUIVisible_Implementation");

	Params::UnionRaceUI_SetBeforeHomingAimTargetedUIVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetBeforeHomingAimUIVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetBeforeHomingAimUIVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetBeforeHomingAimUIVisible_Implementation");

	Params::UnionRaceUI_SetBeforeHomingAimUIVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetBoostUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetBoostUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetBoostUIVisible");

	Params::UnionRaceUI_SetBoostUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetCharaHeadUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetCharaHeadUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetCharaHeadUIVisible");

	Params::UnionRaceUI_SetCharaHeadUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetCourseMapCharaSpin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetCourseMapCharaSpin(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetCourseMapCharaSpin");

	Params::UnionRaceUI_SetCourseMapCharaSpin Parms{};

	Parms.RacerIndex = RacerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetCourseMapUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetCourseMapUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetCourseMapUIVisible");

	Params::UnionRaceUI_SetCourseMapUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetDebugAimingHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetDebugAimingHidden(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetDebugAimingHidden");

	Params::UnionRaceUI_SetDebugAimingHidden Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetDebugBoostHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetDebugBoostHidden(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetDebugBoostHidden");

	Params::UnionRaceUI_SetDebugBoostHidden Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetDebugGuideButtonHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetDebugGuideButtonHidden(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetDebugGuideButtonHidden");

	Params::UnionRaceUI_SetDebugGuideButtonHidden Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetDebugItemWarningHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetDebugItemWarningHidden(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetDebugItemWarningHidden");

	Params::UnionRaceUI_SetDebugItemWarningHidden Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetGadgetIconUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetGadgetIconUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetGadgetIconUIVisible");

	Params::UnionRaceUI_SetGadgetIconUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetGuideButtonUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetGuideButtonUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetGuideButtonUIVisible");

	Params::UnionRaceUI_SetGuideButtonUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetHitInfoUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetHitInfoUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetHitInfoUIVisible");

	Params::UnionRaceUI_SetHitInfoUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetItemIconsState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EUnionRaceHUDItemIconsState&      InState                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetItemIconsState(int32 PlayerControllerIndex, const EUnionRaceHUDItemIconsState& InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetItemIconsState");

	Params::UnionRaceUI_SetItemIconsState Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetItemIconUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlagOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetItemIconUIVisible(bool bVisible, int32 PlayerControllerIndex, bool bFlagOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetItemIconUIVisible");

	Params::UnionRaceUI_SetItemIconUIVisible Parms{};

	Parms.bVisible = bVisible;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bFlagOnly = bFlagOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetItemIconUIVisibleAll
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetItemIconUIVisibleAll(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetItemIconUIVisibleAll");

	Params::UnionRaceUI_SetItemIconUIVisibleAll Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetItemWarningUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetItemWarningUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetItemWarningUIVisible");

	Params::UnionRaceUI_SetItemWarningUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetLapUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetLapUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetLapUIVisible");

	Params::UnionRaceUI_SetLapUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetRaceMinimapRef_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRaceMinimap*                InRaceMinimap                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRaceMinimapRef_Implementation(class UUnionRaceMinimap* InRaceMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRaceMinimapRef_Implementation");

	Params::UnionRaceUI_SetRaceMinimapRef_Implementation Parms{};

	Parms.InRaceMinimap = InRaceMinimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetRacerApproachInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class URaceUISubApproachWarning*>&ApproachInfo                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRacerApproachInfo(int32 PlayerControllerIndex, const TArray<class URaceUISubApproachWarning*>& ApproachInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRacerApproachInfo");

	Params::UnionRaceUI_SetRacerApproachInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ApproachInfo = std::move(ApproachInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetRacerIndex_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocalPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRacerIndex_Implementation(int32 PlayerControllerIndex, int32 InRacerIndex, bool IsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRacerIndex_Implementation");

	Params::UnionRaceUI_SetRacerIndex_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InRacerIndex = InRacerIndex;
	Parms.IsLocalPlayer = IsLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetRaceUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRaceUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRaceUIVisible");

	Params::UnionRaceUI_SetRaceUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetRankUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRankUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRankUIVisible");

	Params::UnionRaceUI_SetRankUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetRedStarRingUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRedStarRingUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRedStarRingUIVisible");

	Params::UnionRaceUI_SetRedStarRingUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetReturnDashSetting_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Pivot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetReturnDashSetting_Implementation(int32 PlayerControllerIndex, float Pivot, float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetReturnDashSetting_Implementation");

	Params::UnionRaceUI_SetReturnDashSetting_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Pivot = Pivot;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetReturnDashUIGaugeRate_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetReturnDashUIGaugeRate_Implementation(int32 PlayerControllerIndex, float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetReturnDashUIGaugeRate_Implementation");

	Params::UnionRaceUI_SetReturnDashUIGaugeRate_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetReturnDashUIVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetReturnDashUIVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetReturnDashUIVisible_Implementation");

	Params::UnionRaceUI_SetReturnDashUIVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetReturnDashUIVisibleWithAnim_Implementation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetReturnDashUIVisibleWithAnim_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetReturnDashUIVisibleWithAnim_Implementation");

	Params::UnionRaceUI_SetReturnDashUIVisibleWithAnim_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetRingUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRingUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRingUIVisible");

	Params::UnionRaceUI_SetRingUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetRivalStartUI_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRacerStatusObject*          RivalStatusObj                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetRivalStartUI_Implementation(int32 PlayerControllerIndex, class UUnionRacerStatusObject* RivalStatusObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetRivalStartUI_Implementation");

	Params::UnionRaceUI_SetRivalStartUI_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RivalStatusObj = RivalStatusObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetSpeedNumUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetSpeedNumUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetSpeedNumUIVisible");

	Params::UnionRaceUI_SetSpeedNumUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetStartDashButtonUIVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             PlayerControllerIndex                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bVisible                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetStartDashButtonUIVisible(const int32 PlayerControllerIndex, const bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetStartDashButtonUIVisible");

	Params::UnionRaceUI_SetStartDashButtonUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetStartDashParamSetting_Implementation
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionRaceStartDashParam&  InStartDashParam                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetStartDashParamSetting_Implementation(int32 PlayerControllerIndex, const struct FUnionRaceStartDashParam& InStartDashParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetStartDashParamSetting_Implementation");

	Params::UnionRaceUI_SetStartDashParamSetting_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InStartDashParam = std::move(InStartDashParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetStartUIGaugeRate_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetStartUIGaugeRate_Implementation(int32 PlayerControllerIndex, float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetStartUIGaugeRate_Implementation");

	Params::UnionRaceUI_SetStartUIGaugeRate_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.SetTeamRankUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetTeamRankUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetTeamRankUIVisible");

	Params::UnionRaceUI_SetTeamRankUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetTextBalloonUIVisible
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetTextBalloonUIVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetTextBalloonUIVisible");

	Params::UnionRaceUI_SetTextBalloonUIVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.SetWarningBeltVisible_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::SetWarningBeltVisible_Implementation(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "SetWarningBeltVisible_Implementation");

	Params::UnionRaceUI_SetWarningBeltVisible_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateAttackInfoPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InAttackWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          InHUDWarningArea                                       (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPosRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateAttackInfoPosition(class UUserWidget* InAttackWidget, class UWidget* InHUDWarningArea, float InPosRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateAttackInfoPosition");

	Params::UnionRaceUI_UpdateAttackInfoPosition Parms{};

	Parms.InAttackWidget = InAttackWidget;
	Parms.InHUDWarningArea = InHUDWarningArea;
	Parms.InPosRate = InPosRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateByHoldItemInfo_Implementation
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHoldItemInfo&             InItemInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateByHoldItemInfo_Implementation(int32 PlayerControllerIndex, const struct FHoldItemInfo& InItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateByHoldItemInfo_Implementation");

	Params::UnionRaceUI_UpdateByHoldItemInfo_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemInfo = std::move(InItemInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateByRacers_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacers*                     InRacers                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateByRacers_Implementation(class UUnionRacers* InRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateByRacers_Implementation");

	Params::UnionRaceUI_UpdateByRacers_Implementation Parms{};

	Parms.InRacers = InRacers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateHomingAimLocation_Implementation
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   AimLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateHomingAimLocation_Implementation(int32 PlayerControllerIndex, const struct FVector& AimLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateHomingAimLocation_Implementation");

	Params::UnionRaceUI_UpdateHomingAimLocation_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.AimLocation = std::move(AimLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateHomingAimTargetedLocation_Implementation
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PlayerLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateHomingAimTargetedLocation_Implementation(int32 PlayerControllerIndex, const struct FVector& PlayerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateHomingAimTargetedLocation_Implementation");

	Params::UnionRaceUI_UpdateHomingAimTargetedLocation_Implementation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.PlayerLocation = std::move(PlayerLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateIrregularInfiniteItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateIrregularInfiniteItem(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateIrregularInfiniteItem");

	Params::UnionRaceUI_UpdateIrregularInfiniteItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.UpdateIsComSetting
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsCom                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateIsComSetting(int32 PlayerControllerIndex, bool IsCom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateIsComSetting");

	Params::UnionRaceUI_UpdateIsComSetting Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.IsCom = IsCom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUI.UpdateMinimapIconByRacers_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacers*                     InRacers                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateMinimapIconByRacers_Implementation(class UUnionRacers* InRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateMinimapIconByRacers_Implementation");

	Params::UnionRaceUI_UpdateMinimapIconByRacers_Implementation Parms{};

	Parms.InRacers = InRacers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateRaceHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUI::UpdateRaceHUD(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateRaceHUD");

	Params::UnionRaceUI_UpdateRaceHUD Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUI.UpdateReturnDashButton
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUI::UpdateReturnDashButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateReturnDashButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUI.UpdateStartDashButton
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUI::UpdateStartDashButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "UpdateStartDashButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUI.IsLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUI::IsLocalPlayer(int32 PlayerControllerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUI", "IsLocalPlayer");

	Params::UnionRaceUI_IsLocalPlayer Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.CalcItemCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERaceItemCategory                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERaceItemCategory UUnionRaceUIBPFL::CalcItemCategory(const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "CalcItemCategory");

	Params::UnionRaceUIBPFL_CalcItemCategory Parms{};

	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.GetAnchorSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetAnchorSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetAnchorSettings");

	Params::UnionRaceUIBPFL_GetAnchorSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetAttackItemDistSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EUnionAttackItemInfoType&         Type                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8&                            InId                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetAttackItemDistSettings(const EUnionAttackItemInfoType& Type, const uint8& InId, float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetAttackItemDistSettings");

	Params::UnionRaceUIBPFL_GetAttackItemDistSettings Parms{};

	Parms.Type = Type;
	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetBlackBombSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetBlackBombSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetBlackBombSettings");

	Params::UnionRaceUIBPFL_GetBlackBombSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetBodyCutSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetBodyCutSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetBodyCutSettings");

	Params::UnionRaceUIBPFL_GetBodyCutSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetDarkChaoSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetDarkChaoSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetDarkChaoSettings");

	Params::UnionRaceUIBPFL_GetDarkChaoSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetHomingPunchSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetHomingPunchSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetHomingPunchSettings");

	Params::UnionRaceUIBPFL_GetHomingPunchSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetKingBoomBooSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetKingBoomBooSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetKingBoomBooSettings");

	Params::UnionRaceUIBPFL_GetKingBoomBooSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetMonsterTruckSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetMonsterTruckSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetMonsterTruckSettings");

	Params::UnionRaceUIBPFL_GetMonsterTruckSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetRacerApproachSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetRacerApproachSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetRacerApproachSettings");

	Params::UnionRaceUIBPFL_GetRacerApproachSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetRocketPunchSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetRocketPunchSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetRocketPunchSettings");

	Params::UnionRaceUIBPFL_GetRocketPunchSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetSelectorLabelByDriverId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EDriverId                         InDriverId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutLabel                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIBPFL::GetSelectorLabelByDriverId(const EDriverId InDriverId, class FString* OutLabel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetSelectorLabelByDriverId");

	Params::UnionRaceUIBPFL_GetSelectorLabelByDriverId Parms{};

	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLabel != nullptr)
		*OutLabel = std::move(Parms.OutLabel);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.GetSlicerSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetSlicerSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetSlicerSettings");

	Params::UnionRaceUIBPFL_GetSlicerSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetSlimeSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetSlimeSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetSlimeSettings");

	Params::UnionRaceUIBPFL_GetSlimeSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetSplashSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetSplashSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetSplashSettings");

	Params::UnionRaceUIBPFL_GetSplashSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetT_RexSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetT_RexSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetT_RexSettings");

	Params::UnionRaceUIBPFL_GetT_RexSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.GetYellowDrillSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float*                                  Dist1                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist2                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Dist3                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  DisableDist                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::GetYellowDrillSettings(float* Dist1, float* Dist2, float* Dist3, float* DisableDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "GetYellowDrillSettings");

	Params::UnionRaceUIBPFL_GetYellowDrillSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Dist1 != nullptr)
		*Dist1 = Parms.Dist1;

	if (Dist2 != nullptr)
		*Dist2 = Parms.Dist2;

	if (Dist3 != nullptr)
		*Dist3 = Parms.Dist3;

	if (DisableDist != nullptr)
		*DisableDist = Parms.DisableDist;
}


// Function UnionRun.UnionRaceUIBPFL.HiddenRaceHUD
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionRaceUIBPFL::HiddenRaceHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "HiddenRaceHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.IsAttackWarningItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIBPFL::IsAttackWarningItem(const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "IsAttackWarningItem");

	Params::UnionRaceUIBPFL_IsAttackWarningItem Parms{};

	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.IsDebugAimingHidden
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIBPFL::IsDebugAimingHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "IsDebugAimingHidden");

	Params::UnionRaceUIBPFL_IsDebugAimingHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.IsIgnoreAttackWarningItemUseForBack
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIBPFL::IsIgnoreAttackWarningItemUseForBack(const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "IsIgnoreAttackWarningItemUseForBack");

	Params::UnionRaceUIBPFL_IsIgnoreAttackWarningItemUseForBack Parms{};

	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.IsRareItemBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIBPFL::IsRareItemBP(const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "IsRareItemBP");

	Params::UnionRaceUIBPFL_IsRareItemBP Parms{};

	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIBPFL.SetAimingHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetAimingHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetAimingHUDVisible");

	Params::UnionRaceUIBPFL_SetAimingHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetAirTrickHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetAirTrickHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetAirTrickHUDVisible");

	Params::UnionRaceUIBPFL_SetAirTrickHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetBoostHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetBoostHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetBoostHUDVisible");

	Params::UnionRaceUIBPFL_SetBoostHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetCharaHeadHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetCharaHeadHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetCharaHeadHUDVisible");

	Params::UnionRaceUIBPFL_SetCharaHeadHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetCourseMapHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetCourseMapHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetCourseMapHUDVisible");

	Params::UnionRaceUIBPFL_SetCourseMapHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetDebugRaceHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetDebugRaceHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetDebugRaceHUDVisible");

	Params::UnionRaceUIBPFL_SetDebugRaceHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetGadgetIconHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetGadgetIconHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetGadgetIconHUDVisible");

	Params::UnionRaceUIBPFL_SetGadgetIconHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetGuideButtonHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetGuideButtonHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetGuideButtonHUDVisible");

	Params::UnionRaceUIBPFL_SetGuideButtonHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetHitInfoHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetHitInfoHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetHitInfoHUDVisible");

	Params::UnionRaceUIBPFL_SetHitInfoHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetItemIconHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlagOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetItemIconHUDVisible(bool bVisible, int32 PlayerControllerIndex, bool bFlagOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetItemIconHUDVisible");

	Params::UnionRaceUIBPFL_SetItemIconHUDVisible Parms{};

	Parms.bVisible = bVisible;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bFlagOnly = bFlagOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetItemIconHUDVisibleAll
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetItemIconHUDVisibleAll(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetItemIconHUDVisibleAll");

	Params::UnionRaceUIBPFL_SetItemIconHUDVisibleAll Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetItemWarningHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetItemWarningHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetItemWarningHUDVisible");

	Params::UnionRaceUIBPFL_SetItemWarningHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetLapHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetLapHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetLapHUDVisible");

	Params::UnionRaceUIBPFL_SetLapHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetRaceHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetRaceHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetRaceHUDVisible");

	Params::UnionRaceUIBPFL_SetRaceHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetRankHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetRankHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetRankHUDVisible");

	Params::UnionRaceUIBPFL_SetRankHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetRedStarRingHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetRedStarRingHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetRedStarRingHUDVisible");

	Params::UnionRaceUIBPFL_SetRedStarRingHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetRingHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetRingHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetRingHUDVisible");

	Params::UnionRaceUIBPFL_SetRingHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetSpeedNumHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetSpeedNumHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetSpeedNumHUDVisible");

	Params::UnionRaceUIBPFL_SetSpeedNumHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetTeamRankHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetTeamRankHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetTeamRankHUDVisible");

	Params::UnionRaceUIBPFL_SetTeamRankHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIBPFL.SetTextBalloonHUDVisible
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIBPFL::SetTextBalloonHUDVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIBPFL", "SetTextBalloonHUDVisible");

	Params::UnionRaceUIBPFL_SetTextBalloonHUDVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIFestaReward.DestroyFestaResultData
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIFestaReward::DestroyFestaResultData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "DestroyFestaResultData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIFestaReward.GetEMachineId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMachineId                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMachineId UUnionRaceUIFestaReward::GetEMachineId(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "GetEMachineId");

	Params::UnionRaceUIFestaReward_GetEMachineId Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIFestaReward.GetRacerContributionList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InPlayerRacerIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFestaRacerContribution>* OutFestaRacerContribution                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRaceUIFestaReward::GetRacerContributionList(int32 InPlayerRacerIndex, TArray<struct FFestaRacerContribution>* OutFestaRacerContribution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "GetRacerContributionList");

	Params::UnionRaceUIFestaReward_GetRacerContributionList Parms{};

	Parms.InPlayerRacerIndex = InPlayerRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFestaRacerContribution != nullptr)
		*OutFestaRacerContribution = std::move(Parms.OutFestaRacerContribution);
}


// Function UnionRun.UnionRaceUIFestaReward.GetUpdatePoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FFestaPointRewardUIData>&RewardDataArray                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StartIconCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NowPoint                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Add                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutIconWindowX                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutGagePosi                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutGetRewardIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIFestaReward::GetUpdatePoint(const TArray<struct FFestaPointRewardUIData>& RewardDataArray, int32 StartIconCount, int32 NowPoint, int32 Add, float* OutIconWindowX, float* OutGagePosi, int32* OutGetRewardIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "GetUpdatePoint");

	Params::UnionRaceUIFestaReward_GetUpdatePoint Parms{};

	Parms.RewardDataArray = std::move(RewardDataArray);
	Parms.StartIconCount = StartIconCount;
	Parms.NowPoint = NowPoint;
	Parms.Add = Add;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIconWindowX != nullptr)
		*OutIconWindowX = Parms.OutIconWindowX;

	if (OutGagePosi != nullptr)
		*OutGagePosi = Parms.OutGagePosi;

	if (OutGetRewardIndex != nullptr)
		*OutGetRewardIndex = Parms.OutGetRewardIndex;
}


// Function UnionRun.UnionRaceUIFestaReward.SetupCameraPlayerZoom
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIFestaReward::SetupCameraPlayerZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "SetupCameraPlayerZoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIFestaReward.SetupViewBg
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InCameraLocation                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  CameraRotation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsLightSpawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACameraActor*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACameraActor* UUnionRaceUIFestaReward::SetupViewBg(const struct FVector& InCameraLocation, const struct FRotator& CameraRotation, bool bIsLightSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIFestaReward", "SetupViewBg");

	Params::UnionRaceUIFestaReward_SetupViewBg Parms{};

	Parms.InCameraLocation = std::move(InCameraLocation);
	Parms.CameraRotation = std::move(CameraRotation);
	Parms.bIsLightSpawn = bIsLightSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultLine.ApplyWaitingAddPoint
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::ApplyWaitingAddPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "ApplyWaitingAddPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayAddBonus
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayAddBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayAddBonus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayBonusPoint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      BonusName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FText&                      BonusNum                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::PlayBonusPoint(const class FText& BonusName, const class FText& BonusNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayBonusPoint");

	Params::UnionRaceUIResultLine_PlayBonusPoint Parms{};

	Parms.BonusName = std::move(BonusName);
	Parms.BonusNum = std::move(BonusNum);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.PlayBonusPointClose
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayBonusPointClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayBonusPointClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayCheckMatchPoint
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TotalPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::PlayCheckMatchPoint(int32 TotalPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayCheckMatchPoint");

	Params::UnionRaceUIResultLine_PlayCheckMatchPoint Parms{};

	Parms.TotalPoint = TotalPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.PlayGetAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayGetAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayGetAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayLoop1st
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayLoop1st()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayLoop1st");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayPlayerEffect
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayPlayerEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayPlayerEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.PlayTotalPoint_Loop_After2nd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::PlayTotalPoint_Loop_After2nd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "PlayTotalPoint_Loop_After2nd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.SetArrowIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ArrowIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetArrowIndex(int32 ArrowIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetArrowIndex");

	Params::UnionRaceUIResultLine_SetArrowIndex Parms{};

	Parms.ArrowIndex = ArrowIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetBeforeTotalPointValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BeforeTotalPoint                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetBeforeTotalPointValue(int32 BeforeTotalPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetBeforeTotalPointValue");

	Params::UnionRaceUIResultLine_SetBeforeTotalPointValue Parms{};

	Parms.BeforeTotalPoint = BeforeTotalPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetCharacterId
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDriverId                               CharaId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetCharacterId(EDriverId CharaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetCharacterId");

	Params::UnionRaceUIResultLine_SetCharacterId Parms{};

	Parms.CharaId = CharaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetEarnPointValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EarnPoint                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetEarnPointValue(int32 EarnPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetEarnPointValue");

	Params::UnionRaceUIResultLine_SetEarnPointValue Parms{};

	Parms.EarnPoint = EarnPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetLapTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetLapTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetLapTime");

	Params::UnionRaceUIResultLine_SetLapTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetLapTimePlus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetLapTimePlus(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetLapTimePlus");

	Params::UnionRaceUIResultLine_SetLapTimePlus Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetPlayerIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetPlayerIndex(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetPlayerIndex");

	Params::UnionRaceUIResultLine_SetPlayerIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetRacerIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetRacerIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetRacerIndex");

	Params::UnionRaceUIResultLine_SetRacerIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetRacerName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      RacerName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetRacerName(const class FText& RacerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetRacerName");

	Params::UnionRaceUIResultLine_SetRacerName Parms{};

	Parms.RacerName = std::move(RacerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetRankIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RankIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCheckCrown                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetRankIndex(int32 RankIndex, bool bIsCheckCrown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetRankIndex");

	Params::UnionRaceUIResultLine_SetRankIndex Parms{};

	Parms.RankIndex = RankIndex;
	Parms.bIsCheckCrown = bIsCheckCrown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultLine.SetRankMatchMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultLine::SetRankMatchMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetRankMatchMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultLine.SetTotalPointValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TotalPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultLine::SetTotalPointValue(int32 TotalPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultLine", "SetTotalPointValue");

	Params::UnionRaceUIResultLine_SetTotalPointValue Parms{};

	Parms.TotalPoint = TotalPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIGroupResultLine.SetGroupIndex
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InGroupIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIGroupResultLine::SetGroupIndex(int32 InGroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultLine", "SetGroupIndex");

	Params::UnionRaceUIGroupResultLine_SetGroupIndex Parms{};

	Parms.InGroupIndex = InGroupIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetFestaBonusByRacerIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUIGroupResultScene::GetFestaBonusByRacerIndex(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIGroupResultScene", "GetFestaBonusByRacerIndex");

	Params::UnionRaceUIGroupResultScene_GetFestaBonusByRacerIndex Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetFestaBonusByTeamIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   TeamIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUIGroupResultScene::GetFestaBonusByTeamIndex(int32 TeamIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIGroupResultScene", "GetFestaBonusByTeamIndex");

	Params::UnionRaceUIGroupResultScene_GetFestaBonusByTeamIndex Parms{};

	Parms.TeamIndex = TeamIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetFestaBonusType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGroupBonusType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGroupBonusType UUnionRaceUIGroupResultScene::GetFestaBonusType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIGroupResultScene", "GetFestaBonusType");

	Params::UnionRaceUIGroupResultScene_GetFestaBonusType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetFestaResultInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    TeamPointList                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFestaResultInfo*                OutInfo                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   InPlayerRacerIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERaceSettingGrouping                    RaceSettingGrouping                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIGroupResultScene::GetFestaResultInfo(const TArray<int32>& TeamPointList, struct FFestaResultInfo* OutInfo, int32 InPlayerRacerIndex, ERaceSettingGrouping RaceSettingGrouping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIGroupResultScene", "GetFestaResultInfo");

	Params::UnionRaceUIGroupResultScene_GetFestaResultInfo Parms{};

	Parms.TeamPointList = std::move(TeamPointList);
	Parms.InPlayerRacerIndex = InPlayerRacerIndex;
	Parms.RaceSettingGrouping = RaceSettingGrouping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutInfo != nullptr)
		*OutInfo = std::move(Parms.OutInfo);
}


// Function UnionRun.UnionRaceUIGroupResultScene.CalcLinesPanelVisibleByRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIGroupResultScene::CalcLinesPanelVisibleByRacerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "CalcLinesPanelVisibleByRacerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetGroupRaceRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGroupRaceRule                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGroupRaceRule UUnionRaceUIGroupResultScene::GetGroupRaceRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "GetGroupRaceRule");

	Params::UnionRaceUIGroupResultScene_GetGroupRaceRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIGroupResultScene.GetResultLinesPanel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UUnionRaceUIResultPanel*>  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UUnionRaceUIResultPanel*> UUnionRaceUIGroupResultScene::GetResultLinesPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "GetResultLinesPanel");

	Params::UnionRaceUIGroupResultScene_GetResultLinesPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIGroupResultScene.PlayLinesPanelAddMoveAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIGroupResultScene::PlayLinesPanelAddMoveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "PlayLinesPanelAddMoveAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIGroupResultScene.PlayLinesPanelInAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIGroupResultScene::PlayLinesPanelInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "PlayLinesPanelInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIGroupResultScene.PlayLinesPanelOutAnimByRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIGroupResultScene::PlayLinesPanelOutAnimByRacerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "PlayLinesPanelOutAnimByRacerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIGroupResultScene.PlayLinesPanelTotalInAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIGroupResultScene::PlayLinesPanelTotalInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "PlayLinesPanelTotalInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIGroupResultScene.SetLinesPanelRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIGroupResultScene::SetLinesPanelRacerCount(int32 RacerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIGroupResultScene", "SetLinesPanelRacerCount");

	Params::UnionRaceUIGroupResultScene_SetLinesPanelRacerCount Parms{};

	Parms.RacerCount = RacerCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIInterface.AddAttackItemObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::AddAttackItemObject(class UObject* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "AddAttackItemObject");

	Params::UnionRaceUIInterface_AddAttackItemObject Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.AddCourseMapActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::AddCourseMapActor(class AActor* InAttackItem, EItemId InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "AddCourseMapActor");

	Params::UnionRaceUIInterface_AddCourseMapActor Parms{};

	Parms.InAttackItem = InAttackItem;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.AddToHUDAttackInfoWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class URaceUISubApproachWarning*>&InAttackWidget                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const EUnionAttackItemInfoType&         InItemType                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8&                            InId                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::AddToHUDAttackInfoWidget(const TArray<class URaceUISubApproachWarning*>& InAttackWidget, const EUnionAttackItemInfoType& InItemType, const uint8& InId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "AddToHUDAttackInfoWidget");

	Params::UnionRaceUIInterface_AddToHUDAttackInfoWidget Parms{};

	Parms.InAttackWidget = std::move(InAttackWidget);
	Parms.InItemType = InItemType;
	Parms.InId = InId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.AfterFireManualAimingUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::AfterFireManualAimingUI(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "AfterFireManualAimingUI");

	Params::UnionRaceUIInterface_AfterFireManualAimingUI Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.ApplyBoost
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::ApplyBoost(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "ApplyBoost");

	Params::UnionRaceUIInterface_ApplyBoost Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.ApplyJustBoost
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::ApplyJustBoost(int32 PlayerControllerIndex, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "ApplyJustBoost");

	Params::UnionRaceUIInterface_ApplyJustBoost Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.ChangeRingBoostGaugeToBoost
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::ChangeRingBoostGaugeToBoost(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "ChangeRingBoostGaugeToBoost");

	Params::UnionRaceUIInterface_ChangeRingBoostGaugeToBoost Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.ChangeRingBoostGaugeToNormal
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::ChangeRingBoostGaugeToNormal(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "ChangeRingBoostGaugeToNormal");

	Params::UnionRaceUIInterface_ChangeRingBoostGaugeToNormal Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.CloseSerifWindow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionRaceUIInterface::CloseSerifWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "CloseSerifWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DecideLotteryItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DecideLotteryItem(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, int32 InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DecideLotteryItem");

	Params::UnionRaceUIInterface_DecideLotteryItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOffControlGuideFlight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOffControlGuideFlight(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOffControlGuideFlight");

	Params::UnionRaceUIInterface_DispOffControlGuideFlight Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOffControlItemUse
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOffControlItemUse(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOffControlItemUse");

	Params::UnionRaceUIInterface_DispOffControlItemUse Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOffControlReleaseItemEffect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOffControlReleaseItemEffect(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOffControlReleaseItemEffect");

	Params::UnionRaceUIInterface_DispOffControlReleaseItemEffect Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOffRaceActionTutorial
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOffRaceActionTutorial(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOffRaceActionTutorial");

	Params::UnionRaceUIInterface_DispOffRaceActionTutorial Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOnControlGuideFlight
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuggestUpInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOnControlGuideFlight(int32 PlayerControllerIndex, bool bSuggestUpInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOnControlGuideFlight");

	Params::UnionRaceUIInterface_DispOnControlGuideFlight Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bSuggestUpInput = bSuggestUpInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOnControlItemUse
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFever                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOnControlItemUse(int32 PlayerControllerIndex, EItemId ItemId, bool bIsFever)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOnControlItemUse");

	Params::UnionRaceUIInterface_DispOnControlItemUse Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemId = ItemId;
	Parms.bIsFever = bIsFever;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOnControlReleaseItemEffect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemId                                 ItemId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOnControlReleaseItemEffect(int32 PlayerControllerIndex, EItemId ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOnControlReleaseItemEffect");

	Params::UnionRaceUIInterface_DispOnControlReleaseItemEffect Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOnInterimReport
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOnInterimReport(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOnInterimReport");

	Params::UnionRaceUIInterface_DispOnInterimReport Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.DispOnRaceActionTutorial
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialAction                         tutorialAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::DispOnRaceActionTutorial(int32 PlayerControllerIndex, ETutorialAction tutorialAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "DispOnRaceActionTutorial");

	Params::UnionRaceUIInterface_DispOnRaceActionTutorial Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.tutorialAction = tutorialAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireAirTrickInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuccessCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SuccessBonusCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireAirTrickInfo(int32 PlayerControllerIndex, int32 SuccessCount, int32 SuccessBonusCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireAirTrickInfo");

	Params::UnionRaceUIInterface_FireAirTrickInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.SuccessCount = SuccessCount;
	Parms.SuccessBonusCount = SuccessBonusCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireAttackInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttackedByPlayerControllerIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireAttackInfo(int32 PlayerControllerIndex, int32 InItemId, int32 AttackedByPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireAttackInfo");

	Params::UnionRaceUIInterface_FireAttackInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemId = InItemId;
	Parms.AttackedByPlayerControllerIndex = AttackedByPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireAttackItemHitInfo
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttackedByPlayerControllerIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const uint8&                            InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRacerStatusObject*          AttackToRacerStatusObject                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireAttackItemHitInfo(int32 AttackedByPlayerControllerIndex, const uint8& InItemId, class UUnionRacerStatusObject* AttackToRacerStatusObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireAttackItemHitInfo");

	Params::UnionRaceUIInterface_FireAttackItemHitInfo Parms{};

	Parms.AttackedByPlayerControllerIndex = AttackedByPlayerControllerIndex;
	Parms.InItemId = InItemId;
	Parms.AttackToRacerStatusObject = AttackToRacerStatusObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireAttackItemHitInfo_New
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFireAttackItemInfo&       Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireAttackItemHitInfo_New(const struct FFireAttackItemInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireAttackItemHitInfo_New");

	Params::UnionRaceUIInterface_FireAttackItemHitInfo_New Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireCourseMapCharaSpin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireCourseMapCharaSpin(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireCourseMapCharaSpin");

	Params::UnionRaceUIInterface_FireCourseMapCharaSpin Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireFinishText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireFinishText(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireFinishText");

	Params::UnionRaceUIInterface_FireFinishText Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireInAnimStartUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionRaceUIInterface::FireInAnimStartUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireInAnimStartUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireItemHitInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AttackToPlayerControllerIndex                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireItemHitInfo(int32 PlayerControllerIndex, int32 InItemId, int32 AttackToPlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireItemHitInfo");

	Params::UnionRaceUIInterface_FireItemHitInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemId = InItemId;
	Parms.AttackToPlayerControllerIndex = AttackToPlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireLotteryItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSilent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireLotteryItem(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, bool bIsSilent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireLotteryItem");

	Params::UnionRaceUIInterface_FireLotteryItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.bIsSilent = bIsSilent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.FireStartText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::FireStartText(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "FireStartText");

	Params::UnionRaceUIInterface_FireStartText Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.GetAimingUIBaseScale
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IUnionRaceUIInterface::GetAimingUIBaseScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetAimingUIBaseScale");

	Params::UnionRaceUIInterface_GetAimingUIBaseScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.GetCourseMapDomainNumber
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDomainNumber                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDomainNumber IUnionRaceUIInterface::GetCourseMapDomainNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetCourseMapDomainNumber");

	Params::UnionRaceUIInterface_GetCourseMapDomainNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.GetRedStarRings
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRaceUIResultRedStarRings*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceUIResultRedStarRings* IUnionRaceUIInterface::GetRedStarRings(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetRedStarRings");

	Params::UnionRaceUIInterface_GetRedStarRings Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.GetReturnDashButtonObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IUnionRaceUIInterface::GetReturnDashButtonObject(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetReturnDashButtonObject");

	Params::UnionRaceUIInterface_GetReturnDashButtonObject Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.GetStartDashButtonObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IUnionRaceUIInterface::GetStartDashButtonObject(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetStartDashButtonObject");

	Params::UnionRaceUIInterface_GetStartDashButtonObject Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.GetWarningBeltVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionRaceUIInterface::GetWarningBeltVisible(int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "GetWarningBeltVisible");

	Params::UnionRaceUIInterface_GetWarningBeltVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIInterface.LockOnManualAimingUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLockOn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::LockOnManualAimingUI(int32 PlayerControllerIndex, bool bIsLockOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "LockOnManualAimingUI");

	Params::UnionRaceUIInterface_LockOnManualAimingUI Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bIsLockOn = bIsLockOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.NotifyItemCountDownBlink
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::NotifyItemCountDownBlink(int32 PlayerControllerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "NotifyItemCountDownBlink");

	Params::UnionRaceUIInterface_NotifyItemCountDownBlink Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.OpenSerifWindow
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScreenIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERacerReactionWindow                    WindowId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      TextId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   DriverId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::OpenSerifWindow(int32 ScreenIndex, ERacerReactionWindow WindowId, const class FText& TextId, int32 DriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "OpenSerifWindow");

	Params::UnionRaceUIInterface_OpenSerifWindow Parms{};

	Parms.ScreenIndex = ScreenIndex;
	Parms.WindowId = WindowId;
	Parms.TextId = std::move(TextId);
	Parms.DriverId = DriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.OpenSerifWindowEx
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScreenIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRacerReactionVoice&       SerifUIData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::OpenSerifWindowEx(int32 ScreenIndex, const struct FRacerReactionVoice& SerifUIData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "OpenSerifWindowEx");

	Params::UnionRaceUIInterface_OpenSerifWindowEx Parms{};

	Parms.ScreenIndex = ScreenIndex;
	Parms.SerifUIData = std::move(SerifUIData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.PlayFestaIndividualChargeEffect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::PlayFestaIndividualChargeEffect(int32 PlayerControllerIndex, int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "PlayFestaIndividualChargeEffect");

	Params::UnionRaceUIInterface_PlayFestaIndividualChargeEffect Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.RaceActionTutorialSuccess
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialAction                         tutorialAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::RaceActionTutorialSuccess(int32 PlayerControllerIndex, ETutorialAction tutorialAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "RaceActionTutorialSuccess");

	Params::UnionRaceUIInterface_RaceActionTutorialSuccess Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.tutorialAction = tutorialAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.RemoveAttackInfoWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::RemoveAttackInfoWidget(class UObject* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "RemoveAttackInfoWidget");

	Params::UnionRaceUIInterface_RemoveAttackInfoWidget Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.RemoveCourseMapActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InAttackItem                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::RemoveCourseMapActor(class AActor* InAttackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "RemoveCourseMapActor");

	Params::UnionRaceUIInterface_RemoveCourseMapActor Parms{};

	Parms.InAttackItem = InAttackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetAfterHomingAimTargetedUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetAfterHomingAimTargetedUIVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetAfterHomingAimTargetedUIVisible");

	Params::UnionRaceUIInterface_SetAfterHomingAimTargetedUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetAfterHomingAimUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetAfterHomingAimUIVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetAfterHomingAimUIVisible");

	Params::UnionRaceUIInterface_SetAfterHomingAimUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetAttackInfoPosition
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URaceUISubApproachWarning*        InAttackWidget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PosRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetAttackInfoPosition(class URaceUISubApproachWarning* InAttackWidget, float PosRate, float Distance, int32 PlayerControllerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetAttackInfoPosition");

	Params::UnionRaceUIInterface_SetAttackInfoPosition Parms{};

	Parms.InAttackWidget = InAttackWidget;
	Parms.PosRate = PosRate;
	Parms.Distance = Distance;
	Parms.PlayerControllerIndex = PlayerControllerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetBeforeHomingAimTargetedUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetBeforeHomingAimTargetedUIVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetBeforeHomingAimTargetedUIVisible");

	Params::UnionRaceUIInterface_SetBeforeHomingAimTargetedUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetBeforeHomingAimUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetBeforeHomingAimUIVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetBeforeHomingAimUIVisible");

	Params::UnionRaceUIInterface_SetBeforeHomingAimUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetCourseSetting
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TSoftObjectPtr<class UObject>&    CourseTexture                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OrthoRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Offset                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetCourseSetting(const TSoftObjectPtr<class UObject>& CourseTexture, float OrthoRate, float Angle, const struct FVector& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetCourseSetting");

	Params::UnionRaceUIInterface_SetCourseSetting Parms{};

	Parms.CourseTexture = CourseTexture;
	Parms.OrthoRate = OrthoRate;
	Parms.Angle = Angle;
	Parms.Offset = std::move(Offset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetEnableRedStarRing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetEnableRedStarRing(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetEnableRedStarRing");

	Params::UnionRaceUIInterface_SetEnableRedStarRing Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetGadgetIconActive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGadgetId                               gadget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetGadgetIconActive(int32 PlayerControllerIndex, EGadgetId gadget, bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetGadgetIconActive");

	Params::UnionRaceUIInterface_SetGadgetIconActive Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.gadget = gadget;
	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetGroupRingNum
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetGroupRingNum(int32 PlayerControllerIndex, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetGroupRingNum");

	Params::UnionRaceUIInterface_SetGroupRingNum Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetIrregular
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetIrregular(int32 PlayerControllerIndex, int32 EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetIrregular");

	Params::UnionRaceUIInterface_SetIrregular Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.EventId = EventId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetIrregularInfiniteItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetIrregularInfiniteItem(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetIrregularInfiniteItem");

	Params::UnionRaceUIInterface_SetIrregularInfiniteItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetItemId
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetItemId(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, int32 InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetItemId");

	Params::UnionRaceUIInterface_SetItemId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetItemLifeTimeRate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetItemLifeTimeRate(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, float NewRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetItemLifeTimeRate");

	Params::UnionRaceUIInterface_SetItemLifeTimeRate Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.NewRate = NewRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetItemPanelActive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetItemPanelActive(int32 PlayerControllerIndex, bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetItemPanelActive");

	Params::UnionRaceUIInterface_SetItemPanelActive Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetItemPanelVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetItemPanelVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetItemPanelVisible");

	Params::UnionRaceUIInterface_SetItemPanelVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetItemRemainCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RemainCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetItemRemainCount(int32 PlayerControllerIndex, EItemInfoType ItemInfoType, float RemainCount, float MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetItemRemainCount");

	Params::UnionRaceUIInterface_SetItemRemainCount Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;
	Parms.RemainCount = RemainCount;
	Parms.MaxCount = MaxCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetManualAimingUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsScaleKeepInHoming                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetManualAimingUIVisible(int32 PlayerControllerIndex, bool bVisible, float Scale, bool IsScaleKeepInHoming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetManualAimingUIVisible");

	Params::UnionRaceUIInterface_SetManualAimingUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;
	Parms.Scale = Scale;
	Parms.IsScaleKeepInHoming = IsScaleKeepInHoming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetMinimapIconItem
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            RacerIndex                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EItemId&                          InItemId                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetMinimapIconItem(const int32& RacerIndex, const EItemId& InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetMinimapIconItem");

	Params::UnionRaceUIInterface_SetMinimapIconItem Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetMinimapIconType
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            RacerIndex                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EMinimapIconType&                 InMinimapIconType                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetMinimapIconType(const int32& RacerIndex, const EMinimapIconType& InMinimapIconType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetMinimapIconType");

	Params::UnionRaceUIInterface_SetMinimapIconType Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.InMinimapIconType = InMinimapIconType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetPauseFlag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetPauseFlag(bool bPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetPauseFlag");

	Params::UnionRaceUIInterface_SetPauseFlag Parms{};

	Parms.bPause = bPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetPlayerCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetPlayerCount(int32 PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetPlayerCount");

	Params::UnionRaceUIInterface_SetPlayerCount Parms{};

	Parms.PlayerCount = PlayerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetPlayerName
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScreenIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ScreenPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      Name_0                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetPlayerName(int32 ScreenIndex, int32 PlayerControllerIndex, const struct FVector2D& ScreenPosition, const class FText& Name_0, bool bIsView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetPlayerName");

	Params::UnionRaceUIInterface_SetPlayerName Parms{};

	Parms.ScreenIndex = ScreenIndex;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.Name_0 = std::move(Name_0);
	Parms.bIsView = bIsView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetPlayerNamePosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScreenIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 ScreenPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetPlayerNamePosition(int32 ScreenIndex, int32 PlayerControllerIndex, const struct FVector2D& ScreenPosition, bool bIsView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetPlayerNamePosition");

	Params::UnionRaceUIInterface_SetPlayerNamePosition Parms{};

	Parms.ScreenIndex = ScreenIndex;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.bIsView = bIsView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetPlayerPlatformIcon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ScreenIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECrossplayPlatform                      InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetPlayerPlatformIcon(int32 ScreenIndex, int32 PlayerControllerIndex, ECrossplayPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetPlayerPlatformIcon");

	Params::UnionRaceUIInterface_SetPlayerPlatformIcon Parms{};

	Parms.ScreenIndex = ScreenIndex;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InPlatform = InPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetQuickDriftCharge
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetQuickDriftCharge(int32 PlayerControllerIndex, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetQuickDriftCharge");

	Params::UnionRaceUIInterface_SetQuickDriftCharge Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRaceMinimapRef
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRaceMinimap*                InRaceMinimap                                          (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRaceMinimapRef(class UUnionRaceMinimap* InRaceMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRaceMinimapRef");

	Params::UnionRaceUIInterface_SetRaceMinimapRef Parms{};

	Parms.InRaceMinimap = InRaceMinimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRacerApproachInfoPosition
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PosRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   RankAfterIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               InDriverId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRacerApproachInfoPosition(float PosRate, float Distance, int32 PlayerControllerIndex, uint8 RankAfterIndex, EDriverId InDriverId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRacerApproachInfoPosition");

	Params::UnionRaceUIInterface_SetRacerApproachInfoPosition Parms{};

	Parms.PosRate = PosRate;
	Parms.Distance = Distance;
	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RankAfterIndex = RankAfterIndex;
	Parms.InDriverId = InDriverId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRacerApproachInfoVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   RankAfterIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRacerApproachInfoVisible(int32 PlayerControllerIndex, uint8 RankAfterIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRacerApproachInfoVisible");

	Params::UnionRaceUIInterface_SetRacerApproachInfoVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RankAfterIndex = RankAfterIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRacerIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRacerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocalPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRacerIndex(int32 PlayerControllerIndex, int32 InRacerIndex, bool IsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRacerIndex");

	Params::UnionRaceUIInterface_SetRacerIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InRacerIndex = InRacerIndex;
	Parms.IsLocalPlayer = IsLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRankIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRankIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRankIndex(int32 PlayerControllerIndex, int32 InRankIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRankIndex");

	Params::UnionRaceUIInterface_SetRankIndex Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InRankIndex = InRankIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRedStarRingDisp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RingIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRedStarRingDisp(int32 PlayerControllerIndex, int32 RingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRedStarRingDisp");

	Params::UnionRaceUIInterface_SetRedStarRingDisp Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RingIndex = RingIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetReturnDashSetting
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Pivot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Range                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetReturnDashSetting(int32 PlayerControllerIndex, float Pivot, float Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetReturnDashSetting");

	Params::UnionRaceUIInterface_SetReturnDashSetting Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Pivot = Pivot;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetReturnDashUIGaugeRate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetReturnDashUIGaugeRate(int32 PlayerControllerIndex, float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetReturnDashUIGaugeRate");

	Params::UnionRaceUIInterface_SetReturnDashUIGaugeRate Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetReturnDashUIVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetReturnDashUIVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetReturnDashUIVisible");

	Params::UnionRaceUIInterface_SetReturnDashUIVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetReturnDashUIVisibleWithAnim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetReturnDashUIVisibleWithAnim(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetReturnDashUIVisibleWithAnim");

	Params::UnionRaceUIInterface_SetReturnDashUIVisibleWithAnim Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRingBoostGaugeBoostPercent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRingBoostGaugeBoostPercent(int32 PlayerControllerIndex, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRingBoostGaugeBoostPercent");

	Params::UnionRaceUIInterface_SetRingBoostGaugeBoostPercent Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRingBoostGaugeNormalPercent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRingBoostGaugeNormalPercent(int32 PlayerControllerIndex, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRingBoostGaugeNormalPercent");

	Params::UnionRaceUIInterface_SetRingBoostGaugeNormalPercent Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRingBoostGaugeNormalPercentDirect
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRingBoostGaugeNormalPercentDirect(int32 PlayerControllerIndex, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRingBoostGaugeNormalPercentDirect");

	Params::UnionRaceUIInterface_SetRingBoostGaugeNormalPercentDirect Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRingGroupColor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsGroup                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsLocalMulti                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRingGroupColor(int32 PlayerControllerIndex, int32 GroupIndex, bool IsGroup, bool IsLocalMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRingGroupColor");

	Params::UnionRaceUIInterface_SetRingGroupColor Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.GroupIndex = GroupIndex;
	Parms.IsGroup = IsGroup;
	Parms.IsLocalMulti = IsLocalMulti;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRingNum
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRingNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRingNum(int32 PlayerControllerIndex, int32 InRingNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRingNum");

	Params::UnionRaceUIInterface_SetRingNum Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InRingNum = InRingNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetRivalStartUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUnionRacerStatusObject*          RivalStatusObj                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetRivalStartUI(int32 PlayerControllerIndex, class UUnionRacerStatusObject* RivalStatusObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetRivalStartUI");

	Params::UnionRaceUIInterface_SetRivalStartUI Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.RivalStatusObj = RivalStatusObj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetStartDashParamSetting
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionRaceStartDashParam&  InStartDashParam                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetStartDashParamSetting(int32 PlayerControllerIndex, const struct FUnionRaceStartDashParam& InStartDashParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetStartDashParamSetting");

	Params::UnionRaceUIInterface_SetStartDashParamSetting Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InStartDashParam = std::move(InStartDashParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetStartUICountText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetStartUICountText(int32 StartCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetStartUICountText");

	Params::UnionRaceUIInterface_SetStartUICountText Parms{};

	Parms.StartCount = StartCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetStartUIGaugeRate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GaugeRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetStartUIGaugeRate(int32 PlayerControllerIndex, float GaugeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetStartUIGaugeRate");

	Params::UnionRaceUIInterface_SetStartUIGaugeRate Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.GaugeRate = GaugeRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetTimeInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMinutes                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSecondes                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMilliSec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetTimeInfo(int32 PlayerControllerIndex, int32 InMinutes, int32 InSecondes, int32 InMilliSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetTimeInfo");

	Params::UnionRaceUIInterface_SetTimeInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InMinutes = InMinutes;
	Parms.InSecondes = InSecondes;
	Parms.InMilliSec = InMilliSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetTimeTrialLapInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLapCountNow                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLapCountMax                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetTimeTrialLapInfo(int32 PlayerControllerIndex, int32 InLapCountNow, int32 InLapCountMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetTimeTrialLapInfo");

	Params::UnionRaceUIInterface_SetTimeTrialLapInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InLapCountNow = InLapCountNow;
	Parms.InLapCountMax = InLapCountMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SettingToHUDAttackInfoWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             PlayerControllerIndex                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class URaceUISubApproachWarning*  InAttackWidget                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SettingToHUDAttackInfoWidget(const int32 PlayerControllerIndex, const class URaceUISubApproachWarning* InAttackWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SettingToHUDAttackInfoWidget");

	Params::UnionRaceUIInterface_SettingToHUDAttackInfoWidget Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InAttackWidget = InAttackWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetVisibilityCharge
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetVisibilityCharge(int32 PlayerControllerIndex, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetVisibilityCharge");

	Params::UnionRaceUIInterface_SetVisibilityCharge Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetVisibilityRank
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Enable                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetVisibilityRank(int32 PlayerControllerIndex, bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetVisibilityRank");

	Params::UnionRaceUIInterface_SetVisibilityRank Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Enable = Enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetWarningBeltVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetWarningBeltVisible(int32 PlayerControllerIndex, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetWarningBeltVisible");

	Params::UnionRaceUIInterface_SetWarningBeltVisible Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetWarningItemId
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetWarningItemId(int32 PlayerControllerIndex, int32 InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetWarningItemId");

	Params::UnionRaceUIInterface_SetWarningItemId Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.SetYellowDrillShortTimeSoundEnable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::SetYellowDrillShortTimeSoundEnable(int32 PlayerControllerIndex, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "SetYellowDrillShortTimeSoundEnable");

	Params::UnionRaceUIInterface_SetYellowDrillShortTimeSoundEnable Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.StopLotteryItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::StopLotteryItem(int32 PlayerControllerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "StopLotteryItem");

	Params::UnionRaceUIInterface_StopLotteryItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateByHoldItemInfo
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHoldItemInfo&             InItemInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateByHoldItemInfo(int32 PlayerControllerIndex, const struct FHoldItemInfo& InItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateByHoldItemInfo");

	Params::UnionRaceUIInterface_UpdateByHoldItemInfo Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemInfo = std::move(InItemInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateByRacers
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRacers*                     InRacers                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateByRacers(class UUnionRacers* InRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateByRacers");

	Params::UnionRaceUIInterface_UpdateByRacers Parms{};

	Parms.InRacers = InRacers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateCharge
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateCharge(int32 PlayerControllerIndex, int32 Level, float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateCharge");

	Params::UnionRaceUIInterface_UpdateCharge Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Level = Level;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateHomingAimLocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   AimLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateHomingAimLocation(int32 PlayerControllerIndex, const struct FVector& AimLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateHomingAimLocation");

	Params::UnionRaceUIInterface_UpdateHomingAimLocation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.AimLocation = std::move(AimLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateHomingAimTargetedLocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   PlayerLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateHomingAimTargetedLocation(int32 PlayerControllerIndex, const struct FVector& PlayerLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateHomingAimTargetedLocation");

	Params::UnionRaceUIInterface_UpdateHomingAimTargetedLocation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.PlayerLocation = std::move(PlayerLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateManualAimingUILocation
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatrix&                   Rotation                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateManualAimingUILocation(int32 PlayerControllerIndex, const struct FVector& Location, const struct FMatrix& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateManualAimingUILocation");

	Params::UnionRaceUIInterface_UpdateManualAimingUILocation Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateMinimapIconByRacers
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRacers*                     InRacers                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateMinimapIconByRacers(class UUnionRacers* InRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateMinimapIconByRacers");

	Params::UnionRaceUIInterface_UpdateMinimapIconByRacers Parms{};

	Parms.InRacers = InRacers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateRank
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChangeAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateRank(int32 PlayerControllerIndex, int32 ChangeAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateRank");

	Params::UnionRaceUIInterface_UpdateRank Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.ChangeAmount = ChangeAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpdateSpeed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SpeedKMPH                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpdateSpeed(int32 PlayerControllerIndex, int32 SpeedKMPH)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpdateSpeed");

	Params::UnionRaceUIInterface_UpdateSpeed Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.SpeedKMPH = SpeedKMPH;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UpgradeItemMain
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UpgradeItemMain(int32 PlayerControllerIndex, int32 InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UpgradeItemMain");

	Params::UnionRaceUIInterface_UpgradeItemMain Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIInterface.UseItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerControllerIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRaceUIInterface::UseItem(int32 PlayerControllerIndex, int32 InItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRaceUIInterface", "UseItem");

	Params::UnionRaceUIInterface_UseItem Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.InItemId = InItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.ApplyWaitingAddPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::ApplyWaitingAddPoint(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "ApplyWaitingAddPoint");

	Params::UnionRaceUIResultPanel_ApplyWaitingAddPoint Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.CloseBonusPoints
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultPanel::CloseBonusPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "CloseBonusPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.GetRankIndexLine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UUnionRaceUIResultLine*>   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UUnionRaceUIResultLine*> UUnionRaceUIResultPanel::GetRankIndexLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "GetRankIndexLine");

	Params::UnionRaceUIResultPanel_GetRankIndexLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultPanel.InitializeBonusPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FMCEventData&              EventData                                              (Parm, NativeAccessSpecifierPublic)
// struct FMCEventBonusData                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMCEventBonusData UUnionRaceUIResultPanel::InitializeBonusPoints(const struct FMCEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "InitializeBonusPoints");

	Params::UnionRaceUIResultPanel_InitializeBonusPoints Parms{};

	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultPanel.InitializeRaceResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsRankMatch                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRaceCountOne                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::InitializeRaceResult(bool bIsRankMatch, bool bIsRaceCountOne)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "InitializeRaceResult");

	Params::UnionRaceUIResultPanel_InitializeRaceResult Parms{};

	Parms.bIsRankMatch = bIsRankMatch;
	Parms.bIsRaceCountOne = bIsRaceCountOne;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.InitializeResultData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsTotalDisp                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::InitializeResultData(bool bIsTotalDisp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "InitializeResultData");

	Params::UnionRaceUIResultPanel_InitializeResultData Parms{};

	Parms.bIsTotalDisp = bIsTotalDisp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.InitializeTotalPoints
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultPanel::InitializeTotalPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "InitializeTotalPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.PlayGetAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::PlayGetAnimation(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "PlayGetAnimation");

	Params::UnionRaceUIResultPanel_PlayGetAnimation Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.PlayPlayerEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::PlayPlayerEffect(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "PlayPlayerEffect");

	Params::UnionRaceUIResultPanel_PlayPlayerEffect Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.PlayTotalPoint_Loop_After2nd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::PlayTotalPoint_Loop_After2nd(int32 RacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "PlayTotalPoint_Loop_After2nd");

	Params::UnionRaceUIResultPanel_PlayTotalPoint_Loop_After2nd Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetArrowIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ArrowIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetArrowIndex(int32 RacerIndex, int32 ArrowIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetArrowIndex");

	Params::UnionRaceUIResultPanel_SetArrowIndex Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.ArrowIndex = ArrowIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetCharacterId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDriverId                               CharaId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetCharacterId(int32 RacerIndex, EDriverId CharaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetCharacterId");

	Params::UnionRaceUIResultPanel_SetCharacterId Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.CharaId = CharaId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetEarnPointValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EarnPoint                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetEarnPointValue(int32 RacerIndex, int32 EarnPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetEarnPointValue");

	Params::UnionRaceUIResultPanel_SetEarnPointValue Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.EarnPoint = EarnPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetLoadingMode
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultPanel::SetLoadingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetLoadingMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetPlayerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetPlayerIndex(int32 RacerIndex, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetPlayerIndex");

	Params::UnionRaceUIResultPanel_SetPlayerIndex Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetRacerCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetRacerCount(int32 RacerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetRacerCount");

	Params::UnionRaceUIResultPanel_SetRacerCount Parms{};

	Parms.RacerCount = RacerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetRacerName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      RacerName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetRacerName(int32 RacerIndex, const class FText& RacerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetRacerName");

	Params::UnionRaceUIResultPanel_SetRacerName Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.RacerName = std::move(RacerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetRacersRef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionRacers*                     InRacers                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetRacersRef(class UUnionRacers* InRacers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetRacersRef");

	Params::UnionRaceUIResultPanel_SetRacersRef Parms{};

	Parms.InRacers = InRacers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetRankIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaceRankIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultPanel::SetRankIndex(int32 RacerIndex, int32 RaceRankIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetRankIndex");

	Params::UnionRaceUIResultPanel_SetRankIndex Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.RaceRankIndex = RaceRankIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.SetResultMode
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultPanel::SetResultMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "SetResultMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultPanel.UpdateTotalRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIResultPanel::UpdateTotalRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultPanel", "UpdateTotalRank");

	Params::UnionRaceUIResultPanel_UpdateTotalRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultRedStarRing.InitRing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPickUp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultRedStarRing::InitRing(bool bPickUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRing", "InitRing");

	Params::UnionRaceUIResultRedStarRing_InitRing Parms{};

	Parms.bPickUp = bPickUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRing.PickUpRing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultRedStarRing::PickUpRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRing", "PickUpRing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRing.ResetRing
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultRedStarRing::ResetRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRing", "ResetRing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.GetOtherResultRedStarRingAcquisitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             Index_0                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ERedStarRingAcquisitionType>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ERedStarRingAcquisitionType> UUnionRaceUIResultRedStarRings::GetOtherResultRedStarRingAcquisitionType(const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "GetOtherResultRedStarRingAcquisitionType");

	Params::UnionRaceUIResultRedStarRings_GetOtherResultRedStarRingAcquisitionType Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.GetRaceRedStarRingAcquisitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<ERedStarRingAcquisitionType>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ERedStarRingAcquisitionType> UUnionRaceUIResultRedStarRings::GetRaceRedStarRingAcquisitionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "GetRaceRedStarRingAcquisitionType");

	Params::UnionRaceUIResultRedStarRings_GetRaceRedStarRingAcquisitionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.GetResultRedStarRingAcquisitionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EStageId                          InStageId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ERedStarRingAcquisitionType>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ERedStarRingAcquisitionType> UUnionRaceUIResultRedStarRings::GetResultRedStarRingAcquisitionType(const EStageId InStageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "GetResultRedStarRingAcquisitionType");

	Params::UnionRaceUIResultRedStarRings_GetResultRedStarRingAcquisitionType Parms{};

	Parms.InStageId = InStageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.GetResultRedStarRingAllGetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<ERedStarRingAcquisitionType>&AcquisitionType                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERedstarRingAllGetType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERedstarRingAllGetType UUnionRaceUIResultRedStarRings::GetResultRedStarRingAllGetType(const TArray<ERedStarRingAcquisitionType>& AcquisitionType, int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "GetResultRedStarRingAllGetType");

	Params::UnionRaceUIResultRedStarRings_GetResultRedStarRingAllGetType Parms{};

	Parms.AcquisitionType = std::move(AcquisitionType);
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.InitRings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<bool>&                     Rings                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUnionRaceUIResultRedStarRings::InitRings(const TArray<bool>& Rings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "InitRings");

	Params::UnionRaceUIResultRedStarRings_InitRings Parms{};

	Parms.Rings = std::move(Rings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.PickUpRing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   RingIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultRedStarRings::PickUpRing(uint8 RingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "PickUpRing");

	Params::UnionRaceUIResultRedStarRings_PickUpRing Parms{};

	Parms.RingIndex = RingIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.ResetRings
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultRedStarRings::ResetRings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "ResetRings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultRedStarRings.SetRedStarRingsRef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UUnionRaceUIResultRedStarRing*>&Rings                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUnionRaceUIResultRedStarRings::SetRedStarRingsRef(const TArray<class UUnionRaceUIResultRedStarRing*>& Rings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultRedStarRings", "SetRedStarRingsRef");

	Params::UnionRaceUIResultRedStarRings_SetRedStarRingsRef Parms{};

	Parms.Rings = std::move(Rings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultScene.CalcLinesPanelVisibleByRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultScene::CalcLinesPanelVisibleByRacerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "CalcLinesPanelVisibleByRacerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultScene.GetGhostDiffLapTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LapNo                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutIsUpTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutIsSameTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionRaceUIResultScene::GetGhostDiffLapTime(int32 LapNo, bool* OutIsUpTime, bool* OutIsSameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetGhostDiffLapTime");

	Params::UnionRaceUIResultScene_GetGhostDiffLapTime Parms{};

	Parms.LapNo = LapNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIsUpTime != nullptr)
		*OutIsUpTime = Parms.OutIsUpTime;

	if (OutIsSameTime != nullptr)
		*OutIsSameTime = Parms.OutIsSameTime;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetGhostDiffTotalLapTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   OutIsUpTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   OutIsSameTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionRaceUIResultScene::GetGhostDiffTotalLapTime(bool* OutIsUpTime, bool* OutIsSameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetGhostDiffTotalLapTime");

	Params::UnionRaceUIResultScene_GetGhostDiffTotalLapTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIsUpTime != nullptr)
		*OutIsUpTime = Parms.OutIsUpTime;

	if (OutIsSameTime != nullptr)
		*OutIsSameTime = Parms.OutIsSameTime;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetLapTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LapNo                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUIResultScene::GetLapTime(int32 LapNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetLapTime");

	Params::UnionRaceUIResultScene_GetLapTime Parms{};

	Parms.LapNo = LapNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetLapTimeText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   LapNo                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionRaceUIResultScene::GetLapTimeText(int32 LapNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetLapTimeText");

	Params::UnionRaceUIResultScene_GetLapTimeText Parms{};

	Parms.LapNo = LapNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetResultLinesPanel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRaceUIResultPanel*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUnionRaceUIResultPanel* UUnionRaceUIResultScene::GetResultLinesPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetResultLinesPanel");

	Params::UnionRaceUIResultScene_GetResultLinesPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetTotalLapTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUIResultScene::GetTotalLapTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetTotalLapTime");

	Params::UnionRaceUIResultScene_GetTotalLapTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.GetTotalLapTimeText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUnionRaceUIResultScene::GetTotalLapTimeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "GetTotalLapTimeText");

	Params::UnionRaceUIResultScene_GetTotalLapTimeText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.IsViewDiffLapTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   LapNo                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIResultScene::IsViewDiffLapTime(int32 LapNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "IsViewDiffLapTime");

	Params::UnionRaceUIResultScene_IsViewDiffLapTime Parms{};

	Parms.LapNo = LapNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultScene.PlayLinesPanelAddMoveAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultScene::PlayLinesPanelAddMoveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "PlayLinesPanelAddMoveAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultScene.PlayLinesPanelInAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultScene::PlayLinesPanelInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "PlayLinesPanelInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultScene.PlayLinesPanelOutAnimByRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultScene::PlayLinesPanelOutAnimByRacerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "PlayLinesPanelOutAnimByRacerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultScene.PlayLinesPanelTotalInAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUnionRaceUIResultScene::PlayLinesPanelTotalInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "PlayLinesPanelTotalInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UnionRun.UnionRaceUIResultScene.SetLinesPanelRacerCount
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRaceUIResultScene::SetLinesPanelRacerCount(int32 RacerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "SetLinesPanelRacerCount");

	Params::UnionRaceUIResultScene_SetLinesPanelRacerCount Parms{};

	Parms.RacerCount = RacerCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UnionRun.UnionRaceUIResultScene.SetupLapTime
// (Final, Native, Public, BlueprintCallable)

void UUnionRaceUIResultScene::SetupLapTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "SetupLapTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRaceUIResultScene.IsEnableGhost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRaceUIResultScene::IsEnableGhost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionRaceUIResultScene", "IsEnableGhost");

	Params::UnionRaceUIResultScene_IsEnableGhost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRaceUIResultUtils.GetResultParam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InParamString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRaceUIResultUtils::GetResultParam(const class FString& InParamString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRaceUIResultUtils", "GetResultParam");

	Params::UnionRaceUIResultUtils_GetResultParam Parms{};

	Parms.InParamString = std::move(InParamString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionReplayManager.OnLoadComplete
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionReplayManager::OnLoadComplete(ESaveDataStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionReplayManager", "OnLoadComplete");

	Params::UnionReplayManager_OnLoadComplete Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionReplayManager.OnSaveComplete
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// ESaveDataStatus                         Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionReplayManager::OnSaveComplete(ESaveDataStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionReplayManager", "OnSaveComplete");

	Params::UnionReplayManager_OnSaveComplete Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRingInfoInterface.NoticeTakeRedStarRingEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RingIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionRingInfoInterface::NoticeTakeRedStarRingEvent(int32 RacerIndex, int32 RingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingInfoInterface", "NoticeTakeRedStarRingEvent");

	Params::UnionRingInfoInterface_NoticeTakeRedStarRingEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.RingIndex = RingIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRingInfoInterface.NoticeTakeRingEvent
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUnionTakeRingInfo&        Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IUnionRingInfoInterface::NoticeTakeRingEvent(int32 RacerIndex, const struct FUnionTakeRingInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionRingInfoInterface", "NoticeTakeRingEvent");

	Params::UnionRingInfoInterface_NoticeTakeRingEvent Parms{};

	Parms.RacerIndex = RacerIndex;
	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugBPFL.ForceGoalRacerOnce
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionRunDebugBPFL::ForceGoalRacerOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "ForceGoalRacerOnce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugBPFL.ForceGoalRacerWithoutLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionRunDebugBPFL::ForceGoalRacerWithoutLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "ForceGoalRacerWithoutLocalPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugBPFL.IsForcedCom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int32                             InRacerIndex                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionRunDebugBPFL::IsForcedCom(const int32 InRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "IsForcedCom");

	Params::UnionRunDebugBPFL_IsForcedCom Parms{};

	Parms.InRacerIndex = InRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRunDebugBPFL.RegisterAttackItemDevOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRunDebugBPFL::RegisterAttackItemDevOnly(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "RegisterAttackItemDevOnly");

	Params::UnionRunDebugBPFL_RegisterAttackItemDevOnly Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugBPFL.RemoveAttackItemDevOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionRunDebugBPFL::RemoveAttackItemDevOnly(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "RemoveAttackItemDevOnly");

	Params::UnionRunDebugBPFL_RemoveAttackItemDevOnly Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugBPFL.SwitchComStopMove
// (Final, Native, Static, Public, BlueprintCallable)

void UUnionRunDebugBPFL::SwitchComStopMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugBPFL", "SwitchComStopMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionRunDebugPacketReplay.GetOnlineRaceReplayData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<uint8>*                          Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionRunDebugPacketReplay::GetOnlineRaceReplayData(TArray<uint8>* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugPacketReplay", "GetOnlineRaceReplayData");

	Params::UnionRunDebugPacketReplay_GetOnlineRaceReplayData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function UnionRun.UnionRunDebugPacketReplay.LoadOnlineRaceReplay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOnlineRaceReplay*               RaceReplayData                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUnionRunDebugPacketReplay::LoadOnlineRaceReplay(struct FOnlineRaceReplay* RaceReplayData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugPacketReplay", "LoadOnlineRaceReplay");

	Params::UnionRunDebugPacketReplay_LoadOnlineRaceReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RaceReplayData != nullptr)
		*RaceReplayData = std::move(Parms.RaceReplayData);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionRunDebugPacketReplay.SetOnlineRaceReplay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOnlineRaceReplay*               RaceReplayData                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void UUnionRunDebugPacketReplay::SetOnlineRaceReplay(struct FOnlineRaceReplay* RaceReplayData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionRunDebugPacketReplay", "SetOnlineRaceReplay");

	Params::UnionRunDebugPacketReplay_SetOnlineRaceReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RaceReplayData != nullptr)
		*RaceReplayData = std::move(Parms.RaceReplayData);
}


// Function UnionRun.UnionSplineComponent.GetCurrentLocationAndRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutDirection                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUnionSplineComponent::GetCurrentLocationAndRotation(float Length, bool bLoop, struct FVector* OutLocation, struct FVector* OutDirection, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "GetCurrentLocationAndRotation");

	Params::UnionSplineComponent_GetCurrentLocationAndRotation Parms{};

	Parms.Length = Length;
	Parms.bLoop = bLoop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutDirection != nullptr)
		*OutDirection = std::move(Parms.OutDirection);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function UnionRun.UnionSplineComponent.GetSplineParamByArrayIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ArrayIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSplinePointParam*               returnParam                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineComponent::GetSplineParamByArrayIndex(int32 ArrayIndex, struct FSplinePointParam* returnParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "GetSplineParamByArrayIndex");

	Params::UnionSplineComponent_GetSplineParamByArrayIndex Parms{};

	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (returnParam != nullptr)
		*returnParam = std::move(Parms.returnParam);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineComponent.GetSplineParamByIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   PointIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSplinePointParam*               returnParam                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineComponent::GetSplineParamByIndex(int32 PointIndex, struct FSplinePointParam* returnParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "GetSplineParamByIndex");

	Params::UnionSplineComponent_GetSplineParamByIndex Parms{};

	Parms.PointIndex = PointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (returnParam != nullptr)
		*returnParam = std::move(Parms.returnParam);

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineComponent.InitSplinePointParam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<struct FSplinePointParam>& SplineParamArray                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionSplineComponent::InitSplinePointParam(const TArray<struct FSplinePointParam>& SplineParamArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "InitSplinePointParam");

	Params::UnionSplineComponent_InitSplinePointParam Parms{};

	Parms.SplineParamArray = std::move(SplineParamArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.PointParamUpdate
// (Final, Native, Public, BlueprintCallable)

void UUnionSplineComponent::PointParamUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "PointParamUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.PrePointParamUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RouteIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartPointIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineComponent::PrePointParamUpdate(int32 RouteIndex, int32 StartPointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "PrePointParamUpdate");

	Params::UnionSplineComponent_PrePointParamUpdate Parms{};

	Parms.RouteIndex = RouteIndex;
	Parms.StartPointIndex = StartPointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.RemovePointAfterIndex
// (Final, Native, Public, BlueprintCallable)

void UUnionSplineComponent::RemovePointAfterIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "RemovePointAfterIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.RemovePointBeforeIndex
// (Final, Native, Public, BlueprintCallable)

void UUnionSplineComponent::RemovePointBeforeIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "RemovePointBeforeIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.RemovePointByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<int32>&                    RemoveIndex                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUnionSplineComponent::RemovePointByIndex(const TArray<int32>& RemoveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "RemovePointByIndex");

	Params::UnionSplineComponent_RemovePointByIndex Parms{};

	Parms.RemoveIndex = std::move(RemoveIndex);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.RemovePointByPointIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RemovePointIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineComponent::RemovePointByPointIndex(int32 RemovePointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "RemovePointByPointIndex");

	Params::UnionSplineComponent_RemovePointByPointIndex Parms{};

	Parms.RemovePointIndex = RemovePointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.UpdateBranchLocation
// (Final, Native, Public, BlueprintCallable)

void UUnionSplineComponent::UpdateBranchLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "UpdateBranchLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineComponent.GetSplineType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUnionSplineType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionSplineType UUnionSplineComponent::GetSplineType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "GetSplineType");

	Params::UnionSplineComponent_GetSplineType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineComponent.IsArrived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineComponent::IsArrived(float Length) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineComponent", "IsArrived");

	Params::UnionSplineComponent_IsArrived Parms{};

	Parms.Length = Length;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineMoveComponent.AddMoveDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AddDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::AddMoveDistance(float AddDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "AddMoveDistance");

	Params::UnionSplineMoveComponent_AddMoveDistance Parms{};

	Parms.AddDistance = AddDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.ForceMove
// (Final, Native, Public, BlueprintCallable)

void UUnionSplineMoveComponent::ForceMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "ForceMove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.ForceReverse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    RotReverse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::ForceReverse(bool RotReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "ForceReverse");

	Params::UnionSplineMoveComponent_ForceReverse Parms{};

	Parms.RotReverse = RotReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.IsArrived
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineMoveComponent::IsArrived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "IsArrived");

	Params::UnionSplineMoveComponent_IsArrived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineMoveComponent.IsOverSplineMoveRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   checkRate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineMoveComponent::IsOverSplineMoveRate(float checkRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "IsOverSplineMoveRate");

	Params::UnionSplineMoveComponent_IsOverSplineMoveRate Parms{};

	Parms.checkRate = checkRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineMoveComponent.IsStartWait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineMoveComponent::IsStartWait(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "IsStartWait");

	Params::UnionSplineMoveComponent_IsStartWait Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineMoveComponent.IsValidSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUnionSplineMoveComponent::IsValidSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "IsValidSpline");

	Params::UnionSplineMoveComponent_IsValidSpline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionSplineMoveComponent.MoveReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ForceMove                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::MoveReset(bool ForceMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "MoveReset");

	Params::UnionSplineMoveComponent_MoveReset Parms{};

	Parms.ForceMove = ForceMove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.MoveUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTransform                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::MoveUpdate(float DeltaTime, bool IsTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "MoveUpdate");

	Params::UnionSplineMoveComponent_MoveUpdate Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.IsTransform = IsTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.SetLoopType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESplineMoveLoopType                     LoopType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::SetLoopType(ESplineMoveLoopType LoopType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "SetLoopType");

	Params::UnionSplineMoveComponent_SetLoopType Parms{};

	Parms.LoopType = LoopType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.SetMoveDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::SetMoveDistance(float NewDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "SetMoveDistance");

	Params::UnionSplineMoveComponent_SetMoveDistance Parms{};

	Parms.NewDistance = NewDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionSplineMoveComponent.SetSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUnionSplineComponent*            NewSpline                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionSplineMoveComponent::SetSpline(class UUnionSplineComponent* NewSpline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionSplineMoveComponent", "SetSpline");

	Params::UnionSplineMoveComponent_SetSpline Parms{};

	Parms.NewSpline = NewSpline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionUcccLibrary.GetUserUcccParamData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   OnlineRacerIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCommon_UserCheatParamData       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCommon_UserCheatParamData UUnionUcccLibrary::GetUserUcccParamData(int32 OnlineRacerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UnionUcccLibrary", "GetUserUcccParamData");

	Params::UnionUcccLibrary_GetUserUcccParamData Parms{};

	Parms.OnlineRacerIndex = OnlineRacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ActivateCameraIF
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::ActivateCameraIF(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ActivateCameraIF");

	Params::UnionVehicleRaceObjectInterface_ActivateCameraIF Parms{};

	Parms.bActivate = bActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.AddInputRecieveObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InObjectRef                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::AddInputRecieveObject(class UObject* InObjectRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "AddInputRecieveObject");

	Params::UnionVehicleRaceObjectInterface_AddInputRecieveObject Parms{};

	Parms.InObjectRef = InObjectRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.BeginInitialize
// (Native, Event, Public, BlueprintEvent)

void IUnionVehicleRaceObjectInterface::BeginInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "BeginInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.BeginWaitInitialize
// (Native, Event, Public, BlueprintEvent)

void IUnionVehicleRaceObjectInterface::BeginWaitInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "BeginWaitInitialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ChangeMiniMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionVehicleRaceObjectInterface::ChangeMiniMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ChangeMiniMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ChangeMonsterTruckMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionVehicleRaceObjectInterface::ChangeMonsterTruckMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ChangeMonsterTruckMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ChangeNomalMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IUnionVehicleRaceObjectInterface::ChangeNomalMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ChangeNomalMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ExecVehicleControlEventAttackedInfo
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleControlEvent                    EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAttackedInfo&             Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::ExecVehicleControlEventAttackedInfo(EVehicleControlEvent EventId, const struct FAttackedInfo& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ExecVehicleControlEventAttackedInfo");

	Params::UnionVehicleRaceObjectInterface_ExecVehicleControlEventAttackedInfo Parms{};

	Parms.EventId = EventId;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ExecVehicleControlEventFloat
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleControlEvent                    EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::ExecVehicleControlEventFloat(EVehicleControlEvent EventId, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ExecVehicleControlEventFloat");

	Params::UnionVehicleRaceObjectInterface_ExecVehicleControlEventFloat Parms{};

	Parms.EventId = EventId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ExecVehicleControlEventInt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleControlEvent                    EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::ExecVehicleControlEventInt(EVehicleControlEvent EventId, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ExecVehicleControlEventInt");

	Params::UnionVehicleRaceObjectInterface_ExecVehicleControlEventInt Parms{};

	Parms.EventId = EventId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.ExecVehicleControlEventSpecialStatus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleSpecialStatusEvent              EventId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const EVehicleSpecialStatusType         Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::ExecVehicleControlEventSpecialStatus(EVehicleSpecialStatusEvent EventId, const EVehicleSpecialStatusType Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "ExecVehicleControlEventSpecialStatus");

	Params::UnionVehicleRaceObjectInterface_ExecVehicleControlEventSpecialStatus Parms{};

	Parms.EventId = EventId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.GetActiveItemPerfomanceObjects
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>*                  OutList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::GetActiveItemPerfomanceObjects(TArray<class AActor*>* OutList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "GetActiveItemPerfomanceObjects");

	Params::UnionVehicleRaceObjectInterface_GetActiveItemPerfomanceObjects Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutList != nullptr)
		*OutList = std::move(Parms.OutList);
}


// Function UnionRun.UnionVehicleRaceObjectInterface.GetDrone
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IUnionVehicleRaceObjectInterface::GetDrone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "GetDrone");

	Params::UnionVehicleRaceObjectInterface_GetDrone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.RemoveInputRecieveObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InObjectRef                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::RemoveInputRecieveObject(class UObject* InObjectRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "RemoveInputRecieveObject");

	Params::UnionVehicleRaceObjectInterface_RemoveInputRecieveObject Parms{};

	Parms.InObjectRef = InObjectRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetCockpitMeshSize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetCockpitMeshSize(float NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetCockpitMeshSize");

	Params::UnionVehicleRaceObjectInterface_SetCockpitMeshSize Parms{};

	Parms.NewSize = NewSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetLightChannel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LightChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetLightChannel(int32 LightChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetLightChannel");

	Params::UnionVehicleRaceObjectInterface_SetLightChannel Parms{};

	Parms.LightChannel = LightChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetLoadSkipForMonster
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSkip                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetLoadSkipForMonster(bool bSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetLoadSkipForMonster");

	Params::UnionVehicleRaceObjectInterface_SetLoadSkipForMonster Parms{};

	Parms.bSkip = bSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetRacerIndex
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            NewIndex                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetRacerIndex(const int32& NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetRacerIndex");

	Params::UnionVehicleRaceObjectInterface_SetRacerIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetRacerStatusObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUnionRacerStatusObject*          NewObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetRacerStatusObject(class UUnionRacerStatusObject* NewObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetRacerStatusObject");

	Params::UnionVehicleRaceObjectInterface_SetRacerStatusObject Parms{};

	Parms.NewObject = NewObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetVehicleDisplayMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleDisplayMode                     NewVehicleDisplayMode                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetVehicleDisplayMode(EVehicleDisplayMode NewVehicleDisplayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetVehicleDisplayMode");

	Params::UnionVehicleRaceObjectInterface_SetVehicleDisplayMode Parms{};

	Parms.NewVehicleDisplayMode = NewVehicleDisplayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetVehicleMeshVisibility
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRootCockpitComponent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetVehicleMeshVisibility(bool NewVisibility, bool bRootCockpitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetVehicleMeshVisibility");

	Params::UnionVehicleRaceObjectInterface_SetVehicleMeshVisibility Parms{};

	Parms.NewVisibility = NewVisibility;
	Parms.bRootCockpitComponent = bRootCockpitComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetVehicleSound
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleSound                           VehicleSound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    NewSound                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundAtomCue* IUnionVehicleRaceObjectInterface::SetVehicleSound(EVehicleSound VehicleSound, class USoundAtomCue* NewSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetVehicleSound");

	Params::UnionVehicleRaceObjectInterface_SetVehicleSound Parms{};

	Parms.VehicleSound = VehicleSound;
	Parms.NewSound = NewSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetVehicleSurfaceTypeSound
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVehicleSound                           VehicleSound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUnionSurfaceType                       SurfaceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    NewSound                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAtomCue*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundAtomCue* IUnionVehicleRaceObjectInterface::SetVehicleSurfaceTypeSound(EVehicleSound VehicleSound, EUnionSurfaceType SurfaceType, class USoundAtomCue* NewSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetVehicleSurfaceTypeSound");

	Params::UnionVehicleRaceObjectInterface_SetVehicleSurfaceTypeSound Parms{};

	Parms.VehicleSound = VehicleSound;
	Parms.SurfaceType = SurfaceType;
	Parms.NewSound = NewSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.SetVisibilityMachineBody
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::SetVisibilityMachineBody(bool NewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "SetVisibilityMachineBody");

	Params::UnionVehicleRaceObjectInterface_SetVisibilityMachineBody Parms{};

	Parms.NewVisible = NewVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.UpdateLocalPlayerSetting
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32&                            PlayerControllerIndex                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            LocalPlayerCount                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IUnionVehicleRaceObjectInterface::UpdateLocalPlayerSetting(const int32& PlayerControllerIndex, const int32& LocalPlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "UpdateLocalPlayerSetting");

	Params::UnionVehicleRaceObjectInterface_UpdateLocalPlayerSetting Parms{};

	Parms.PlayerControllerIndex = PlayerControllerIndex;
	Parms.LocalPlayerCount = LocalPlayerCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.GetCurrentSurfaceType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EUnionSurfaceType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnionSurfaceType IUnionVehicleRaceObjectInterface::GetCurrentSurfaceType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "GetCurrentSurfaceType");

	Params::UnionVehicleRaceObjectInterface_GetCurrentSurfaceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.GetRacerIndex
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IUnionVehicleRaceObjectInterface::GetRacerIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "GetRacerIndex");

	Params::UnionVehicleRaceObjectInterface_GetRacerIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleRaceObjectInterface.IsInAir
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUnionVehicleRaceObjectInterface::IsInAir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UnionVehicleRaceObjectInterface", "IsInAir");

	Params::UnionVehicleRaceObjectInterface_IsInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.UnionVehicleModelInfo.GetRootDomainPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutRootDomainPosition                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVehicleModelInfo::GetRootDomainPosition(struct FVector* OutRootDomainPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVehicleModelInfo", "GetRootDomainPosition");

	Params::UnionVehicleModelInfo_GetRootDomainPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRootDomainPosition != nullptr)
		*OutRootDomainPosition = std::move(Parms.OutRootDomainPosition);
}


// Function UnionRun.UnionVehicleModelInfo.GetRootDomainRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQuat*                           OutRootDomainRotation                                  (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVehicleModelInfo::GetRootDomainRotation(struct FQuat* OutRootDomainRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVehicleModelInfo", "GetRootDomainRotation");

	Params::UnionVehicleModelInfo_GetRootDomainRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRootDomainRotation != nullptr)
		*OutRootDomainRotation = std::move(Parms.OutRootDomainRotation);
}


// Function UnionRun.UnionVehicleModelInfo.InitTire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTireCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionVehicleModelInfo::InitTire(int32 InTireCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionVehicleModelInfo", "InitTire");

	Params::UnionVehicleModelInfo_InitTire Parms{};

	Parms.InTireCount = InTireCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.UnionGameCameraInfo.GetDomainPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutDomainPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionGameCameraInfo::GetDomainPosition(struct FVector* OutDomainPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameCameraInfo", "GetDomainPosition");

	Params::UnionGameCameraInfo_GetDomainPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDomainPosition != nullptr)
		*OutDomainPosition = std::move(Parms.OutDomainPosition);
}


// Function UnionRun.UnionGameCameraInfo.GetDomainTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutDomainTarget                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionGameCameraInfo::GetDomainTarget(struct FVector* OutDomainTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameCameraInfo", "GetDomainTarget");

	Params::UnionGameCameraInfo_GetDomainTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDomainTarget != nullptr)
		*OutDomainTarget = std::move(Parms.OutDomainTarget);
}


// Function UnionRun.UnionGameCameraInfo.GetDomainUp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         OutDomainUp                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUnionGameCameraInfo::GetDomainUp(struct FVector* OutDomainUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameCameraInfo", "GetDomainUp");

	Params::UnionGameCameraInfo_GetDomainUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDomainUp != nullptr)
		*OutDomainUp = std::move(Parms.OutDomainUp);
}


// Function UnionRun.UnionGameCameraInfo.GetFovY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUnionGameCameraInfo::GetFovY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UnionGameCameraInfo", "GetFovY");

	Params::UnionGameCameraInfo_GetFovY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetItemHoldCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UURaceUISubItemIconSet::GetItemHoldCount(int32 PlayerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetItemHoldCount");

	Params::URaceUISubItemIconSet_GetItemHoldCount Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetItemPackageRingCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UURaceUISubItemIconSet::GetItemPackageRingCount(int32 PlayerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetItemPackageRingCount");

	Params::URaceUISubItemIconSet_GetItemPackageRingCount Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetTradeCoolTimeParam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UURaceUISubItemIconSet::GetTradeCoolTimeParam(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetTradeCoolTimeParam");

	Params::URaceUISubItemIconSet_GetTradeCoolTimeParam Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.InitIrregular
// (Final, Native, Public, BlueprintCallable)

void UURaceUISubItemIconSet::InitIrregular()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "InitIrregular");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.URaceUISubItemIconSet.IsSummonAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::IsSummonAvailable(int32 PlayerIndex, EItemInfoType ItemInfoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "IsSummonAvailable");

	Params::URaceUISubItemIconSet_IsSummonAvailable Parms{};

	Parms.PlayerIndex = PlayerIndex;
	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.IsTradeCoolTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::IsTradeCoolTime(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "IsTradeCoolTime");

	Params::URaceUISubItemIconSet_IsTradeCoolTime Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.SetItemPanelVisibility
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UURaceUISubItemIconSet::SetItemPanelVisibility(bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "SetItemPanelVisibility");

	Params::URaceUISubItemIconSet_SetItemPanelVisibility Parms{};

	Parms.bVisibility = bVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.URaceUISubItemIconSet.SetItemTradeKey
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsKeyboard                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UURaceUISubItemIconSet::SetItemTradeKey(const struct FKey& InKey, bool IsKeyboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "SetItemTradeKey");

	Params::URaceUISubItemIconSet_SetItemTradeKey Parms{};

	Parms.InKey = std::move(InKey);
	Parms.IsKeyboard = IsKeyboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.URaceUISubItemIconSet.SetTradeActive
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UURaceUISubItemIconSet::SetTradeActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "SetTradeActive");

	Params::URaceUISubItemIconSet_SetTradeActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.URaceUISubItemIconSet.SetVisibilityIrregular
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UURaceUISubItemIconSet::SetVisibilityIrregular(EItemInfoType ItemInfoType, bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "SetVisibilityIrregular");

	Params::URaceUISubItemIconSet_SetVisibilityIrregular Parms{};

	Parms.ItemInfoType = ItemInfoType;
	Parms.IsVisible_0 = IsVisible_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.URaceUISubItemIconSet.GetHoldItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RacerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UURaceUISubItemIconSet::GetHoldItemCount(int32 RacerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetHoldItemCount");

	Params::URaceUISubItemIconSet_GetHoldItemCount Parms{};

	Parms.RacerIndex = RacerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetHoldItemInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemSet                         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FItemSet UURaceUISubItemIconSet::GetHoldItemInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetHoldItemInfo");

	Params::URaceUISubItemIconSet_GetHoldItemInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetItemStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemStatus                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemStatus UURaceUISubItemIconSet::GetItemStatus(EItemInfoType ItemInfoType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetItemStatus");

	Params::URaceUISubItemIconSet_GetItemStatus Parms{};

	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.GetRacerIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UURaceUISubItemIconSet::GetRacerIndex(int32 PlayerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "GetRacerIndex");

	Params::URaceUISubItemIconSet_GetRacerIndex Parms{};

	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.HasItemStockPlus
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::HasItemStockPlus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "HasItemStockPlus");

	Params::URaceUISubItemIconSet_HasItemStockPlus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.HasItemStockTrade
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::HasItemStockTrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "HasItemStockTrade");

	Params::URaceUISubItemIconSet_HasItemStockTrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.HasItemSummon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::HasItemSummon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "HasItemSummon");

	Params::URaceUISubItemIconSet_HasItemSummon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.IsHideIconOnLost
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   LostItemCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::IsHideIconOnLost(int32 LostItemCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "IsHideIconOnLost");

	Params::URaceUISubItemIconSet_IsHideIconOnLost Parms{};

	Parms.LostItemCount = LostItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.URaceUISubItemIconSet.IsIrregularChargeItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemInfoType                           ItemInfoType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UURaceUISubItemIconSet::IsIrregularChargeItem(EItemInfoType ItemInfoType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("URaceUISubItemIconSet", "IsIrregularChargeItem");

	Params::URaceUISubItemIconSet_IsIrregularChargeItem Parms{};

	Parms.ItemInfoType = ItemInfoType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.WhaleAnimInstance.GetIsJamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWhaleAnimInstance::GetIsJamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WhaleAnimInstance", "GetIsJamp");

	Params::WhaleAnimInstance_GetIsJamp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.WhaleAnimInstance.GetIsJampTwist
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWhaleAnimInstance::GetIsJampTwist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WhaleAnimInstance", "GetIsJampTwist");

	Params::WhaleAnimInstance_GetIsJampTwist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UnionRun.WhaleAnimInstance.SetIsJamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWhaleAnimInstance::SetIsJamp(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WhaleAnimInstance", "SetIsJamp");

	Params::WhaleAnimInstance_SetIsJamp Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UnionRun.WhaleAnimInstance.SetIsJampTwist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWhaleAnimInstance::SetIsJampTwist(bool flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WhaleAnimInstance", "SetIsJampTwist");

	Params::WhaleAnimInstance_SetIsJampTwist Parms{};

	Parms.flag = flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

