#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PartyRaceMenuSequence

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"
#include "UnionUI_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PartyRaceMenuSequence.BP_PartyRaceMenuSequence_C
// 0x0080 (0x04B8 - 0x0438)
class ABP_PartyRaceMenuSequence_C final : public APartyRaceMenuSequence
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_GadgetCustomize2State_C*           BPC_GadgetCustomize2State;                         // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceRivalTeamSelect_C* BPC_MenuStatePartyRaceRivalTeamSelect;           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceSelectGroup_C*   BPC_MenuStatePartyRaceSelectGroup;                 // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceSelectClass_C*   BPC_MenuStatePartyRaceSelectClass;                 // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaMachineState_C*               BPC_CharaMachineState;                             // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_SelectCourse_C*                    BPC_SelectCourse;                                  // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceCustomizeRule_C* BPC_MenuStatePartyRaceCustomizeRule;               // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceSelectPreset_C*  BPC_MenuStatePartyRaceSelectPreset;                // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MenuStatePartyRaceTutorial_C*      BPC_MenuStatePartyRaceTutorial;                    // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuSequence_C*                     MenuSequence;                                      // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_FooterMenu_C*                      Footer;                                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           PartyRaceCamera;                                   // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedFade;                                         // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PartyRaceMonitor_C*                 RuleMonitor;                                       // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IndividualClassSelected;                           // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_GrandPrixSequence_BPC_CharaMachineState_K2Node_ComponentBoundEvent_4_OnBackStateDelegate__DelegateSignature(EMenuSequenceSubState State);
	void BndEvt__BP_PartyRaceMenuSequence_BPC_MenuStatePartyRaceSelectGroup_K2Node_ComponentBoundEvent_1_OnChangeStateDelegate__DelegateSignature(EMenuSequenceSubState State);
	void BndEvt__BP_PartyRaceMenuSequence_BPC_MenuStatePartyRaceSelectPreset_K2Node_ComponentBoundEvent_0_OnBackStateDelegate__DelegateSignature(EMenuSequenceSubState State);
	void ChangePresetCamera();
	void CreateMonitor();
	void ExecuteUbergraph_BP_PartyRaceMenuSequence(int32 EntryPoint);
	void FinishedFadeToGadgetCustom(EUnionUIFadeDirection FadeDirection);
	class UObject* GetFooter();
	class UObject* GetOwnerMenuSequence();
	void InpActEvt_M_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void OnBackFromGadgetCustom(EMenuSequenceSubState State);
	void OnCancelAndPrevSequence_Event_0();
	void OnCustomizeRuleCancelEvent();
	void OnCustomizeRuleNextEvent();
	void OnDecideGrandPrixAndCourse_Event_0();
	void OnExitEvent_Event_0();
	void OnFinalize();
	void OnInitialize();
	void OnSelectedGadgetCustom_Event();
	void OnSelectGroupCanceAndPrevSequenceEvent();
	void OnSelectGroupNextSequence();
	void OnUpdate(float InDeltaTime);
	void ReceiveBeginPlay();
	void ReturnPresetFromAnotherState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PartyRaceMenuSequence_C">();
	}
	static class ABP_PartyRaceMenuSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PartyRaceMenuSequence_C>();
	}
};
static_assert(alignof(ABP_PartyRaceMenuSequence_C) == 0x000008, "Wrong alignment on ABP_PartyRaceMenuSequence_C");
static_assert(sizeof(ABP_PartyRaceMenuSequence_C) == 0x0004B8, "Wrong size on ABP_PartyRaceMenuSequence_C");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, UberGraphFrame) == 0x000438, "Member 'ABP_PartyRaceMenuSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_GadgetCustomize2State) == 0x000440, "Member 'ABP_PartyRaceMenuSequence_C::BPC_GadgetCustomize2State' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceRivalTeamSelect) == 0x000448, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceRivalTeamSelect' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceSelectGroup) == 0x000450, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceSelectGroup' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceSelectClass) == 0x000458, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceSelectClass' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_CharaMachineState) == 0x000460, "Member 'ABP_PartyRaceMenuSequence_C::BPC_CharaMachineState' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_SelectCourse) == 0x000468, "Member 'ABP_PartyRaceMenuSequence_C::BPC_SelectCourse' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceCustomizeRule) == 0x000470, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceCustomizeRule' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceSelectPreset) == 0x000478, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceSelectPreset' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, BPC_MenuStatePartyRaceTutorial) == 0x000480, "Member 'ABP_PartyRaceMenuSequence_C::BPC_MenuStatePartyRaceTutorial' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, MenuSequence) == 0x000488, "Member 'ABP_PartyRaceMenuSequence_C::MenuSequence' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, Footer) == 0x000490, "Member 'ABP_PartyRaceMenuSequence_C::Footer' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, PartyRaceCamera) == 0x000498, "Member 'ABP_PartyRaceMenuSequence_C::PartyRaceCamera' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, bNeedFade) == 0x0004A0, "Member 'ABP_PartyRaceMenuSequence_C::bNeedFade' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, RuleMonitor) == 0x0004A8, "Member 'ABP_PartyRaceMenuSequence_C::RuleMonitor' has a wrong offset!");
static_assert(offsetof(ABP_PartyRaceMenuSequence_C, IndividualClassSelected) == 0x0004B0, "Member 'ABP_PartyRaceMenuSequence_C::IndividualClassSelected' has a wrong offset!");

}

