#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemGet_Window

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "UnionRun_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemGet_Window.WBP_ItemGet_Window_C
// 0x0150 (0x04F8 - 0x03A8)
class UWBP_ItemGet_Window_C final : public URewardGetWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ItemGet_WindowInfo_Out;                            // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowInfo_Loop;                           // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowInfo_In;                             // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowInfo_Start_In;                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowBase_Out;                            // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowBase_Loop;                           // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ItemGet_WindowBase_In;                             // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_20;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_Chara;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_HornTmb;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_StickerImage_Default;                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_StickerImage_Material_Default;                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_StickerImage_Material_NX;                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_NameLine;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_PAT_MachineTypeIcon;                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DSP_RivalRacerIcon;                                // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RivalSelect_Sub_Effects_Fire_C*    DSP_WBP_RivalSelect_Sub_Effects_Fire_01;           // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RivalSelect_Sub_Effects_Fire_C*    DSP_WBP_RivalSelect_Sub_Effects_Fire_02;           // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemGet_CharaSkin;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemGet_HonorTitle;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemGet_HornTmb;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ItemGet_Sticker;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemIcom_Eff_01;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemIcom_Eff_02;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteraction;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              StickerImage_Default;                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               StickerImage_NX;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnknownGadget;                                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GadgetCustom_Sub_GadgetPlate_C*    WBP_GadgetCustom_Sub_GadgetPlate;                  // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HonorTitle_Plate_C*                WBP_HonorTitle_Plate;                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Reward;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DisplayIndex;                                      // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DisplayNum;                                        // 0x04AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRewardGetWindowParam>          DisplayParam;                                      // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             ItemIconTexture;                                   // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_CMN_GadgetCountFullWindow_C*       ItemCountLayoutWidget;                             // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         WindowZOrder;                                      // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TitleDefaultFontSize;                              // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartedOne;                                       // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRivalReward;                                      // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ForceCount;                                        // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             TargetTexture;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ERewardType                                   Reward_Type;                                       // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_ItemGet_Window_MouseInteraction_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void BPFRewardUtil_OpenWindow();
	void CloseWindow();
	void Construct();
	void CreateItemCountWidget();
	void Destruct();
	void ExecuteUbergraph_WBP_ItemGet_Window(int32 EntryPoint);
	void FixTextureSize();
	void Get_Character_Text(ERewardType InRewardType, EDriverId InDriverId, class FText* OutNameText, class FText* OutRewardTypeText);
	void Get_Machine_Parts_UI_Data(uint8 rewardType, EMachineId MachineId, struct FMachinePartsUIData* OutMachinePartsUIData);
	void GetDriverData(EDriverId InDriverId, struct FDriverData* OutDriverData);
	void GetMachineTypeFromMachineId(EMachineId InMachineID, bool* bOutIsEnable, ECarStatusType* OutCarStatusType);
	class UImage* GetMachineTypeIconImage();
	void OnAcceptKeyPressed();
	void OnAnimationOutFinished_Event();
	void OnBaseInAnimFinished();
	void OnBaseOutAnimFinished();
	void OnForcePressed();
	void OnInfoInAnimFinished();
	void OpenWindow();
	void OutItemCountWidget();
	void PlayGetSe();
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTWBP_ItemGet_Window();
	void Set_Gadget_Plate_Empty_from_Plate_Id(EGadgetPlateId InPlateId, bool InRunkUp, bool InLevelUp);
	void SetAnimationDelegate();
	void SetCharacterDisplay(ERewardType InRewardType, EDriverId InDriverId, TSoftObjectPtr<class UTexture2D> InIconTexture);
	void SetCharacterIcon(EDriverId InDriverId, TSoftObjectPtr<class UTexture2D> InIconTexture);
	void SetDisplayParam(const TArray<struct FRewardGetWindowParam>& InDisplayParamArray, int32 InWindowZOrder);
	void SetDonpaTicketDisplay(int32 Num);
	void SetEmptyDisplay();
	void SetFixedGadgetDisplay(EGadgetId InGadgetId, int32 InNum, TSoftObjectPtr<class UTexture2D> Itemtexture);
	void SetGadgetPlate();
	void SetHornWidget(ERewardType rewardType, int32 rewardId);
	void SetItemCountWidget(int32 InItemNum, int32 InItemGetNum, ERewardType InRewardType, class UTexture2D* InIconTexture);
	void SetItemCountWidgetVisible(bool bInVisible);
	void SetItemIcon(ERewardType InRewardType, int32 InRewardId, TSoftObjectPtr<class UTexture2D> InIconTexture, class UImage* InImageWidget);
	void SetItemIconActiveIndex(ERewardType InRewardType);
	void SetItemName(const class FText& InText);
	void SetMachineDisplay(EMachineId InMachineID);
	void SetMachineIcon(bool bInMachineEnable, bool bMatchSize);
	void SetMachinePartsDisplay(uint8 rewardType, EMachineId MachineId, TSoftObjectPtr<class UTexture2D> Itemtexture);
	void SetMachinePartsIcon(bool bInMachineEnable, bool bMatchSize);
	void SetMachineTypeIconVisibility(ESlateVisibility InVisibility);
	void SetRaceCountReward();
	void SetReward(ERewardType rewardType, int32 rewardId, class UTexture2D* Texture);
	void SetRewardTypeText(const class FText& InText);
	void SetRivalRewardEffectVisible(bool bInVisible);
	void SetStickerWidget(int32 stickerId, TSoftObjectPtr<class UTexture2D> InIconTexture);
	void SetTimeTrialCompleteReward();
	void SetTitleWidget(ERewardType rewardType, int32 rewardId);
	void StartNextDisplay();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateDisplay();
	void UpdateDisplayImpliment(const struct FRewardGetWindowParam& RewardGetWindowParam);
	void UpdateTitleFontSize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemGet_Window_C">();
	}
	static class UWBP_ItemGet_Window_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemGet_Window_C>();
	}
};
static_assert(alignof(UWBP_ItemGet_Window_C) == 0x000008, "Wrong alignment on UWBP_ItemGet_Window_C");
static_assert(sizeof(UWBP_ItemGet_Window_C) == 0x0004F8, "Wrong size on UWBP_ItemGet_Window_C");
static_assert(offsetof(UWBP_ItemGet_Window_C, UberGraphFrame) == 0x0003A8, "Member 'UWBP_ItemGet_Window_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowInfo_Out) == 0x0003B0, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowInfo_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowInfo_Loop) == 0x0003B8, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowInfo_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowInfo_In) == 0x0003C0, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowInfo_In' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowInfo_Start_In) == 0x0003C8, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowInfo_Start_In' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowBase_Out) == 0x0003D0, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowBase_Out' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowBase_Loop) == 0x0003D8, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowBase_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_WindowBase_In) == 0x0003E0, "Member 'UWBP_ItemGet_Window_C::ItemGet_WindowBase_In' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, CanvasPanel_20) == 0x0003E8, "Member 'UWBP_ItemGet_Window_C::CanvasPanel_20' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DMY_Chara) == 0x0003F0, "Member 'UWBP_ItemGet_Window_C::DMY_Chara' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DMY_HornTmb) == 0x0003F8, "Member 'UWBP_ItemGet_Window_C::DMY_HornTmb' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DMY_StickerImage_Default) == 0x000400, "Member 'UWBP_ItemGet_Window_C::DMY_StickerImage_Default' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DMY_StickerImage_Material_Default) == 0x000408, "Member 'UWBP_ItemGet_Window_C::DMY_StickerImage_Material_Default' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DMY_StickerImage_Material_NX) == 0x000410, "Member 'UWBP_ItemGet_Window_C::DMY_StickerImage_Material_NX' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DSP_NameLine) == 0x000418, "Member 'UWBP_ItemGet_Window_C::DSP_NameLine' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DSP_PAT_MachineTypeIcon) == 0x000420, "Member 'UWBP_ItemGet_Window_C::DSP_PAT_MachineTypeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DSP_RivalRacerIcon) == 0x000428, "Member 'UWBP_ItemGet_Window_C::DSP_RivalRacerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DSP_WBP_RivalSelect_Sub_Effects_Fire_01) == 0x000430, "Member 'UWBP_ItemGet_Window_C::DSP_WBP_RivalSelect_Sub_Effects_Fire_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DSP_WBP_RivalSelect_Sub_Effects_Fire_02) == 0x000438, "Member 'UWBP_ItemGet_Window_C::DSP_WBP_RivalSelect_Sub_Effects_Fire_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_CharaSkin) == 0x000440, "Member 'UWBP_ItemGet_Window_C::ItemGet_CharaSkin' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_HonorTitle) == 0x000448, "Member 'UWBP_ItemGet_Window_C::ItemGet_HonorTitle' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_HornTmb) == 0x000450, "Member 'UWBP_ItemGet_Window_C::ItemGet_HornTmb' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemGet_Sticker) == 0x000458, "Member 'UWBP_ItemGet_Window_C::ItemGet_Sticker' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemIcom_Eff_01) == 0x000460, "Member 'UWBP_ItemGet_Window_C::ItemIcom_Eff_01' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemIcom_Eff_02) == 0x000468, "Member 'UWBP_ItemGet_Window_C::ItemIcom_Eff_02' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, MouseInteraction) == 0x000470, "Member 'UWBP_ItemGet_Window_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, StickerImage_Default) == 0x000478, "Member 'UWBP_ItemGet_Window_C::StickerImage_Default' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, StickerImage_NX) == 0x000480, "Member 'UWBP_ItemGet_Window_C::StickerImage_NX' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, UnknownGadget) == 0x000488, "Member 'UWBP_ItemGet_Window_C::UnknownGadget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, WBP_GadgetCustom_Sub_GadgetPlate) == 0x000490, "Member 'UWBP_ItemGet_Window_C::WBP_GadgetCustom_Sub_GadgetPlate' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, WBP_HonorTitle_Plate) == 0x000498, "Member 'UWBP_ItemGet_Window_C::WBP_HonorTitle_Plate' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, WidgetSwitcher_Reward) == 0x0004A0, "Member 'UWBP_ItemGet_Window_C::WidgetSwitcher_Reward' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DisplayIndex) == 0x0004A8, "Member 'UWBP_ItemGet_Window_C::DisplayIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DisplayNum) == 0x0004AC, "Member 'UWBP_ItemGet_Window_C::DisplayNum' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, DisplayParam) == 0x0004B0, "Member 'UWBP_ItemGet_Window_C::DisplayParam' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemIconTexture) == 0x0004C0, "Member 'UWBP_ItemGet_Window_C::ItemIconTexture' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ItemCountLayoutWidget) == 0x0004C8, "Member 'UWBP_ItemGet_Window_C::ItemCountLayoutWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, WindowZOrder) == 0x0004D0, "Member 'UWBP_ItemGet_Window_C::WindowZOrder' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, TitleDefaultFontSize) == 0x0004D4, "Member 'UWBP_ItemGet_Window_C::TitleDefaultFontSize' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, bStartedOne) == 0x0004D8, "Member 'UWBP_ItemGet_Window_C::bStartedOne' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, bRivalReward) == 0x0004D9, "Member 'UWBP_ItemGet_Window_C::bRivalReward' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, ForceCount) == 0x0004E0, "Member 'UWBP_ItemGet_Window_C::ForceCount' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, TargetTexture) == 0x0004E8, "Member 'UWBP_ItemGet_Window_C::TargetTexture' has a wrong offset!");
static_assert(offsetof(UWBP_ItemGet_Window_C, Reward_Type) == 0x0004F0, "Member 'UWBP_ItemGet_Window_C::Reward_Type' has a wrong offset!");

}

