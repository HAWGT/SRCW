#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterTruckActor

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "UNION_structs.hpp"
#include "UNION_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MonsterTruckActor.BP_MonsterTruckActor_C
// 0x0068 (0x0C60 - 0x0BF8)
class ABP_MonsterTruckActor_C final : public AMonsterTruckInRaceActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BF8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_CountDown_CountDown_F5ABB8A74F83AC7C8C8844AA86BCD341; // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_CountDown__Direction_F5ABB8A74F83AC7C8C8844AA86BCD341; // 0x0C04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C05[0x3];                                      // 0x0C05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_CountDown;                                // 0x0C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMonsterTruckCockpitData               MonsterTruckData;                                  // 0x0C10(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_MonsterTruckActor(int32 EntryPoint);
	void LoadingCockpitAnimation(const EDriverSize InDriverSize);
	void LoadingCockpitMesh(const EDriverSize InDriverSize);
	void OnCountDown(bool bIsPlay, const struct FLinearColor& Color, bool bWithDriver);
	void Timeline_CountDown__FinishedFunc();
	void Timeline_CountDown__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MonsterTruckActor_C">();
	}
	static class ABP_MonsterTruckActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MonsterTruckActor_C>();
	}
};
static_assert(alignof(ABP_MonsterTruckActor_C) == 0x000008, "Wrong alignment on ABP_MonsterTruckActor_C");
static_assert(sizeof(ABP_MonsterTruckActor_C) == 0x000C60, "Wrong size on ABP_MonsterTruckActor_C");
static_assert(offsetof(ABP_MonsterTruckActor_C, UberGraphFrame) == 0x000BF8, "Member 'ABP_MonsterTruckActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MonsterTruckActor_C, Timeline_CountDown_CountDown_F5ABB8A74F83AC7C8C8844AA86BCD341) == 0x000C00, "Member 'ABP_MonsterTruckActor_C::Timeline_CountDown_CountDown_F5ABB8A74F83AC7C8C8844AA86BCD341' has a wrong offset!");
static_assert(offsetof(ABP_MonsterTruckActor_C, Timeline_CountDown__Direction_F5ABB8A74F83AC7C8C8844AA86BCD341) == 0x000C04, "Member 'ABP_MonsterTruckActor_C::Timeline_CountDown__Direction_F5ABB8A74F83AC7C8C8844AA86BCD341' has a wrong offset!");
static_assert(offsetof(ABP_MonsterTruckActor_C, Timeline_CountDown) == 0x000C08, "Member 'ABP_MonsterTruckActor_C::Timeline_CountDown' has a wrong offset!");
static_assert(offsetof(ABP_MonsterTruckActor_C, MonsterTruckData) == 0x000C10, "Member 'ABP_MonsterTruckActor_C::MonsterTruckData' has a wrong offset!");

}

