#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_StatusInfo_Sub_RaceRuleTable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_StatusInfo_Sub_RaceRuleTable.WBP_StatusInfo_Sub_RaceRuleTable_C
// 0x00A8 (0x0388 - 0x02E0)
class UWBP_StatusInfo_Sub_RaceRuleTable_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select_SP_Loop;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_Loop;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Active_SP_Loop;                                    // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Active_Loop;                                       // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 base;                                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_SP;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_SP_1;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Blink_Cursor;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cursor_01;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DMY_RaceRuleIcon;                                  // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_01;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_02;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionUIButton*                         MouseInteraction;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RaceFlag;                                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_RuleName;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRichTextBlock*                    TXT_SP_Rule;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Is_Special;                                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           SpecialRuleTextArray;                              // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_StatusInfo_Sub_RaceRuleTable(int32 EntryPoint);
	void SetEmpty();
	void SetRule(const struct FFestaRuleInfomation& FestaRuleInfo, bool IsDefault, int32 SpecialNo);
	void SetSelect(bool ToSelect);
	void StartActiveAnim();
	void StartSelectAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_StatusInfo_Sub_RaceRuleTable_C">();
	}
	static class UWBP_StatusInfo_Sub_RaceRuleTable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_StatusInfo_Sub_RaceRuleTable_C>();
	}
};
static_assert(alignof(UWBP_StatusInfo_Sub_RaceRuleTable_C) == 0x000008, "Wrong alignment on UWBP_StatusInfo_Sub_RaceRuleTable_C");
static_assert(sizeof(UWBP_StatusInfo_Sub_RaceRuleTable_C) == 0x000388, "Wrong size on UWBP_StatusInfo_Sub_RaceRuleTable_C");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Select_SP_Loop) == 0x0002E8, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Select_SP_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Select_Loop) == 0x0002F0, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Select_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Active_SP_Loop) == 0x0002F8, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Active_SP_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Active_Loop) == 0x000300, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Active_Loop' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, base) == 0x000308, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::base' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Base_SP) == 0x000310, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Base_SP' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Base_SP_1) == 0x000318, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Base_SP_1' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Blink_Cursor) == 0x000320, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Blink_Cursor' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Cursor_01) == 0x000328, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Cursor_01' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, DMY_RaceRuleIcon) == 0x000330, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::DMY_RaceRuleIcon' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Line_01) == 0x000338, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Line_01' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Line_02) == 0x000340, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Line_02' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, MouseInteraction) == 0x000348, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::MouseInteraction' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, RaceFlag) == 0x000350, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::RaceFlag' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, TXT_RuleName) == 0x000358, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::TXT_RuleName' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, TXT_SP_Rule) == 0x000360, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::TXT_SP_Rule' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, WidgetSwitcher_0) == 0x000368, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, Is_Special) == 0x000370, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::Is_Special' has a wrong offset!");
static_assert(offsetof(UWBP_StatusInfo_Sub_RaceRuleTable_C, SpecialRuleTextArray) == 0x000378, "Member 'UWBP_StatusInfo_Sub_RaceRuleTable_C::SpecialRuleTextArray' has a wrong offset!");

}

