#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Race_HUD_Sub_Festa_TeamHUD

#include "Basic.hpp"

#include "UnionSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "UnionRun_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Race_HUD_Sub_Festa_TeamHUD.WBP_Race_HUD_Sub_Festa_TeamHUD_C
// 0x0100 (0x04C8 - 0x03C8)
class UWBP_Race_HUD_Sub_Festa_TeamHUD_C final : public URaceUISubTeamHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 DMY_TeamIcon_01_Center;                            // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               DSP_TeamGauge;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge_C* WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge;     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Race_HUD_Sub_RuleCount_C*          WBP_Race_HUD_Sub_RuleCount;                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUnionRacers*                           TmpUnionRacers;                                    // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUnionRacerStatusObject*                PlayerRacerStatusObject;                           // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 DispRacerIndex;                                    // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWBP_Race_HUD_Sub_Festa_TeamHUD_CharaInfo_C*> HUDCharaInfo;                         // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsValidTeamHUD;                                    // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         ImageCrownList;                                    // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         TopGroupID;                                        // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerGroupIndex;                                  // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TmpInt;                                            // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Race_HUD_Sub_Festa_TeamGroup_P1_C* WBPGroup;                                          // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<int32, int32>                            LocalPanelIndexMap;                                // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 TopGroupIDArr;                                     // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TeamInfoMaxNum;                                    // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         TeamIconArray;                                     // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ChangeGaugeBoost();
	void ChangeGaugeNormal();
	void Construct();
	void CustomEvent();
	bool ExecChangeRank(int32 PanelIndex, EDriverId DriverId, bool IsDispPlayer, int32 Rank);
	bool ExecPlayChangeRank(int32 PanelIndex, EDriverId DriverId, bool IsDispPlayer, int32 Rank);
	bool ExecSetRankOnly(int32 PanelIndex, int32 Rank);
	void ExecuteUbergraph_WBP_Race_HUD_Sub_Festa_TeamHUD(int32 EntryPoint);
	void Get_Normal_Gauge_Percent(double* GaugePercent);
	void GetCrownIndex(int32 Input, int32* Output);
	void GetTeamRank(int32* NextTeamRank);
	void InitializeRingGauge();
	void PlayChrageEffect(int32 RacerIndex, bool isSingle, double ChargePer);
	void PlayEffectBase();
	void SetBaseColor();
	void SetBoostGaugePercent(double Percent);
	void SetCrown(bool IsVisible_0, TArray<int32>* OutTopGroupList);
	void SetDirverIcon();
	void SetDisplayInfo(int32 PlayerIndex);
	void SetModeBattleRush(bool IsModeBattleRush);
	void SetNormalGaugePercent(double Percent);
	void SetPanelRank(class UWBP_Race_HUD_Sub_Festa_TeamGroup_C* RanelHHUD, int32 Rank);
	void SetPreStartInfo(bool IsValid, int32 PlayerIndex, class UWBP_Race_HUD_Sub_Festa_TeamGroup_P1_C* InWBPGroup);
	void SetRankForSingle(int32 newParam);
	void SetRankTimer();
	void SetTeamIcon(int32 TeamId, int32 WindowNo);
	void SetTeamInfo();
	void SetTeamRank(int32 TeamRank);
	void StopChargeEffect();
	void UpdateCharaInfo(bool IsForce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Race_HUD_Sub_Festa_TeamHUD_C">();
	}
	static class UWBP_Race_HUD_Sub_Festa_TeamHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Race_HUD_Sub_Festa_TeamHUD_C>();
	}
};
static_assert(alignof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C) == 0x000008, "Wrong alignment on UWBP_Race_HUD_Sub_Festa_TeamHUD_C");
static_assert(sizeof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C) == 0x0004C8, "Wrong size on UWBP_Race_HUD_Sub_Festa_TeamHUD_C");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, UberGraphFrame) == 0x0003C8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, DMY_TeamIcon_01_Center) == 0x0003D0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::DMY_TeamIcon_01_Center' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, DSP_TeamGauge) == 0x0003D8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::DSP_TeamGauge' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge) == 0x0003E0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::WBP_Race_HUD_Sub_Festa_TeamHUD_RingGauge' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, WBP_Race_HUD_Sub_RuleCount) == 0x0003E8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::WBP_Race_HUD_Sub_RuleCount' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TmpUnionRacers) == 0x0003F0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TmpUnionRacers' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, PlayerRacerStatusObject) == 0x0003F8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::PlayerRacerStatusObject' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, DispRacerIndex) == 0x000400, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::DispRacerIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, HUDCharaInfo) == 0x000410, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::HUDCharaInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, IsValidTeamHUD) == 0x000420, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::IsValidTeamHUD' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, ImageCrownList) == 0x000428, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::ImageCrownList' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TopGroupID) == 0x000438, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TopGroupID' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, PlayerGroupIndex) == 0x00043C, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::PlayerGroupIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TmpInt) == 0x000440, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TmpInt' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, WBPGroup) == 0x000448, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::WBPGroup' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, LocalPanelIndexMap) == 0x000450, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::LocalPanelIndexMap' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TopGroupIDArr) == 0x0004A0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TopGroupIDArr' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TeamInfoMaxNum) == 0x0004B0, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TeamInfoMaxNum' has a wrong offset!");
static_assert(offsetof(UWBP_Race_HUD_Sub_Festa_TeamHUD_C, TeamIconArray) == 0x0004B8, "Member 'UWBP_Race_HUD_Sub_Festa_TeamHUD_C::TeamIconArray' has a wrong offset!");

}

